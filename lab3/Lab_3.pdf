{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2\n",
    "import numpy as np\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.preprocessing import normalize\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay\n",
    "from keras.utils import to_categorical\n",
    "from keras.preprocessing.image import load_img, img_to_array"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Loading and Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_dir =  r\"UCMerced_LandUse\\UCMerced_LandUse\\Images\" \n",
    "\n",
    "classes = sorted(os.listdir(data_dir)) \n",
    "image_size = (256, 256)  \n",
    "num_classes = len(classes)\n",
    "\n",
    "\n",
    "images = []\n",
    "labels = []\n",
    "\n",
    "for idx, class_name in enumerate(classes):\n",
    "    class_dir = os.path.join(data_dir, class_name)\n",
    "    image_files = sorted(os.listdir(class_dir))\n",
    "    \n",
    "    for image_file in image_files:\n",
    "        image_path = os.path.join(class_dir, image_file)\n",
    "        img = cv2.imread(image_path)\n",
    "        img = cv2.resize(img, image_size)  \n",
    "        images.append(img)\n",
    "        labels.append(idx) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['agricultural',\n",
       " 'airplane',\n",
       " 'baseballdiamond',\n",
       " 'beach',\n",
       " 'buildings',\n",
       " 'chaparral',\n",
       " 'denseresidential',\n",
       " 'forest',\n",
       " 'freeway',\n",
       " 'golfcourse',\n",
       " 'harbor',\n",
       " 'intersection',\n",
       " 'mediumresidential',\n",
       " 'mobilehomepark',\n",
       " 'overpass',\n",
       " 'parkinglot',\n",
       " 'river',\n",
       " 'runway',\n",
       " 'sparseresidential',\n",
       " 'storagetanks',\n",
       " 'tenniscourt']"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "classes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "images = np.array(images)\n",
    "labels = np.array(labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0,  0,  0, ..., 20, 20, 20])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[[ 45,  41,  44],\n",
       "         [ 56,  50,  53],\n",
       "         [ 50,  44,  47],\n",
       "         ...,\n",
       "         [122, 126, 125],\n",
       "         [130, 137, 137],\n",
       "         [111, 119, 119]],\n",
       "\n",
       "        [[ 42,  38,  41],\n",
       "         [ 46,  43,  46],\n",
       "         [ 45,  41,  44],\n",
       "         ...,\n",
       "         [ 81,  83,  83],\n",
       "         [118, 124, 124],\n",
       "         [126, 131, 135]],\n",
       "\n",
       "        [[ 43,  39,  42],\n",
       "         [ 44,  41,  44],\n",
       "         [ 44,  40,  43],\n",
       "         ...,\n",
       "         [ 91,  95,  90],\n",
       "         [ 98, 103,  99],\n",
       "         [ 97,  99, 101]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[175, 173, 175],\n",
       "         [189, 191, 190],\n",
       "         [221, 223, 223],\n",
       "         ...,\n",
       "         [136, 144, 144],\n",
       "         [126, 135, 135],\n",
       "         [118, 123, 124]],\n",
       "\n",
       "        [[120, 113, 120],\n",
       "         [150, 147, 151],\n",
       "         [165, 166, 168],\n",
       "         ...,\n",
       "         [117, 121, 123],\n",
       "         [117, 121, 126],\n",
       "         [124, 129, 133]],\n",
       "\n",
       "        [[127, 118, 128],\n",
       "         [110, 103, 113],\n",
       "         [118, 114, 122],\n",
       "         ...,\n",
       "         [ 99, 101, 101],\n",
       "         [ 94,  95,  99],\n",
       "         [127, 129, 135]]],\n",
       "\n",
       "\n",
       "       [[[ 95,  97,  94],\n",
       "         [ 87,  92,  89],\n",
       "         [100, 108, 104],\n",
       "         ...,\n",
       "         [112, 116, 114],\n",
       "         [100,  99,  97],\n",
       "         [104, 106, 100]],\n",
       "\n",
       "        [[108, 111, 108],\n",
       "         [112, 116, 113],\n",
       "         [114, 118, 115],\n",
       "         ...,\n",
       "         [122, 127, 131],\n",
       "         [115, 116, 116],\n",
       "         [120, 125, 118]],\n",
       "\n",
       "        [[110, 112, 115],\n",
       "         [109, 109, 112],\n",
       "         [117, 120, 119],\n",
       "         ...,\n",
       "         [125, 133, 136],\n",
       "         [105, 107, 112],\n",
       "         [107, 114, 111]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[107, 108, 107],\n",
       "         [ 85,  87,  88],\n",
       "         [ 88,  86,  91],\n",
       "         ...,\n",
       "         [ 94,  95, 120],\n",
       "         [ 92,  92, 115],\n",
       "         [ 93,  93, 114]],\n",
       "\n",
       "        [[114, 117, 116],\n",
       "         [112, 116, 114],\n",
       "         [106, 109, 108],\n",
       "         ...,\n",
       "         [ 91,  91, 115],\n",
       "         [ 91,  91, 113],\n",
       "         [ 83,  83, 104]],\n",
       "\n",
       "        [[117, 119, 122],\n",
       "         [125, 130, 128],\n",
       "         [126, 132, 128],\n",
       "         ...,\n",
       "         [ 91,  92, 114],\n",
       "         [ 93,  94, 116],\n",
       "         [ 86,  87, 108]]],\n",
       "\n",
       "\n",
       "       [[[ 85,  85,  88],\n",
       "         [ 79,  80,  84],\n",
       "         [ 92,  97,  97],\n",
       "         ...,\n",
       "         [100, 110, 101],\n",
       "         [109, 118, 110],\n",
       "         [ 96, 105, 100]],\n",
       "\n",
       "        [[112, 111, 114],\n",
       "         [116, 115, 119],\n",
       "         [ 89,  90,  93],\n",
       "         ...,\n",
       "         [106, 118, 111],\n",
       "         [100, 111, 103],\n",
       "         [105, 113, 106]],\n",
       "\n",
       "        [[113, 113, 120],\n",
       "         [136, 132, 139],\n",
       "         [131, 128, 132],\n",
       "         ...,\n",
       "         [122, 134, 130],\n",
       "         [106, 118, 114],\n",
       "         [105, 115, 110]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[ 89,  91,  87],\n",
       "         [ 80,  79,  79],\n",
       "         [ 84,  84,  85],\n",
       "         ...,\n",
       "         [103, 114, 109],\n",
       "         [107, 114, 112],\n",
       "         [ 96,  99, 100]],\n",
       "\n",
       "        [[118, 124, 117],\n",
       "         [ 97,  97,  96],\n",
       "         [ 82,  81,  83],\n",
       "         ...,\n",
       "         [103, 115, 114],\n",
       "         [105, 114, 111],\n",
       "         [107, 112, 108]],\n",
       "\n",
       "        [[116, 124, 121],\n",
       "         [102, 106, 104],\n",
       "         [107, 111, 109],\n",
       "         ...,\n",
       "         [116, 128, 133],\n",
       "         [103, 113, 111],\n",
       "         [108, 118, 112]]],\n",
       "\n",
       "\n",
       "       ...,\n",
       "\n",
       "\n",
       "       [[[137, 139, 151],\n",
       "         [136, 137, 150],\n",
       "         [143, 145, 157],\n",
       "         ...,\n",
       "         [118, 128, 141],\n",
       "         [119, 129, 141],\n",
       "         [117, 128, 140]],\n",
       "\n",
       "        [[137, 139, 151],\n",
       "         [135, 138, 150],\n",
       "         [141, 143, 156],\n",
       "         ...,\n",
       "         [118, 128, 140],\n",
       "         [116, 127, 140],\n",
       "         [117, 127, 139]],\n",
       "\n",
       "        [[135, 138, 150],\n",
       "         [137, 141, 153],\n",
       "         [139, 142, 152],\n",
       "         ...,\n",
       "         [117, 128, 140],\n",
       "         [117, 129, 141],\n",
       "         [116, 127, 140]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[117, 133, 137],\n",
       "         [121, 137, 141],\n",
       "         [122, 138, 142],\n",
       "         ...,\n",
       "         [101, 125, 121],\n",
       "         [ 95, 122, 116],\n",
       "         [ 94, 121, 115]],\n",
       "\n",
       "        [[116, 131, 134],\n",
       "         [120, 136, 140],\n",
       "         [122, 138, 142],\n",
       "         ...,\n",
       "         [104, 127, 125],\n",
       "         [ 99, 123, 119],\n",
       "         [ 94, 121, 114]],\n",
       "\n",
       "        [[111, 128, 130],\n",
       "         [116, 133, 134],\n",
       "         [118, 135, 137],\n",
       "         ...,\n",
       "         [105, 126, 125],\n",
       "         [100, 124, 123],\n",
       "         [ 99, 123, 119]]],\n",
       "\n",
       "\n",
       "       [[[126, 139, 137],\n",
       "         [125, 137, 135],\n",
       "         [126, 139, 138],\n",
       "         ...,\n",
       "         [ 72,  82,  69],\n",
       "         [ 80,  91,  80],\n",
       "         [ 89, 100,  91]],\n",
       "\n",
       "        [[119, 135, 132],\n",
       "         [118, 137, 134],\n",
       "         [122, 138, 138],\n",
       "         ...,\n",
       "         [ 76,  86,  73],\n",
       "         [ 81,  91,  79],\n",
       "         [ 89,  99,  92]],\n",
       "\n",
       "        [[120, 136, 134],\n",
       "         [120, 136, 134],\n",
       "         [120, 139, 138],\n",
       "         ...,\n",
       "         [ 80,  87,  76],\n",
       "         [ 83,  94,  85],\n",
       "         [ 90,  99,  92]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[139, 138, 135],\n",
       "         [147, 144, 141],\n",
       "         [138, 135, 131],\n",
       "         ...,\n",
       "         [ 66,  67,  50],\n",
       "         [ 67,  70,  54],\n",
       "         [ 67,  68,  53]],\n",
       "\n",
       "        [[146, 143, 142],\n",
       "         [146, 143, 142],\n",
       "         [133, 130, 125],\n",
       "         ...,\n",
       "         [ 60,  58,  41],\n",
       "         [ 58,  58,  43],\n",
       "         [ 61,  59,  45]],\n",
       "\n",
       "        [[149, 148, 146],\n",
       "         [141, 139, 137],\n",
       "         [126, 124, 118],\n",
       "         ...,\n",
       "         [ 55,  57,  42],\n",
       "         [ 53,  53,  40],\n",
       "         [ 54,  56,  42]]],\n",
       "\n",
       "\n",
       "       [[[ 90,  98,  86],\n",
       "         [ 85,  93,  79],\n",
       "         [ 74,  83,  66],\n",
       "         ...,\n",
       "         [ 94, 111, 104],\n",
       "         [ 95, 110, 103],\n",
       "         [ 96, 111, 106]],\n",
       "\n",
       "        [[ 92,  98,  88],\n",
       "         [ 86,  97,  81],\n",
       "         [ 72,  81,  64],\n",
       "         ...,\n",
       "         [ 97, 114, 108],\n",
       "         [ 95, 113, 105],\n",
       "         [ 97, 112, 108]],\n",
       "\n",
       "        [[ 89,  98,  84],\n",
       "         [ 78,  90,  74],\n",
       "         [ 65,  71,  54],\n",
       "         ...,\n",
       "         [ 98, 114, 113],\n",
       "         [ 98, 114, 113],\n",
       "         [102, 115, 114]],\n",
       "\n",
       "        ...,\n",
       "\n",
       "        [[ 99, 120, 103],\n",
       "         [ 86, 107,  85],\n",
       "         [ 78,  99,  75],\n",
       "         ...,\n",
       "         [ 84,  77,  64],\n",
       "         [ 79,  72,  58],\n",
       "         [ 77,  69,  54]],\n",
       "\n",
       "        [[ 78,  99,  75],\n",
       "         [ 72,  93,  65],\n",
       "         [ 80, 100,  81],\n",
       "         ...,\n",
       "         [ 86,  80,  67],\n",
       "         [ 94,  87,  77],\n",
       "         [ 90,  86,  73]],\n",
       "\n",
       "        [[ 54,  73,  44],\n",
       "         [ 65,  84,  59],\n",
       "         [ 79,  98,  76],\n",
       "         ...,\n",
       "         [ 78,  71,  55],\n",
       "         [ 84,  78,  63],\n",
       "         [ 86,  80,  66]]]], dtype=uint8)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "images"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Dataset Splitting: with ensurance that the split mainains a balance of images from different categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def train_test_split(X, y, test_size=0.2, random_state=None):\n",
    "    if random_state is not None:\n",
    "        np.random.seed(random_state)\n",
    "\n",
    "    indices = np.arange(len(X))\n",
    "    np.random.shuffle(indices)\n",
    "    \n",
    "\n",
    "    test_size = int(len(X) * test_size)\n",
    "    train_size = len(X) - test_size\n",
    "    \n",
    "    X_train = X[indices[:train_size]]\n",
    "    X_test = X[indices[train_size:]]\n",
    "    y_train = y[indices[:train_size]]\n",
    "    y_test = y[indices[train_size:]]\n",
    "    \n",
    "    return X_train, X_test, y_train, y_test\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training set: X=(1680, 256, 256, 3), y=(1680,)\n",
      "Testing set: X=(420, 256, 256, 3), y=(420,)\n"
     ]
    }
   ],
   "source": [
    "\n",
    "X_train, X_test = [], []\n",
    "y_train, y_test = [], []\n",
    "for class_idx in range(num_classes):\n",
    "    class_images = images[labels == class_idx]\n",
    "    class_labels = labels[labels == class_idx]\n",
    "    \n",
    "    X_train_cls, X_test_cls, y_train_cls, y_test_cls = train_test_split(\n",
    "        class_images, class_labels, test_size=0.2, random_state=42\n",
    "    )\n",
    "    \n",
    "    X_train.extend(X_train_cls)\n",
    "    y_train.extend(y_train_cls)\n",
    "    X_test.extend(X_test_cls)\n",
    "    y_test.extend(y_test_cls)\n",
    "\n",
    "X_train, y_train = np.array(X_train), np.array(y_train)\n",
    "X_test, y_test = np.array(X_test), np.array(y_test)\n",
    "\n",
    "print(f\"Training set: X={X_train.shape}, y={y_train.shape}\")\n",
    "print(f\"Testing set: X={X_test.shape}, y={y_test.shape}\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### For each class, we use train_test_split to ensure the train-test split maintains class balance.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### SIFT Feature Extraction : For each image in the dataset:\n",
    "– Detect and compute SIFT key points and descriptors,\n",
    "– Store the descriptors along with their corresponding class labels."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "train_descriptors = []\n",
    "\n",
    "for img in X_train:\n",
    "\n",
    "    img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n",
    "    sift = cv2.SIFT_create()\n",
    "    keypoints, descriptors = sift.detectAndCompute(img, None)\n",
    "    \n",
    "    if descriptors is not None:\n",
    "        train_descriptors.append(descriptors) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([[ 5.,  0.,  0., ...,  8.,  2., 16.],\n",
       "        [52., 15.,  2., ...,  3.,  0.,  0.],\n",
       "        [60.,  5.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 7.,  1.,  0., ...,  3.,  0., 14.],\n",
       "        [72.,  3.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 5.,  0.,  0., ...,  2.,  0.,  3.]], dtype=float32),\n",
       " array([[11.,  4., 17., ...,  0.,  0.,  5.],\n",
       "        [ 8.,  1.,  0., ...,  4., 18., 44.],\n",
       "        [49.,  0.,  0., ...,  0.,  0., 21.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  1.,  0., 13.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  5., 14.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  1.,  2.]], dtype=float32),\n",
       " array([[  4.,   1.,   0., ...,  22.,   0.,  38.],\n",
       "        [ 49.,  23.,   0., ...,   3.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  21.,   0.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  82.],\n",
       "        [127.,   8.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   8.,   0.,  20.]], dtype=float32),\n",
       " array([[ 3.,  0.,  0., ...,  2.,  3., 16.],\n",
       "        [28.,  4.,  1., ..., 13.,  0.,  3.],\n",
       "        [34.,  0.,  0., ...,  0.,  0., 29.],\n",
       "        ...,\n",
       "        [27.,  3.,  1., ...,  0.,  0.,  6.],\n",
       "        [51.,  1.,  0., ...,  9.,  3., 51.],\n",
       "        [26.,  1.,  0., ...,  0.,  0.,  3.]], dtype=float32),\n",
       " array([[57.,  1.,  0., ...,  0.,  1., 40.],\n",
       "        [33.,  0.,  0., ...,  3.,  0.,  2.],\n",
       "        [22., 12., 19., ..., 81.,  6.,  0.],\n",
       "        ...,\n",
       "        [16.,  4.,  1., ...,  3.,  0.,  7.],\n",
       "        [19.,  8.,  3., ...,  6.,  1., 16.],\n",
       "        [13.,  2.,  0., ...,  7.,  3., 41.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  35.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  30.,   0.,   0.],\n",
       "        [110.,  65.,   3., ...,   4.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 15.,  12.,  15., ...,   9.,   1.,   3.],\n",
       "        [  4.,  29.,   8., ...,   4.,   1.,   9.],\n",
       "        [ 10.,   1.,   1., ...,  19.,   5.,   1.]], dtype=float32),\n",
       " array([[  2.,  10.,   9., ...,   0.,   0.,   0.],\n",
       "        [  3.,   9.,   1., ...,   6.,   0.,   1.],\n",
       "        [ 18.,  13.,  31., ...,  92.,   6.,  10.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   5.,  25.,  50.],\n",
       "        [  5.,  37., 120., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   1.,  12.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  13.,   3.,   5.],\n",
       "        [138.,  61.,   6., ...,   0.,   0.,   0.],\n",
       "        [134.,  19.,   4., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  5.,   1.,   0., ...,  12.,   3.,  22.],\n",
       "        [  0.,   0.,   0., ...,  15.,   1.,  10.],\n",
       "        [ 98.,  54.,  15., ...,  64.,  47.,   3.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   4.,   0.,   2.],\n",
       "        [131.,  14.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  27.,   1.,   1.],\n",
       "        ...,\n",
       "        [ 87.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   4.,   0.,   2.],\n",
       "        [142.,  13.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 87.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   4.,   1.,   5.],\n",
       "        [ 18.,  26.,  87., ...,  28.,  49.,  38.],\n",
       "        ...,\n",
       "        [112.,  22.,   3., ...,  10.,   0.,   0.],\n",
       "        [  3.,  13.,   0., ...,  13.,   1.,   0.],\n",
       "        [  2.,  11.,   6., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[37.,  3.,  3., ...,  0.,  0.,  0.],\n",
       "        [19.,  4.,  2., ...,  4.,  1.,  0.],\n",
       "        [42.,  3.,  1., ...,  3.,  1.,  0.],\n",
       "        ...,\n",
       "        [ 8.,  1.,  0., ...,  5.,  0.,  8.],\n",
       "        [ 8.,  0.,  0., ..., 24.,  3., 13.],\n",
       "        [ 0.,  0.,  0., ..., 16.,  1., 27.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 29.,  6.,  6.],\n",
       "        [ 1.,  4., 15., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 12., 16., 19.],\n",
       "        ...,\n",
       "        [ 2.,  9., 44., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 67., 68., 70.],\n",
       "        [ 0.,  0.,  0., ...,  7.,  2.,  2.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  2.,  1.,  6.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 36.,  0.,  1.],\n",
       "        ...,\n",
       "        [60.,  4.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  7.,  0.,  7.],\n",
       "        [ 0.,  0.,  0., ..., 10.,  0.,  3.]], dtype=float32),\n",
       " array([[22., 26., 13., ...,  8., 54., 75.],\n",
       "        [13.,  8.,  1., ..., 26., 22., 69.],\n",
       "        [12.,  6.,  8., ..., 63., 65., 13.],\n",
       "        ...,\n",
       "        [48., 16., 13., ..., 27., 31.,  5.],\n",
       "        [ 4.,  8., 53., ...,  4., 22., 40.],\n",
       "        [ 1., 10.,  5., ..., 12.,  3.,  0.]], dtype=float32),\n",
       " array([[ 22.,   8.,   3., ...,   9.,   1.,  25.],\n",
       "        [ 27.,   2.,   1., ...,   0.,   0.,  33.],\n",
       "        [ 81.,   4.,   0., ...,   1.,   0.,   2.],\n",
       "        ...,\n",
       "        [109.,   1.,   0., ...,  11.,   1.,  11.],\n",
       "        [ 54.,   2.,   0., ...,   3.,   0.,   6.],\n",
       "        [ 64.,  11.,   1., ...,   6.,   7.,   8.]], dtype=float32),\n",
       " array([[ 20.,  23.,  28., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  18.,   7.,   0.],\n",
       "        [  1.,   0.,   0., ...,  26.,  65.,  16.],\n",
       "        ...,\n",
       "        [  1.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [  2.,  85., 134., ...,   3.,   7.,   3.],\n",
       "        [  0.,   0.,   0., ...,   8.,   7.,  42.]], dtype=float32),\n",
       " array([[25., 45., 28., ...,  1.,  0.,  0.],\n",
       "        [29., 19., 17., ...,  0.,  0.,  0.],\n",
       "        [40.,  7.,  2., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [19.,  5.,  2., ...,  0.,  0.,  1.],\n",
       "        [ 9.,  5.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 5.,  0.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 35.,  4., 39.],\n",
       "        [60., 20.,  4., ...,  0.,  0.,  0.],\n",
       "        [48.,  8.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [46.,  5.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  9.],\n",
       "        [28.,  6.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 73.,  33.,   0., ...,   0.,   0.,   0.],\n",
       "        [  7.,   0.,   0., ...,  33.,   1.,   2.],\n",
       "        [121.,   9.,   0., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 18.,   0.,   0., ...,   1.,   0.,   5.],\n",
       "        [136.,   4.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 46.,   3.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 18.,  83.,  92., ...,   0.,   0.,   0.],\n",
       "        [  0.,  11.,  40., ...,  11.,   3.,  14.],\n",
       "        [  0.,   0.,   0., ..., 114.,  38.,  12.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  49.,   4.,   1.],\n",
       "        [  0.,   0.,   0., ...,  58.,  58.,  24.],\n",
       "        [  0.,   0.,   4., ...,  19.,  33.,  15.]], dtype=float32),\n",
       " array([[ 35.,  36.,  14., ...,  42.,   1.,   0.],\n",
       "        [ 28.,   3.,   1., ...,  21.,   1.,   2.],\n",
       "        [ 80.,  21.,   1., ...,   3.,   1.,   4.],\n",
       "        ...,\n",
       "        [ 72.,  36.,   2., ..., 104.,  54.,  16.],\n",
       "        [ 23.,   7.,   3., ...,   4.,   2.,   4.],\n",
       "        [ 25.,   1.,   0., ...,   1.,   0.,   1.]], dtype=float32),\n",
       " array([[131.,  12.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 54.,   9.,  47., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  24.,   7.,  11.],\n",
       "        ...,\n",
       "        [ 33.,  12.,   3., ...,   0.,   0.,   7.],\n",
       "        [ 73.,   9.,   0., ...,   6.,   0.,   0.],\n",
       "        [ 29.,  22.,   4., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[145.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,   0.,   4.],\n",
       "        [  1.,   0.,   2., ...,   0.,   0.,   5.],\n",
       "        ...,\n",
       "        [ 11.,   0.,   0., ...,   0.,   0.,   4.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,  10.,   0.,   1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  5.,  2., 40.],\n",
       "        [ 0.,  1.,  0., ...,  1.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 38., 12., 22.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  0., ...,  0.,  3., 37.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  1.,  7.],\n",
       "        [45., 10.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 71.,  13.,   0., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 29.,   1.,   0., ...,  13.,   2.,  11.],\n",
       "        ...,\n",
       "        [  9.,   0.,   0., ...,   7.,   1.,   1.],\n",
       "        [125.,  25.,   2., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,  29.,   2.,   1.]], dtype=float32),\n",
       " array([[77., 10.,  2., ...,  5.,  0.,  3.],\n",
       "        [37.,  6.,  1., ..., 23.,  3., 14.],\n",
       "        [72., 13.,  1., ...,  8.,  1., 12.],\n",
       "        ...,\n",
       "        [63.,  1.,  0., ...,  0.,  0., 18.],\n",
       "        [39.,  3.,  1., ...,  0.,  0.,  5.],\n",
       "        [16.,  1.,  0., ...,  5.,  1.,  8.]], dtype=float32),\n",
       " array([[ 15.,  33.,   4.,  12.,  39.,   3.,   0.,   1.,  43.,  39.,  11.,\n",
       "          39.,  80.,   4.,   0.,   1.,  99.,  64.,   4.,  13.,  50.,   6.,\n",
       "           0.,   0.,  27.,  37.,   6.,  18.,  73.,   5.,   0.,   0.,  33.,\n",
       "          22.,   2.,   9.,  74.,  14.,   1.,   2.,  51.,  59.,  13.,  55.,\n",
       "         136.,   8.,   1.,   4., 136., 122.,   5.,   7.,  47.,  26.,   6.,\n",
       "          18.,  49.,  12.,   0.,   2.,  88.,  86.,  11.,  14.,  11.,   1.,\n",
       "           0.,   2.,  50.,  91.,   9.,   4.,  46.,   4.,   1.,   5., 136.,\n",
       "          98.,  13.,  24., 136.,  35.,   1.,   2.,  13.,  33.,  13.,  64.,\n",
       "          46.,  12.,   1.,   7.,  59., 115.,  16.,  18.,   1.,   0.,   0.,\n",
       "           0.,  70.,  47.,   2.,   1.,  16.,   0.,   0.,   0.,  80.,  77.,\n",
       "           4.,   5., 136.,  43.,   1.,   2.,  10.,  12.,   2.,   8.,  39.,\n",
       "          21.,   2.,  14.,  62.,   6.,   0.,   0.],\n",
       "        [ 20.,   7.,   1.,   3.,  50.,  31.,   3.,  12.,  37.,  18.,   6.,\n",
       "          12.,  80.,  58.,   8.,  20.,  66.,  31.,   3.,   3.,  27.,  14.,\n",
       "           3.,  24.,  43.,  46.,   6.,   6.,  24.,  11.,   4.,  22.,  21.,\n",
       "          67.,  49.,  33.,  49.,  11.,   2.,   6.,  29.,  51.,  31.,  90.,\n",
       "         125.,  39.,   2.,   3., 125., 125.,  19.,  13.,  41.,  22.,   2.,\n",
       "          10.,  52.,  48.,   6.,   8.,  64.,  45.,   3.,  10., 120.,  35.,\n",
       "          10.,   6.,  43.,  32.,   5.,  22.,  60.,   8.,   2.,   7., 125.,\n",
       "         125.,  13.,  22., 125.,  21.,   1.,   2.,  33.,  54.,  11.,  38.,\n",
       "          65.,   5.,   0.,   0.,  57.,  70.,   6.,  13., 103.,  27.,   0.,\n",
       "           1.,  39.,  26.,   5.,  11.,  58.,  12.,   0.,   0.,  89.,  94.,\n",
       "           4.,   9., 125.,  17.,   0.,   0.,  28.,  45.,   8.,  23.,  42.,\n",
       "           7.,   0.,   2.,  14.,  45.,   6.,   9.],\n",
       "        [ 41.,  17.,   7.,  45.,  38.,   1.,   0.,   6.,  44.,  17.,   5.,\n",
       "          71.,  77.,   0.,   0.,   4., 124.,  21.,   9.,  53.,  45.,   0.,\n",
       "           0.,   7.,  65.,   6.,   8.,  60.,  43.,   0.,   0.,   6.,  98.,\n",
       "          14.,   6.,  47.,  48.,   7.,   2.,  15.,  61.,  14.,   9., 124.,\n",
       "         124.,   5.,   1.,  10., 124.,  50.,  14.,  73.,  41.,   2.,   1.,\n",
       "          16.,  70.,   9.,   5.,  80., 111.,   0.,   0.,   8.,  50.,   2.,\n",
       "           2.,  15.,  52.,  21.,   7.,  40.,  26.,   3.,   2.,  52., 124.,\n",
       "          73.,  22.,  40., 124.,  13.,   3.,  16.,  29.,  30.,  29., 124.,\n",
       "          44.,   8.,   4.,  53.,  67.,  53.,  16.,  30.,  42.,   9.,   5.,\n",
       "          33.,  23.,   2.,   0.,   5.,  48.,  11.,  11.,  71.,  51.,  12.,\n",
       "           5.,  17., 104.,   9.,   4.,   9.,   7.,  12.,   9.,  64.,  14.,\n",
       "           2.,   3.,  15.,  21.,  47.,  17.,  31.],\n",
       "        [ 38.,   8.,   2.,  19.,  39.,   7.,   0.,  17.,  26.,  12.,   6.,\n",
       "          40.,  93.,  23.,   0.,   3., 110.,  32.,   3.,   6.,  16.,   3.,\n",
       "           0.,   2.,  15.,  13.,   4.,  27.,  64.,  11.,   1.,   3.,  16.,\n",
       "          70.,  21.,  43.,  48.,   1.,   0.,   1.,  30.,  44.,  26., 124.,\n",
       "         124.,   8.,   1.,   3., 124., 112.,  14.,  12.,  30.,   5.,   1.,\n",
       "          13.,  23.,  15.,   4.,  22., 124.,  23.,   1.,   2.,  76.,  24.,\n",
       "           4.,   8.,  32.,  33.,   6.,  28.,  39.,   5.,   2.,  19., 124.,\n",
       "         124.,  19.,  32., 124.,  22.,   1.,   2.,  18.,  22.,  11.,  75.,\n",
       "          32.,   5.,   0.,   0., 124.,  65.,   2.,   6.,  82.,  11.,   1.,\n",
       "           2.,  16.,  16.,   3.,  18.,  16.,   5.,   1.,  14., 114.,  58.,\n",
       "           5.,   6., 124.,  39.,   1.,   4.,  17.,   7.,   3.,   8.,  28.,\n",
       "          11.,   0.,   1.,  67.,  53.,   6.,   2.]], dtype=float32),\n",
       " array([[27., 34.,  1., ..., 37.,  2.,  6.],\n",
       "        [13.,  0.,  0., ...,  6.,  0., 14.],\n",
       "        [33., 23.,  5., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [64.,  1.,  0., ...,  1.,  0.,  0.],\n",
       "        [87., 11.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  0.,  2.]], dtype=float32),\n",
       " array([[ 34.,   0.,   1., ...,   9.,   0.,   1.],\n",
       "        [109.,   3.,   0., ...,   0.,   1.,   3.],\n",
       "        [ 14.,   1.,   1., ...,   2.,   0.,   3.],\n",
       "        ...,\n",
       "        [  4.,   0.,   0., ...,  14.,   0.,  12.],\n",
       "        [ 24.,   7.,   2., ...,  13.,   1.,   2.],\n",
       "        [  9.,   1.,   0., ...,  30.,  14.,  68.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   6.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   5.,   0.,   1.],\n",
       "        [130.,   1.,   0., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 49.,   8.,   0., ...,   0.,   0.,   0.],\n",
       "        [  5.,   0.,   0., ...,   8.,   1.,   7.],\n",
       "        [  0.,   0.,   0., ...,  11.,   0.,  12.]], dtype=float32),\n",
       " array([[ 38.,   5.,   4.,   4.,   8.,  10.,  21.,  44.,  22.,  63.,  39.,\n",
       "           7.,  12.,  25.,  31.,  18.,  13.,  28.,  10.,   0.,   1., 100.,\n",
       "          69.,  17.,  18.,   0.,   0.,   0.,   3.,  23.,  52.,  52.,  83.,\n",
       "          41.,   1.,   2.,  33.,  36.,   6.,  19.,  59.,  71.,  35.,  13.,\n",
       "         104., 114.,   7.,   6., 126.,  65.,   8.,   1.,   3.,  25.,  51.,\n",
       "          51.,   9.,   0.,   0.,   2.,  12.,  72.,  78.,  17.,  36.,  24.,\n",
       "           0.,   0.,   4.,   8.,  64., 122.,  41.,   5.,   0.,   0.,  35.,\n",
       "         126.,  87.,  76., 126.,  67.,  25.,   3.,  13.,  71.,  29.,  45.,\n",
       "          18.,  22.,  38.,  69.,  54.,  35.,   8.,   7.,   9.,  36.,  41.,\n",
       "           0.,   0.,   0.,  40.,  71.,   7.,  22.,  57.,   7.,  36.,  76.,\n",
       "          23.,  34.,  15.,  40.,  17.,   2.,  27.,  79.,  81.,  44.,   5.,\n",
       "          13.,  20.,  16.,  21.,  51.,  77.,  44.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  8.,  3., 14.],\n",
       "        [ 1.,  0.,  1., ...,  4.,  4.,  2.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  3., 13., ...,  5.,  5.,  8.],\n",
       "        [13., 35., 19., ...,  2.,  1.,  7.],\n",
       "        [36.,  2.,  1., ..., 33., 19.,  6.]], dtype=float32),\n",
       " array([[  0.,   0.,   1., ...,  33.,   1.,   2.],\n",
       "        [ 14.,   1.,   0., ...,   8.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,  10.,   0.,  11.],\n",
       "        ...,\n",
       "        [138.,  18.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 10.,   1.,   0., ...,  10.,   0.,  14.],\n",
       "        [ 56.,   7.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 55.,  36.,   1.,   1.,  20.,  28.,  10.,  10.,  20.,  10.,   3.,\n",
       "           4.,  38.,  49.,  20.,  25.,  43.,  11.,   1.,   2.,   5.,  25.,\n",
       "         136.,  70.,   1.,   0.,   0.,   0.,   0.,  71., 107.,  11.,  47.,\n",
       "          35.,   9.,   2.,   9.,   9.,  14.,  21.,  61.,  39.,  12.,  18.,\n",
       "         113.,  34.,   5.,  12., 136.,  65.,   7.,   4.,  10.,  12.,  45.,\n",
       "          77.,  34.,  14.,   5.,   0.,   0.,  45.,  85.,  35.,  13.,  14.,\n",
       "           6.,   6.,   2.,   8.,  49.,  51.,  39.,  13.,   1.,   1.,  39.,\n",
       "         110.,  67.,  75., 136.,  28.,   9.,   0.,   5.,  18.,  53., 136.,\n",
       "          21.,  18.,  11.,   0.,   0.,   1.,   7.,   6.,   8.,  44.,  37.,\n",
       "          27.,  25.,  17.,  11.,   6.,  80., 136.,  24.,   5.,   8.,  14.,\n",
       "          31.,  58.,  83.,  63.,   1.,   0.,   0.,   3.,  58., 136.,   1.,\n",
       "           0.,   0.,   0.,   0.,   1.,   9.,   4.],\n",
       "        [ 18.,  11.,   9.,  12.,   8.,  43.,  34.,  22.,  76.,  20.,   5.,\n",
       "          27.,  49.,  17.,   7.,  37.,  27.,  18.,   9.,  82.,  95.,  20.,\n",
       "           2.,   3.,  31.,  16.,   6.,  21.,  15.,  18.,  18.,   5.,  18.,\n",
       "          34.,  51.,  65.,   7.,   5.,   1.,   2., 123.,  50.,  16.,  27.,\n",
       "          26.,  54.,  18.,  38.,  41.,  11.,   7.,  31.,  79., 123.,  71.,\n",
       "          31.,  30.,  13.,   7.,  31.,  27.,  77.,  59.,  21.,  31.,  13.,\n",
       "          10.,  19.,  23.,  72.,  34.,  25., 123.,  87.,  12.,  42.,  26.,\n",
       "          26.,   5.,  22.,  26.,  80.,  52., 123.,  99.,  45.,  21.,   9.,\n",
       "           7.,  91.,  61.,  22.,  36.,  64.,  30.,   7.,  17.,  24.,  34.,\n",
       "          30.,  26.,  31.,  10.,  11., 119.,  29.,   5.,   7.,  28.,  36.,\n",
       "          11.,  69.,  15.,  18.,   5.,  17., 109., 114.,  30.,  19.,   7.,\n",
       "          37.,  30.,   8.,  17.,  35.,  40.,  15.],\n",
       "        [  3.,   1.,   4.,  65., 108.,  39.,  13.,   8.,  55.,   9.,  14.,\n",
       "          64.,  32.,   3.,  12.,  64.,  25.,   8.,   2.,   9.,  48.,  29.,\n",
       "          53.,  72.,  23.,  12.,   8.,   2.,  27.,  36.,  24.,  16.,  23.,\n",
       "           4.,  23., 108.,  74.,  11.,  31.,  33.,  55.,  32.,  10.,  16.,\n",
       "          48.,  33.,  62.,  50., 108.,  63.,  19.,  20.,  25.,  23.,  63.,\n",
       "          61.,   8.,   6.,  11.,  43., 108.,  81.,  56.,  13.,  76.,  58.,\n",
       "           8.,  18.,  23.,  27.,  10.,  31.,  55.,  27.,   3.,  12.,  52.,\n",
       "          65., 108.,  45.,  82.,  44.,  85.,  86.,  49.,  17.,  50.,  27.,\n",
       "          11.,  30.,  50.,  74.,  66.,  26.,   3.,   2.,  47.,  18.,   4.,\n",
       "           5.,  35.,  43.,  49.,  51.,  73.,  17.,  39.,  87.,  46.,   8.,\n",
       "          21.,  45.,   5.,  14.,  19.,  85., 102.,  37.,  16.,   4.,  15.,\n",
       "          46.,  25.,   8.,   9.,   9.,   6.,   5.],\n",
       "        [ 51.,  33.,  41.,  11.,   1.,   0.,   0.,  18.,  11.,  20.,  71.,\n",
       "          92.,   7.,   0.,   0.,   1.,  99.,  69.,  47.,  35.,   3.,   0.,\n",
       "           1.,  39.,  45.,  38.,  18.,  95.,  42.,   1.,   4.,  26.,  16.,\n",
       "          15.,  48.,  13.,  17.,  21.,  37.,  38.,  24.,  15.,  48.,  84.,\n",
       "          51.,  36.,  28.,  17., 117.,  60.,  21.,  37.,  11.,   3.,  10.,\n",
       "          52.,  37.,  17.,  10.,  86., 104.,  23.,  32.,  19.,  43.,  13.,\n",
       "          20.,  16.,  15.,  17.,  30.,  48.,  40.,   6.,   6.,  15.,  60.,\n",
       "          82., 117.,  89., 117.,  26.,   2.,  14.,  40.,  38., 100.,  66.,\n",
       "          52.,  18.,  20.,  14.,   9.,  16.,  54.,  19.,  45.,  16.,  34.,\n",
       "          18.,   4.,   2.,   9.,  39., 117.,  36.,  40.,  86.,  27.,  10.,\n",
       "          22.,  60.,  70.,  10.,  16.,  98.,  58.,  17.,  12.,  47.,  31.,\n",
       "           9.,  33.,  46.,  49.,  14.,   4.,  19.],\n",
       "        [  5.,  35.,  61.,  52.,  20.,  63.,  19.,   1.,  21.,  29.,  49.,\n",
       "          15.,  14., 115.,  91.,  17.,  62.,  18.,  45.,  13.,  16.,  15.,\n",
       "          16.,  27.,   6.,  14.,  25.,   9.,  58.,  51.,  39.,   8.,   1.,\n",
       "          37.,  74.,  64.,  53.,  44.,   2.,   0.,  10.,  72., 119.,  39.,\n",
       "          26.,  38.,   8.,   3.,  93.,  68., 119.,  20.,   3.,  16.,  33.,\n",
       "          38.,  10.,  59.,  69.,   8.,  15.,  81.,  47.,  17.,   0.,   3.,\n",
       "          15.,  23.,  87.,  70.,   3.,   0.,  34.,  17.,  20.,  15.,  53.,\n",
       "          73.,  58.,  38., 119.,  86.,  38.,   6.,   6.,  18.,  66.,  87.,\n",
       "          22.,  61.,  96.,  27.,  58., 107.,  30.,  13.,   2.,  24.,  51.,\n",
       "          29.,  40.,   7.,   1.,   0.,  52.,  39.,  13.,  14.,  35.,  10.,\n",
       "          22.,  24.,  28.,  43.,  47.,  18.,  30.,  17.,  14.,  14.,  19.,\n",
       "          58.,  52.,  15.,  32.,  13.,   4.,   2.],\n",
       "        [  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,  11.,\n",
       "           8.,   0.,   0.,   0.,   0.,   0.,   1.,  45.,  96.,   9.,   5.,\n",
       "           1.,   0.,  15.,  18.,  95.,  85.,  31.,  15.,   5.,   4.,   0.,\n",
       "          21.,  14.,  12.,   4.,   1.,   0.,   0.,  14.,  23., 100., 117.,\n",
       "          65.,   5.,   1.,   3., 117.,  49., 117., 117.,  28.,  55.,  22.,\n",
       "          26.,  31.,  16.,  33.,  57.,  32.,  77.,  45.,  35.,   9.,  39.,\n",
       "          31.,  18.,  32.,  27.,   7.,  16.,  38.,  25.,  23.,  70., 117.,\n",
       "         117.,  22.,  42., 117.,  61.,  47.,  83.,  38.,  40.,  10.,  41.,\n",
       "           7.,  24.,  70., 117.,  26.,  10.,   4.,   2.,  49.,  29.,  19.,\n",
       "          12.,   5.,   9.,  37.,  40.,  15.,   6.,   3.,  92.,  97.,  41.,\n",
       "          12.,  35.,   9.,  22.,  62.,  75.,  63.,  26.,   2.,   2.,   7.,\n",
       "          21.,  40.,  37.,   5.,   2.,   2.,   3.],\n",
       "        [ 87.,  51.,  27.,   2.,   1.,   1.,   3.,  14., 109.,  84.,  32.,\n",
       "          17.,  37.,  15.,   4.,   6.,   9.,  29.,  30.,  23.,  44.,  26.,\n",
       "          34.,  19.,  15.,  30.,  11.,   0.,   0.,   1.,  11.,  12.,  75.,\n",
       "          19.,   5.,   1.,   3.,  17.,  36.,  94.,  43., 106.,  89.,  17.,\n",
       "          59., 113.,  34.,  29., 118.,  99.,  40.,   7.,  15.,  18.,  47.,\n",
       "          60.,  13.,   2.,   1.,   0.,   0.,   1.,  22.,  12., 118.,  15.,\n",
       "           9.,   4.,   2.,   8.,  35.,  76.,  91.,  29.,  62.,  20.,  62.,\n",
       "         118.,  40.,  64., 118.,  19.,   4.,   3.,  10.,  47.,  29., 118.,\n",
       "           7.,   0.,   0.,   0.,   0.,   0.,   0.,   3.,  53.,  41.,  16.,\n",
       "          12.,  16.,  13.,   9.,  32.,  88.,  30.,  74.,  28.,  27.,  29.,\n",
       "          22.,  88.,  88.,   7.,   4.,   1.,   1.,   2.,   2.,  64.,   0.,\n",
       "           0.,   0.,   0.,   0.,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[51.,  2.,  0., ...,  0.,  1., 18.],\n",
       "        [ 3.,  1.,  1., ...,  2.,  0.,  0.],\n",
       "        [48., 13.,  3., ...,  6.,  0.,  5.],\n",
       "        ...,\n",
       "        [11.,  6.,  0., ...,  4.,  0.,  0.],\n",
       "        [54.,  2.,  0., ...,  4.,  0.,  0.],\n",
       "        [51.,  1.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[118.,  21.,   0., ...,  35.,   2.,   4.],\n",
       "        [ 61.,  24.,   2., ...,  22.,   7.,   9.],\n",
       "        [ 57.,  14.,   9., ...,   6.,   1.,  39.],\n",
       "        ...,\n",
       "        [ 24.,  19.,   5., ...,  24.,   0.,   1.],\n",
       "        [ 12.,   0.,   0., ...,   6.,   1.,   4.],\n",
       "        [ 30.,  33.,   3., ...,   1.,   1.,   6.]], dtype=float32),\n",
       " array([[81.,  4.,  2., ...,  3.,  0.,  0.],\n",
       "        [ 9., 10.,  7., ...,  2.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  0.,  1.],\n",
       "        ...,\n",
       "        [96.,  4.,  1., ...,  0.,  0.,  0.],\n",
       "        [40., 24.,  0., ..., 36.,  2.,  7.],\n",
       "        [57., 12.,  1., ...,  1.,  0.,  0.]], dtype=float32),\n",
       " array([[ 51.,  67.,  12., ..., 127.,  25.,   9.],\n",
       "        [ 48.,  29.,  31., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  45.,  31.,  16.],\n",
       "        ...,\n",
       "        [ 25.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   2.,   3., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   6.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 16.,  0.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 14.,  0.,  1.],\n",
       "        [22., 28.,  4., ...,  5.,  0.,  0.],\n",
       "        ...,\n",
       "        [14., 10.,  7., ...,  6., 10., 25.],\n",
       "        [ 1.,  0.,  4., ..., 28.,  6.,  7.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  0.,  1.]], dtype=float32),\n",
       " array([[46., 58., 18., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 30.,  0.,  1.],\n",
       "        [26.,  2.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 63.,  1.,  0.],\n",
       "        [27., 22.,  4., ...,  0.,  0.,  0.],\n",
       "        [37.,  9.,  2., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 28.,  23.,   8., ...,  57.,  27.,   0.],\n",
       "        [  4.,   1.,   0., ...,  38.,   1.,   2.],\n",
       "        [  8.,  14.,   5., ...,  23.,   2.,   7.],\n",
       "        ...,\n",
       "        [119.,  13.,   0., ...,   6.,   1.,   5.],\n",
       "        [103.,   0.,   0., ...,   5.,   1.,   1.],\n",
       "        [ 10.,   2.,   0., ...,  59.,  19.,   5.]], dtype=float32),\n",
       " array([[ 1.,  5., 36., ..., 33.,  0.,  0.],\n",
       "        [ 7.,  2., 39., ...,  7.,  2.,  4.],\n",
       "        [33.,  4.,  7., ..., 63.,  3.,  7.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 23.,  2.,  4.],\n",
       "        [59., 15.,  5., ...,  0.,  0.,  0.],\n",
       "        [12.,  2.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[21.,  8.,  1., ...,  7.,  2., 22.],\n",
       "        [22.,  7.,  2., ...,  8.,  1., 13.],\n",
       "        [45., 10.,  5., ...,  1.,  0.,  6.],\n",
       "        ...,\n",
       "        [14.,  0.,  0., ...,  8.,  2., 35.],\n",
       "        [67., 16.,  1., ...,  6.,  3., 22.],\n",
       "        [27.,  8.,  3., ..., 17.,  1.,  4.]], dtype=float32),\n",
       " array([[ 30.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 37.,   4.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,  16.],\n",
       "        ...,\n",
       "        [ 29.,  26.,   5., ...,  31.,   1.,   6.],\n",
       "        [ 54.,  46., 100., ...,   0.,   0.,  23.],\n",
       "        [ 12.,  34.,   8., ...,   0.,   0.,  49.]], dtype=float32),\n",
       " array([[38., 21.,  9., ..., 16.,  7., 44.],\n",
       "        [35., 22.,  4., ..., 18.,  9., 21.],\n",
       "        [11.,  8., 16., ..., 18., 12., 12.],\n",
       "        ...,\n",
       "        [ 2.,  7., 32., ...,  6., 26., 63.],\n",
       "        [ 2., 10., 58., ..., 16.,  5., 34.],\n",
       "        [91., 25.,  3., ...,  0.,  3., 14.]], dtype=float32),\n",
       " array([[ 47.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 64.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   1.,   0., ...,   0.,   0.,   2.],\n",
       "        [113.,   6.,   3., ...,   0.,   0.,   1.],\n",
       "        [ 99.,   5.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[66.,  3.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 33.,  3.,  8.],\n",
       "        [30.,  9.,  1., ...,  1.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  3.,  2., 70.],\n",
       "        [37., 91., 11., ...,  4.,  1., 16.],\n",
       "        [ 0.,  0.,  0., ..., 87.,  6., 14.]], dtype=float32),\n",
       " array([[64.,  6.,  1., ...,  0.,  0.,  0.],\n",
       "        [34., 21.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  1., ..., 29.,  3.,  4.],\n",
       "        ...,\n",
       "        [12.,  1.,  2., ...,  1.,  1.,  0.],\n",
       "        [19.,  2.,  0., ...,  0.,  4.,  7.],\n",
       "        [14.,  2.,  0., ...,  1.,  0.,  0.]], dtype=float32),\n",
       " array([[32., 27., 14., ...,  7.,  0.,  0.],\n",
       "        [66., 47.,  0., ..., 57.,  0.,  1.],\n",
       "        [38.,  1.,  1., ...,  1.,  0.,  0.],\n",
       "        ...,\n",
       "        [50.,  8.,  0., ..., 11.,  1., 14.],\n",
       "        [49., 13.,  3., ...,  9.,  0.,  0.],\n",
       "        [31.,  6.,  0., ..., 11.,  3., 13.]], dtype=float32),\n",
       " array([[ 1.,  1.,  1., ...,  2.,  1., 22.],\n",
       "        [63.,  3.,  1., ...,  1.,  1., 17.],\n",
       "        [ 4.,  1.,  0., ..., 14.,  4., 44.],\n",
       "        ...,\n",
       "        [99.,  5.,  0., ...,  1.,  1., 20.],\n",
       "        [14.,  1.,  1., ..., 13.,  0.,  6.],\n",
       "        [68.,  3.,  0., ...,  4.,  8., 12.]], dtype=float32),\n",
       " array([[69., 24.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 22.,  4., 23.],\n",
       "        [80., 21.,  3., ...,  1.,  0.,  0.],\n",
       "        ...,\n",
       "        [22.,  5.,  0., ...,  1.,  4.,  0.],\n",
       "        [25., 22.,  1., ...,  0.,  0.,  0.],\n",
       "        [17.,  7.,  6., ...,  1.,  1.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  22.,   7.,   6.],\n",
       "        [  4.,  12.,  14., ...,   7.,   0.,   4.],\n",
       "        [ 26.,  58.,  61., ...,   0.,   5.,  42.],\n",
       "        ...,\n",
       "        [  0.,   0.,   2., ...,  11.,  27.,  14.],\n",
       "        [  0.,   0.,   0., ...,  10.,   2.,   8.],\n",
       "        [102.,  46.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 39., 127.,  23., ...,   0.,   0.,  12.],\n",
       "        [  7.,   0.,   0., ..., 127.,  30.,   2.],\n",
       "        [109.,  84.,   2., ...,   0.,   0.,  10.],\n",
       "        ...,\n",
       "        [ 30.,  12.,   6., ...,  11.,   2.,  43.],\n",
       "        [  6.,   3.,   2., ...,   0.,   2.,  21.],\n",
       "        [ 19.,  12.,   2., ...,  69.,   1.,   1.]], dtype=float32),\n",
       " array([[ 31.,  11.,   3., ...,   0.,   0.,   0.],\n",
       "        [  6.,   1.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   6.,   1.,  20.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  34.,   2.,   3.],\n",
       "        [132.,  17.,   1., ...,   0.,   0.,   1.],\n",
       "        [  8.,   1.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[32., 21.,  2., ...,  7.,  0.,  0.],\n",
       "        [32.,  0.,  0., ...,  5.,  3., 35.],\n",
       "        [69.,  7.,  2., ...,  2.,  1., 28.],\n",
       "        ...,\n",
       "        [ 5.,  1.,  0., ..., 37.,  3., 10.],\n",
       "        [34., 14.,  1., ..., 12.,  2., 24.],\n",
       "        [24.,  6.,  2., ..., 11.,  2., 20.]], dtype=float32),\n",
       " array([[50.,  3.,  1., ...,  0.,  0., 21.],\n",
       "        [40., 26.,  3., ..., 24.,  4., 21.],\n",
       "        [21.,  7.,  3., ..., 16.,  3., 20.],\n",
       "        ...,\n",
       "        [25., 15., 13., ..., 27.,  1.,  8.],\n",
       "        [31.,  4.,  1., ..., 57.,  3.,  6.],\n",
       "        [40.,  8.,  0., ...,  2.,  0.,  7.]], dtype=float32),\n",
       " array([[  9.,   3.,   6., ...,   5.,  12.,   3.],\n",
       "        [  1.,   0.,   0., ..., 104.,  26.,  29.],\n",
       "        [  7.,   1.,   0., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 36.,  52.,   0., ...,   5.,   6.,   5.],\n",
       "        [120.,  24.,   1., ...,  12.,   2.,   9.],\n",
       "        [107.,  15.,   1., ...,  57.,   2.,   3.]], dtype=float32),\n",
       " array([[58.,  1.,  0., ...,  7.,  2.,  6.],\n",
       "        [95.,  5.,  2., ...,  1.,  0.,  9.],\n",
       "        [50.,  6.,  4., ..., 13., 15., 42.],\n",
       "        ...,\n",
       "        [44., 11.,  2., ...,  0.,  0.,  2.],\n",
       "        [10.,  2.,  1., ..., 13.,  7., 32.],\n",
       "        [18.,  9., 13., ...,  0.,  3., 12.]], dtype=float32),\n",
       " array([[59.,  4.,  0., ...,  0.,  0.,  4.],\n",
       "        [26.,  0.,  0., ...,  4.,  0.,  1.],\n",
       "        [ 1., 22., 31., ..., 15.,  5., 11.],\n",
       "        ...,\n",
       "        [ 3.,  4., 11., ..., 15.,  1.,  3.],\n",
       "        [62., 24.,  2., ...,  6.,  5.,  0.],\n",
       "        [14.,  5.,  0., ..., 52.,  1.,  8.]], dtype=float32),\n",
       " array([[17., 13.,  3., ...,  0.,  0.,  0.],\n",
       "        [29., 10.,  3., ...,  0.,  0.,  0.],\n",
       "        [41.,  8.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [88., 28.,  2., ...,  1.,  0.,  0.],\n",
       "        [ 3.,  0.,  0., ...,  5.,  1., 35.],\n",
       "        [46.,  6.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 5.,  4.,  5., ...,  1.,  0.,  0.],\n",
       "        [38., 50., 13., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 57., 27., 12.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 16.,  2., 29.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  6., 53.],\n",
       "        [ 0.,  1.,  0., ..., 17.,  3.,  7.]], dtype=float32),\n",
       " array([[30., 15.,  2., ...,  0.,  0.,  0.],\n",
       "        [91., 46.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 26.,  5.,  1.],\n",
       "        ...,\n",
       "        [55.,  9.,  1., ...,  3.,  0.,  3.],\n",
       "        [ 0., 25., 19., ..., 23., 12., 37.],\n",
       "        [23.,  8.,  8., ...,  5.,  9., 36.]], dtype=float32),\n",
       " array([[ 92.,   7.,   0., ...,  23.,   3.,   5.],\n",
       "        [ 25.,  27.,   1., ...,   1.,   0.,   0.],\n",
       "        [ 46.,  28.,   6., ..., 125.,  37.,  23.],\n",
       "        ...,\n",
       "        [ 41.,  12.,   9., ...,   6.,   5.,  47.],\n",
       "        [115.,  38.,   2., ...,  62.,   3.,  11.],\n",
       "        [  0.,   4.,   6., ...,  18.,   2.,   5.]], dtype=float32),\n",
       " array([[ 64.,  12.,   0., ...,   6.,   0.,   0.],\n",
       "        [ 43.,   5.,   0., ...,   2.,   0.,   0.],\n",
       "        [  6.,   0.,   0., ...,   2.,   0.,  12.],\n",
       "        ...,\n",
       "        [114.,  15.,   0., ...,   0.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,  25.,   0.,   8.],\n",
       "        [ 56.,   6.,   1., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0., 11., ...,  0.,  0.,  0.],\n",
       "        [50.,  1.,  0., ..., 10.,  0.,  2.],\n",
       "        [16., 23.,  4., ..., 51.,  1.,  4.],\n",
       "        ...,\n",
       "        [ 7.,  2.,  0., ...,  1.,  5.,  7.],\n",
       "        [56.,  6.,  0., ...,  5.,  1.,  5.],\n",
       "        [ 2.,  0.,  0., ..., 15.,  4., 26.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1.,   0.,   5.],\n",
       "        [ 23.,   5.,   0., ...,  10.,   1.,  10.],\n",
       "        [ 46.,  10.,   1., ...,   7.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   3.,   0.,   9.],\n",
       "        [110.,  26.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  17.,   0.,  17.]], dtype=float32),\n",
       " array([[143.,   2.,   0., ...,   6.,   1.,   8.],\n",
       "        [ 60.,  13.,   0., ...,  29.,   0.,   1.],\n",
       "        [136.,   9.,   0., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [149.,   1.,   0., ...,  13.,   1.,   4.],\n",
       "        [ 50.,  10.,   1., ...,  36.,   1.,   1.],\n",
       "        [139.,  27.,   1., ...,   5.,   1.,   6.]], dtype=float32),\n",
       " array([[ 80.,   0.,   0., ...,   1.,   0.,   5.],\n",
       "        [111.,  16.,   0., ...,  13.,   0.,   0.],\n",
       "        [ 99.,   0.,   0., ...,   0.,   0.,   6.],\n",
       "        ...,\n",
       "        [ 78.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 85.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 63.,   1.,   0., ...,   1.,   2.,   3.]], dtype=float32),\n",
       " array([[28.,  3.,  0., ..., 13.,  5., 14.],\n",
       "        [ 0.,  0.,  0., ...,  7., 12., 17.],\n",
       "        [ 6.,  1.,  0., ..., 14.,  1.,  5.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 13.,  1., 16.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  4.]], dtype=float32),\n",
       " array([[25.,  6.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  1., 22.],\n",
       "        [50., 31.,  4., ...,  2.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  1.],\n",
       "        [ 5.,  0.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 11., 16., 82.]], dtype=float32),\n",
       " array([[ 2.,  0.,  2., ...,  1.,  1., 10.],\n",
       "        [47.,  2.,  0., ..., 35.,  6., 17.],\n",
       "        [ 3.,  1.,  1., ...,  0.,  1., 38.],\n",
       "        ...,\n",
       "        [47., 16.,  2., ..., 11.,  4.,  8.],\n",
       "        [29., 33.,  8., ..., 10.,  0.,  0.],\n",
       "        [36.,  5.,  2., ...,  3.,  1.,  9.]], dtype=float32),\n",
       " array([[ 19.,   1.,   1., ...,  12.,   2.,  10.],\n",
       "        [ 90.,   6.,   1., ...,   0.,   0.,  12.],\n",
       "        [  8.,   0.,   0., ...,   4.,   0.,   7.],\n",
       "        ...,\n",
       "        [110.,  44.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 14.,   0.,   0., ...,  49.,  14.,  26.],\n",
       "        [  0.,   2.,   2., ...,   3.,   3.,   5.]], dtype=float32),\n",
       " array([[  3.,   1.,   0., ...,  30.,   2.,   8.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   6.],\n",
       "        [109.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 48.,  41.,   7., ...,   0.,   0.,   4.],\n",
       "        [  0.,   0.,   0., ...,  56.,  15.,  44.],\n",
       "        [ 47.,  52.,  14., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  4.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [112.,   5.,   0., ...,   9.,   0.,   7.],\n",
       "        [ 15.,   7.,   1., ...,  13.,   1.,   1.],\n",
       "        ...,\n",
       "        [137.,   3.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 71.,   2.,   1., ...,   7.,   1.,   4.],\n",
       "        [109.,   1.,   0., ...,   2.,   2.,   8.]], dtype=float32),\n",
       " array([[ 16.,   2.,   9.,  34.,  20.,  17.,  14.,  53.,  42.,  26.,  22.,\n",
       "          32.,  23.,  22.,  14.,  45.,  16.,  21.,  89.,  67.,  18.,  21.,\n",
       "          29.,  15.,  18.,  35.,  22.,  15.,  14.,  16.,  11.,   5.,  30.,\n",
       "          18., 125.,  68.,   6.,   2.,   9.,   9., 125.,  33.,  24.,  28.,\n",
       "          17.,  72.,  46.,  86.,  40.,  24.,  42.,  34.,  54., 125.,  71.,\n",
       "          26.,  52.,  41.,  20.,   4.,  14.,  27.,  14.,  13.,  41.,   9.,\n",
       "          28.,   7.,   6.,  37., 125.,  29., 125.,  71.,  14.,  17.,  13.,\n",
       "          21.,  25.,  57.,  21.,  19.,  13.,  96., 125.,  88.,  17.,  10.,\n",
       "          19.,  27.,  20.,  14.,  43.,  13.,  16.,  60.,  25.,  15.,  13.,\n",
       "          68.,  26.,  21.,  36.,  18., 122.,  29.,  18.,  44.,  17.,   7.,\n",
       "           7.,  45.,  17.,  10.,  30., 115.,  88.,  12.,   2.,   9.,  15.,\n",
       "          13.,  35.,  23.,  15.,  15.,  12.,  23.],\n",
       "        [ 17.,   7.,   8.,  16.,  31.,   9.,   7.,  14.,   8.,  20.,  59.,\n",
       "          16.,  25.,  15.,  22.,  41.,   8.,   6.,  15.,  11.,   9.,  25.,\n",
       "          72.,  83.,  14.,   3.,  10.,  20.,   7.,  40., 109.,  42.,  27.,\n",
       "          14.,  18.,  60.,  37.,  25.,   9.,  11., 121.,  33.,  18.,  30.,\n",
       "          18.,  14.,  48., 110.,  29.,   7.,  32., 106.,  36.,  22.,  90.,\n",
       "          94.,   7.,   7.,  60., 120.,  21.,  19.,  36.,  13.,  23.,  26.,\n",
       "          11.,  15.,  24.,  99.,  54.,  18., 121.,  48.,  65.,  58.,  18.,\n",
       "          47.,  38.,  41.,  25.,  33.,  90., 121.,  44.,  25.,   6.,   4.,\n",
       "          60., 109.,  37.,  41.,   5.,   8.,  17.,  11.,  11.,  29.,  37.,\n",
       "          27.,  31.,  17.,  10.,  10.,  18.,  10.,  40.,  32.,  14.,  15.,\n",
       "          53.,  27.,   2.,   8.,  15.,  23.,  21., 121.,  56.,   3.,  43.,\n",
       "          62.,   4.,   2.,   3.,  57.,  30.,  20.],\n",
       "        [  9.,  13.,  18.,  11.,   5.,   5.,  32.,  33.,   3.,  12.,  35.,\n",
       "          72.,  48.,  41.,  12.,  18.,  38., 114.,  69.,  21.,  19.,  40.,\n",
       "           5.,   7.,  26.,  83.,  48.,  51.,  18.,  30.,  10.,   8.,  30.,\n",
       "          25.,  33.,  48.,  75.,  26.,  18.,  36., 114.,  25.,  12.,  28.,\n",
       "          53.,  93.,  23.,  18.,  29.,  42.,  20.,  18.,  40., 114.,  74.,\n",
       "          64.,  31.,  42.,  19.,  29.,  39.,  27.,  38.,  64.,  16.,  35.,\n",
       "          75.,  56.,  19.,   4.,  50.,  24., 114.,  77.,  26.,  52.,  18.,\n",
       "          15.,  77.,  24.,  52.,  43.,  27., 104.,  36.,  38.,  34.,  29.,\n",
       "          50.,  31.,   7.,  28.,  77.,  57.,  20.,  25.,  46.,  19.,   7.,\n",
       "           7.,   9.,  10.,  76.,  67.,  24.,  23.,  34.,  24.,  27.,  58.,\n",
       "         114.,  56.,  14.,  15.,  14.,  27.,  73.,  67.,  49.,  15.,  23.,\n",
       "          48.,  36.,   9.,  14.,  29.,  15.,  20.],\n",
       "        [ 36.,  16.,   7.,  10.,  25.,  19.,  31.,  69.,  60.,  21.,  26.,\n",
       "          66.,  45.,  18.,  17.,  47.,  56.,  50.,  19.,  22.,  22.,  18.,\n",
       "          23.,  65.,  35.,  28.,   4.,   5.,  25.,  57.,  42.,  55.,  30.,\n",
       "          36.,  70.,  34.,  54.,  26.,  31.,  32.,  79.,  51.,  69.,  49.,\n",
       "          45.,  14.,  63.,  47.,  44.,  90.,  20.,  53.,  59.,  35.,  85.,\n",
       "          31.,  27., 120., 101.,  45.,  30.,  22.,  10.,  10.,  30.,  11.,\n",
       "          18.,  41., 120.,  89.,  18.,  12., 120.,  56.,  21.,  51.,  26.,\n",
       "          24.,  14.,  38.,  19.,  16.,  11., 120.,  61.,  20.,  54.,  60.,\n",
       "           5.,  62.,  38.,  14.,  29.,  64.,  50.,  17.,  11.,  11.,  23.,\n",
       "          22.,  34.,  30.,  40.,  15.,  34.,  12.,  23.,   7.,  12.,  33.,\n",
       "          66.,  48.,  30.,  18.,  29.,  24.,  17.,  24.,  32.,  67.,   5.,\n",
       "           7.,  44.,  46.,  48.,  63.,  27.,  14.],\n",
       "        [ 39.,  41.,   9.,  14.,  12.,   4.,   1.,   4.,  10.,   5.,   3.,\n",
       "          52., 130.,  27.,   2.,   4., 130.,  13.,   1.,   7.,  44.,  15.,\n",
       "          18.,  96.,  75.,  37.,   7.,  17.,  33.,  22.,  11.,  22.,  61.,\n",
       "          24.,   3.,   3.,  14.,  20.,  32.,  79.,  36.,   6.,   1.,  31.,\n",
       "         130.,  82.,  13.,  15., 130.,  33.,   5.,  25.,  74.,  12.,   2.,\n",
       "          62.,  60.,  12.,   5.,  31.,  87.,  19.,   3.,  30.,  39.,  75.,\n",
       "          21.,  18.,  10.,   8.,  28.,  30.,  30.,  32.,  12.,  19., 130.,\n",
       "          92.,   7.,  13., 130.,  95.,  28.,  17.,  48.,  27.,   1.,  10.,\n",
       "          46.,  41.,  20.,  43.,  34.,   5.,   3.,  19.,  23.,   7.,  21.,\n",
       "          26.,   3.,   7.,  44.,  40.,   5.,   4.,  24.,  58., 126.,  34.,\n",
       "           7.,  13.,  31.,  29.,  18.,  16.,  54.,  15.,  14.,  30.,  73.,\n",
       "          30.,   7.,  18.,  50.,   7.,   8.,  45.],\n",
       "        [ 46.,   3.,   4.,  30.,  55.,  18.,   7.,  51.,  24.,   4.,  19.,\n",
       "          40.,  60.,  48.,  19.,   7., 131.,  10.,   5.,   6.,   4.,   4.,\n",
       "          23.,  75.,  13.,  10.,  27.,  19.,   9.,  10.,  57.,  46.,  32.,\n",
       "           4.,   4.,  27.,  43.,  22.,  20.,  59.,  42.,  10.,   2.,  34.,\n",
       "         131.,  75.,  24.,  24., 131.,  34.,   6.,  16.,  35.,  20.,  11.,\n",
       "          39.,  17.,  11.,  42.,  30.,  46.,  52.,  17.,  13.,  96.,  15.,\n",
       "           7.,  59.,  64.,   7.,   4.,  32.,  70.,   5.,   4., 131., 131.,\n",
       "          10.,   4.,  42., 131.,  47.,  16.,  21.,  28.,   6.,   3.,  59.,\n",
       "          13.,  15.,  50.,  78.,  50.,  26.,   8.,   7.,  21.,  16.,  22.,\n",
       "          56.,  97.,  20.,   5.,   4.,  66.,   8.,  22.,  80.,  75.,   3.,\n",
       "           1.,  38.,  99.,  16.,   2.,   5.,  16.,   6.,   7.,  71.,   2.,\n",
       "           2.,  10.,  25.,  51.,  42.,   4.,   3.]], dtype=float32),\n",
       " array([[69.,  1.,  0., ...,  0.,  0.,  1.],\n",
       "        [13.,  0.,  0., ...,  0.,  0.,  5.],\n",
       "        [73.,  9.,  1., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [70.,  4.,  1., ...,  0.,  0.,  3.],\n",
       "        [16.,  1.,  0., ...,  1.,  0.,  4.],\n",
       "        [64.,  3.,  0., ...,  1.,  0.,  2.]], dtype=float32),\n",
       " array([[ 2.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  2.],\n",
       "        [ 3.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [13.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  1.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.]], dtype=float32),\n",
       " array([[ 21.,   8.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   1.,  15.],\n",
       "        [ 10.,   0.,   0., ...,   4.,  13.,  12.],\n",
       "        ...,\n",
       "        [ 67.,   0.,   0., ...,  21.,  38.,   1.],\n",
       "        [ 96.,   6.,   4., ...,   1.,   0.,   2.],\n",
       "        [  8.,  91., 125., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[80., 96.,  5., ...,  1.,  1.,  1.],\n",
       "        [15.,  6., 59., ...,  2.,  0.,  0.],\n",
       "        [ 0.,  0.,  1., ...,  2.,  1., 24.],\n",
       "        ...,\n",
       "        [17.,  9.,  2., ..., 10.,  0.,  0.],\n",
       "        [33., 10.,  8., ...,  3.,  0.,  1.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,  28.,   8.,   7.],\n",
       "        [  0.,   0.,   1., ...,   1.,   4.,   9.],\n",
       "        [  7.,  10.,   1., ...,   0.,   0.,  16.],\n",
       "        ...,\n",
       "        [ 32., 135.,  53., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   1.,   3.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   5.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ...,  5.,  3., 10.],\n",
       "        [44., 95.,  5., ...,  0.,  0.,  0.],\n",
       "        [ 6.,  4.,  0., ..., 38., 18.,  3.],\n",
       "        ...,\n",
       "        [53., 26., 13., ..., 22., 27., 28.],\n",
       "        [ 0.,  0.,  0., ...,  9., 63., 17.],\n",
       "        [ 0.,  0.,  0., ...,  7., 11., 40.]], dtype=float32),\n",
       " array([[ 1., 20., 46., ...,  4.,  5.,  5.],\n",
       "        [11.,  1.,  3., ...,  2.,  4.,  6.],\n",
       "        [18.,  2.,  1., ...,  2.,  3.,  1.],\n",
       "        ...,\n",
       "        [34., 27.,  3., ...,  2.,  1., 25.],\n",
       "        [21.,  1.,  1., ...,  3.,  2., 11.],\n",
       "        [ 2.,  9., 15., ..., 19.,  7., 18.]], dtype=float32),\n",
       " array([[  2.,   0.,   0., ...,  13.,   0.,   0.],\n",
       "        [ 11.,   1.,   0., ...,   8.,   1.,   1.],\n",
       "        [ 21.,  25.,   9., ...,   6.,  41.,   9.],\n",
       "        ...,\n",
       "        [ 17.,   2.,   0., ...,   0.,   0.,  16.],\n",
       "        [  2.,   4.,   4., ...,   0.,   0.,   0.],\n",
       "        [121.,  58.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[62.,  0.,  0., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  0.,  2., ...,  7.,  7.,  4.],\n",
       "        [ 1.,  0.,  1., ..., 13.,  9., 35.],\n",
       "        ...,\n",
       "        [ 1.,  2.,  6., ...,  1.,  1.,  8.],\n",
       "        [18.,  3.,  0., ...,  7.,  9., 35.],\n",
       "        [22., 10.,  4., ...,  1.,  2.,  8.]], dtype=float32),\n",
       " array([[  0.,   2.,  20., ...,   2.,   3.,   7.],\n",
       "        [  1.,   2.,   3., ...,   1.,  15.,  18.],\n",
       "        [  0.,   0.,   4., ...,   2.,   1.,   4.],\n",
       "        ...,\n",
       "        [ 20.,  18.,   4., ..., 107.,  12.,   1.],\n",
       "        [ 45., 113.,   3., ...,  63.,  18.,   2.],\n",
       "        [  2.,   6.,   4., ...,  10.,   2.,   0.]], dtype=float32),\n",
       " array([[ 40.,   2.,   1., ...,  13.,   0.,   0.],\n",
       "        [  0.,   0., 136., ...,  13.,   0.,   0.],\n",
       "        [  1.,   1.,   1., ...,  16.,   1.,   4.],\n",
       "        ...,\n",
       "        [  2.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [152.,  92.,   1., ...,   1.,   3.,  34.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 13., 19., 11.],\n",
       "        [ 0.,  0.,  1., ...,  2.,  4., 18.],\n",
       "        [16.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [51., 37.,  1., ...,  1.,  0.,  1.],\n",
       "        [13., 21.,  3., ...,  0.,  0.,  6.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  3., 33.]], dtype=float32),\n",
       " array([[45.,  8.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  3.,  4., ...,  0.,  0.,  0.],\n",
       "        [20.,  7.,  3., ...,  7.,  6., 17.],\n",
       "        ...,\n",
       "        [88.,  6.,  0., ...,  0.,  0.,  0.],\n",
       "        [81.,  1.,  0., ..., 28., 14.,  9.],\n",
       "        [52.,  9.,  0., ..., 10.,  5.,  6.]], dtype=float32),\n",
       " array([[  7.,   0.,   0., ...,  18.,   5.,  23.],\n",
       "        [  0.,   8., 123., ...,   1.,   0.,   0.],\n",
       "        [ 73.,  49.,  23., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 48.,   3.,   0., ...,   0.,  11.,  34.],\n",
       "        [ 24.,   5.,   0., ...,   3.,  10.,   2.],\n",
       "        [ 45.,   2.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 2.,  3., 11., ...,  2.,  1.,  0.],\n",
       "        [ 1.,  2., 13., ...,  0.,  0.,  0.],\n",
       "        [10.,  0.,  0., ...,  3.,  7.,  9.],\n",
       "        ...,\n",
       "        [ 2.,  6., 10., ...,  3.,  2., 15.],\n",
       "        [ 2.,  1.,  6., ...,  7.,  1.,  0.],\n",
       "        [12.,  2.,  2., ..., 17., 18.,  9.]], dtype=float32),\n",
       " array([[  4.,   5.,  20., ...,   7.,   2.,  16.],\n",
       "        [  2.,  16., 157., ...,  10.,   6.,   8.],\n",
       "        [ 53., 151.,   3., ...,   0.,   0.,   9.],\n",
       "        ...,\n",
       "        [ 10.,  22.,  36., ...,  12.,  53.,  58.],\n",
       "        [  1.,  48.,  32., ...,   3.,  10.,  12.],\n",
       "        [  0.,   0.,   0., ...,   3.,   2.,   2.]], dtype=float32),\n",
       " array([[ 16.,  15.,  52., ...,   0.,   0.,   0.],\n",
       "        [ 13.,   6.,  10., ...,   8.,   5.,  20.],\n",
       "        [  3.,   2.,   1., ...,   0.,   7.,  36.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  15.],\n",
       "        [  0.,  20., 144., ...,   0.,   0.,   0.],\n",
       "        [  3.,   0.,   0., ...,   5.,   1.,   3.]], dtype=float32),\n",
       " array([[ 0.,  0.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 6., 39., 30., ...,  3., 34.,  7.],\n",
       "        [ 0.,  2.,  0., ...,  8.,  2.,  5.],\n",
       "        ...,\n",
       "        [13., 24.,  6., ...,  0.,  0.,  5.],\n",
       "        [ 9., 61., 42., ...,  0.,  0.,  1.],\n",
       "        [ 2.,  0.,  0., ...,  7., 60., 72.]], dtype=float32),\n",
       " array([[ 20.,  32.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   6., 101.,   9.],\n",
       "        [  4.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ..., 128.,  54.,   0.],\n",
       "        [  0.,  11.,  45., ...,   0.,   0.,   0.],\n",
       "        [ 70.,  16.,   3., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  1.,  5., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  3.],\n",
       "        ...,\n",
       "        [ 5.,  3.,  6., ...,  6.,  8.,  4.],\n",
       "        [11.,  5., 10., ...,  3.,  7.,  9.],\n",
       "        [ 6., 27.,  1., ...,  7.,  1.,  1.]], dtype=float32),\n",
       " array([[ 42.,  75., 104., ...,  14.,   4.,   1.],\n",
       "        [ 20.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [  6.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,  10.,  26., ...,   0.,   1.,   3.],\n",
       "        [  1.,   5.,  17., ...,   1.,   2.,   3.],\n",
       "        [  0.,   1.,   2., ...,  10.,  33.,  32.]], dtype=float32),\n",
       " array([[ 0.,  0.,  2., ..., 13.,  0.,  4.],\n",
       "        [16.,  4.,  8., ...,  2.,  3.,  1.],\n",
       "        [ 1.,  4.,  6., ..., 23., 21.,  2.],\n",
       "        ...,\n",
       "        [ 0.,  0., 12., ...,  0.,  0., 11.],\n",
       "        [ 1.,  1.,  0., ...,  3.,  2.,  0.],\n",
       "        [ 8.,  0.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 15.,   4.,   0., ...,  36.,   9.,  22.],\n",
       "        [  7.,  14.,  25., ...,  12.,  24.,  31.],\n",
       "        [ 75.,  21.,   6., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 49.,   6.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   2., 121., ...,   1., 118., 101.],\n",
       "        [  4.,   0.,   0., ...,   1.,   0.,   2.]], dtype=float32),\n",
       " array([[ 28.,  10.,  10., ...,   0.,   1.,  53.],\n",
       "        [ 12.,  86., 122., ...,   5.,   3.,   1.],\n",
       "        [110.,  30.,   0., ...,  49.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 43.,  90.,  32., ...,   8.,   8.,  11.],\n",
       "        [  2.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 14.,  26.,   0., ...,   2.,   0.,   0.]], dtype=float32),\n",
       " array([[  5.,  12.,  21., ...,   4.,   0.,   0.],\n",
       "        [  0.,   1.,   9., ...,   9.,   0.,   0.],\n",
       "        [  4.,  30., 120., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1., 134., 113.],\n",
       "        [  1.,   0.,   0., ...,  29.,   5.,   2.],\n",
       "        [ 50.,  23.,  16., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  61.,  10.,   7.],\n",
       "        [  0.,   0.,   0., ...,  70.,   0.,   0.],\n",
       "        [ 51.,  19.,   2., ...,   3.,   0.,   4.],\n",
       "        ...,\n",
       "        [  2.,  20., 123., ...,   8.,   9.,   0.],\n",
       "        [  2.,   1.,   0., ...,  12.,   5.,  47.],\n",
       "        [ 18.,   9.,  10., ...,   3.,   4.,   4.]], dtype=float32),\n",
       " array([[ 7.,  3.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 5.,  2.,  0., ...,  3.,  0.,  0.],\n",
       "        [56., 64., 46., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [45.,  1.,  0., ...,  0.,  2., 20.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 25.,  9., 25.]], dtype=float32),\n",
       " array([[ 49., 146.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 19.,   3.,   1., ...,   0.,   0.,   1.],\n",
       "        [  6.,   0.,   0., ...,   4.,   2.,   3.],\n",
       "        ...,\n",
       "        [  0.,   0.,   3., ...,   2.,   0.,   0.],\n",
       "        [ 35.,  11.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 25.,   0.,   0., ...,  17.,   1.,  11.]], dtype=float32),\n",
       " array([[132.,  99.,  34., ...,   0.,   1.,   3.],\n",
       "        [  2.,   0.,   0., ...,   6.,   5.,   2.],\n",
       "        [  6.,   8.,   6., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   7.,  10.,  12.],\n",
       "        [  2.,   0.,   0., ...,  22.,  12.,   8.],\n",
       "        [ 31.,  23.,  14., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  4.,   2.,  15., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  38.,  12.,  11.],\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,  23.,  72.],\n",
       "        [  0.,  43., 110., ...,   0.,   0.,   0.],\n",
       "        [  4.,  10.,  52., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  21.,  27.,   8.],\n",
       "        [  0.,   0.,   0., ...,  20.,  16.,   2.],\n",
       "        [  6.,   0.,   0., ...,   9.,   1.,   0.],\n",
       "        ...,\n",
       "        [119.,  31.,   2., ...,   0.,   0.,   0.],\n",
       "        [  2.,  23., 105., ...,   0.,   0.,   0.],\n",
       "        [  3.,   1.,   1., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[3., 3., 1., ..., 9., 0., 0.],\n",
       "        [2., 2., 1., ..., 2., 0., 0.],\n",
       "        [0., 1., 2., ..., 8., 0., 0.],\n",
       "        ...,\n",
       "        [1., 0., 4., ..., 0., 4., 2.],\n",
       "        [1., 8., 8., ..., 4., 0., 0.],\n",
       "        [0., 0., 0., ..., 3., 0., 0.]], dtype=float32),\n",
       " array([[  3., 137., 128., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,   0.,   6.,   1.],\n",
       "        [  4.,   0.,   0., ...,   0.,   0.,   4.],\n",
       "        ...,\n",
       "        [  3.,   8.,   2., ...,   3.,   1.,   1.],\n",
       "        [  3.,   3.,   1., ...,   7.,   2.,  14.],\n",
       "        [  5.,   7.,  57., ...,   0.,   0.,   7.]], dtype=float32),\n",
       " array([[ 1.,  1.,  2., ...,  2., 10.,  9.],\n",
       "        [ 5.,  1.,  0., ...,  0.,  1., 98.],\n",
       "        [ 8., 12., 12., ..., 33.,  3.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 11.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  2., 16.],\n",
       "        [ 2.,  3., 13., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  4.,  19.,   8., ...,   4.,   1.,   6.],\n",
       "        [ 55.,   3.,   1., ...,  19.,   6.,   3.],\n",
       "        [ 11.,  12.,   3., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   6.,   2.,   2.],\n",
       "        [  0.,   0.,   2., ...,  13.,   4.,   2.],\n",
       "        [  3., 157.,  87., ...,   0.,  12.,  18.]], dtype=float32),\n",
       " array([[ 25., 114., 114., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   6.,   3.,   4.],\n",
       "        [  0.,   0.,  16., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [ 12.,  61.,  44., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,  14.,  29.,  10.],\n",
       "        [  4.,  11.,  41., ...,  11.,  20.,  20.]], dtype=float32),\n",
       " array([[ 0.,  0., 12., ...,  2.,  0.,  0.],\n",
       "        [15.,  6., 11., ...,  1.,  0.,  1.],\n",
       "        [ 2.,  1.,  0., ...,  5., 11.,  5.],\n",
       "        ...,\n",
       "        [21., 25.,  4., ...,  2.,  1.,  1.],\n",
       "        [ 4.,  1.,  1., ..., 12.,  1.,  2.],\n",
       "        [75.,  2.,  0., ..., 10.,  7., 18.]], dtype=float32),\n",
       " array([[ 25.,  58.,  33., ...,   1.,   2.,  19.],\n",
       "        [  0.,   0.,   1., ...,   2.,   2.,  16.],\n",
       "        [  0.,   0.,   0., ...,   1.,  27.,  36.],\n",
       "        ...,\n",
       "        [ 49.,  47.,   5., ...,  10.,   0.,   0.],\n",
       "        [  0.,   9., 135., ...,   0.,   0.,   0.],\n",
       "        [  8.,  28.,  32., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  4.,   5.,  58., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   8.,  51.,  12.],\n",
       "        [ 37.,   5.,   1., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 39., 178.,   8., ...,   4.,   4.,   1.],\n",
       "        [  0.,   0.,   0., ...,  24.,   0.,   0.],\n",
       "        [  6.,  18.,  72., ...,   0.,   8., 146.]], dtype=float32),\n",
       " array([[ 28.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 17.,   3.,   0., ...,   1.,   1.,   2.],\n",
       "        [  0.,  43., 109., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,  17.,   7.,  18.],\n",
       "        [  0.,   0.,   0., ...,  52.,   1.,   3.],\n",
       "        [  0.,   0.,   0., ...,   4.,   1.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   6.,   1.,   5.],\n",
       "        [ 38.,  15.,   7., ...,  21.,   1.,   2.],\n",
       "        [  1.,  17.,  69., ...,  37.,  33.,  13.],\n",
       "        ...,\n",
       "        [  5.,   7.,  70., ...,  41.,  14.,  20.],\n",
       "        [  5.,   3.,   1., ...,   9.,   1.,   4.],\n",
       "        [  7.,  77., 178., ...,   1.,   1.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   4.,  34.,   7.],\n",
       "        [ 18.,  16.,   3., ...,  66.,  57.,   3.],\n",
       "        [  0.,   0.,   0., ...,  40.,   3.,  16.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   6.,   3.,   4.],\n",
       "        [  8.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 92., 151.,  28., ...,   0.,   0.,   3.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 6., 17.,  1., ...,  9., 12.,  1.],\n",
       "        [24.,  2.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [46., 12.,  0., ...,  7.,  0.,  2.],\n",
       "        [ 8.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [15.,  0.,  0., ...,  1.,  0.,  4.]], dtype=float32),\n",
       " array([[  1.,   3., 120., ...,   0.,   0.,  18.],\n",
       "        [ 14.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 54.,   4.,   3., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   3.,  45., ...,   7.,   3.,   1.],\n",
       "        [  9.,  20.,  13., ...,   7.,  16.,   8.],\n",
       "        [  0.,   0.,   0., ...,  17.,   7.,  23.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 17.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 43.,  1.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  1.,  0.],\n",
       "        ...,\n",
       "        [ 1.,  9., 19., ...,  0.,  2., 54.],\n",
       "        [13., 20., 37., ..., 13., 39., 19.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  6., 29.]], dtype=float32),\n",
       " array([[  0.,   2.,   6., ...,   0.,   1.,   1.],\n",
       "        [  1.,   1.,   1., ...,   0.,   0.,   1.],\n",
       "        [ 54.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [  0.,   4., 100., ...,   3.,   0.,   1.],\n",
       "        [ 32.,  13.,  10., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  38., 142.,  33.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  4.,  2.,  1.],\n",
       "        [14.,  6.,  2., ...,  2.,  0.,  2.],\n",
       "        [31.,  3.,  0., ...,  2.,  4.,  1.],\n",
       "        ...,\n",
       "        [18.,  7.,  9., ...,  0.,  0.,  0.],\n",
       "        [47., 73., 43., ...,  0.,  0.,  0.],\n",
       "        [12., 61., 44., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[23., 12., 14., ...,  2., 33., 29.],\n",
       "        [ 0.,  1., 23., ..., 14.,  9.,  0.],\n",
       "        [ 4.,  5., 14., ..., 16.,  2.,  1.],\n",
       "        ...,\n",
       "        [ 1., 34., 29., ..., 61.,  6.,  4.],\n",
       "        [ 2.,  0.,  0., ..., 12.,  2.,  1.],\n",
       "        [ 9., 10.,  1., ...,  1.,  0.,  0.]], dtype=float32),\n",
       " array([[  9.,  38.,  33., ...,   0.,   0.,   0.],\n",
       "        [ 43.,   4.,   0., ...,   0.,   0.,  28.],\n",
       "        [  2.,   1.,   1., ...,   2.,   5.,  33.],\n",
       "        ...,\n",
       "        [  1.,  21., 100., ...,   1.,   1.,  11.],\n",
       "        [  7.,   9.,  31., ...,   4.,   0.,   0.],\n",
       "        [  0.,   2.,   3., ...,  33.,  28.,   6.]], dtype=float32),\n",
       " array([[  5., 122., 140., ...,   3.,   2.,   7.],\n",
       "        [ 23.,   4.,  12., ...,   3.,  18.,   9.],\n",
       "        [  1.,   1.,  11., ...,  16.,   6.,  16.],\n",
       "        ...,\n",
       "        [160.,  21.,   2., ...,   0.,   0.,   2.],\n",
       "        [114.,  12.,   1., ...,   0.,   0.,   0.],\n",
       "        [  1.,  74.,  27., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  9.,   5.,   0., ...,   2.,   0.,   1.],\n",
       "        [ 52.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 76.,  29.,   7., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  22.,   5.,  12.],\n",
       "        [  0.,   0.,  34., ...,   0.,   0.,   0.],\n",
       "        [  1.,  74., 118., ...,   0.,   0.,   6.]], dtype=float32),\n",
       " array([[150.,  72.,   3., ...,  11.,  10.,  21.],\n",
       "        [129., 143.,  12., ...,   1.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,  15., 112., ...,   0.,   0.,   7.],\n",
       "        [  5.,  43.,  89., ...,   0.,   1.,   8.],\n",
       "        [ 32.,  29.,  53., ...,  15.,  13.,   6.]], dtype=float32),\n",
       " array([[107.,   6.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 11.,  28., 144., ...,   0.,   0.,   0.],\n",
       "        [  1.,   2.,   1., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [  0.,   1.,   4., ...,   2.,  11.,  47.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   7.]], dtype=float32),\n",
       " array([[ 0.,  2., 48., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  4.],\n",
       "        [ 0.,  0.,  9., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  1., ...,  9.,  2.,  7.],\n",
       "        [ 1.,  5.,  9., ...,  0.,  0., 17.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  4.,  8.]], dtype=float32),\n",
       " array([[19.,  4.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  4., 11.],\n",
       "        [86., 18.,  1., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [11.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 14.,  1.,  5.],\n",
       "        [80., 19.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[37.,  3.,  0., ...,  6.,  1.,  7.],\n",
       "        [20.,  2.,  0., ...,  3.,  1., 52.],\n",
       "        [17.,  1.,  0., ...,  1.,  3., 12.],\n",
       "        ...,\n",
       "        [ 7.,  7.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  9.,  2., 37.],\n",
       "        [ 9.,  1.,  3., ...,  9.,  9.,  6.]], dtype=float32),\n",
       " array([[ 0.,  0.,  5., ...,  0.,  0.,  0.],\n",
       "        [13.,  3.,  3., ...,  2.,  0.,  1.],\n",
       "        [57., 27.,  3., ...,  1.,  9.,  7.],\n",
       "        ...,\n",
       "        [16.,  2.,  0., ..., 22.,  1.,  5.],\n",
       "        [60., 43., 19., ...,  0.,  0.,  0.],\n",
       "        [11., 15.,  8., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  8.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  4.],\n",
       "        [94., 20.,  1., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 1., 16., 94., ..., 10.,  6., 24.],\n",
       "        [12.,  4.,  1., ..., 10., 12., 59.],\n",
       "        [ 0.,  0.,  0., ..., 15.,  1.,  0.]], dtype=float32),\n",
       " array([[ 55.,  28.,   5., ...,   3.,   7.,  17.],\n",
       "        [118., 118.,  42., ...,  20.,   7.,  21.],\n",
       "        [ 70.,   2.,   0., ...,   0.,   4.,  12.],\n",
       "        ...,\n",
       "        [  1.,  12.,  24., ...,   0.,   0.,   1.],\n",
       "        [  4.,  27.,   9., ...,  25.,  26.,  29.],\n",
       "        [ 15.,   5.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 15.,  99., 156., ...,   2.,   0.,   0.],\n",
       "        [  1.,   0.,   7., ...,   0.,   0.,  10.],\n",
       "        [ 29.,  22.,  96., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        [ 10.,  29.,  73., ...,   8.,  16.,   1.],\n",
       "        [  0.,   0.,  13., ...,   5.,   1.,   3.]], dtype=float32),\n",
       " array([[ 91.,  73.,  19., ...,   0.,   0.,   0.],\n",
       "        [ 25.,  13.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 96.,  10.,  10., ...,  69.,  22.,   1.],\n",
       "        ...,\n",
       "        [ 20.,   1.,   0., ...,  25., 115.,   0.],\n",
       "        [  0.,   0.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 12.,  31.,   0., ...,   3.,  41.,  29.]], dtype=float32),\n",
       " array([[ 41.,   9.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 31.,  22.,  31., ...,   0.,   0.,   0.],\n",
       "        [  3.,  31., 118., ...,   0.,   1.,  14.],\n",
       "        ...,\n",
       "        [  2.,  12.,   6., ...,   2.,  10.,  37.],\n",
       "        [  2.,   5.,   5., ...,   0.,   0.,   2.],\n",
       "        [ 21.,  27.,  14., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[71., 13.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 7., 25., 11., ...,  6.,  0.,  1.],\n",
       "        [ 9.,  9., 52., ...,  5.,  0.,  1.],\n",
       "        ...,\n",
       "        [65., 10.,  3., ..., 44., 13.,  8.],\n",
       "        [26., 51., 13., ..., 14.,  3.,  5.],\n",
       "        [13.,  3.,  4., ..., 22., 13., 40.]], dtype=float32),\n",
       " array([[ 18.,  27.,   3., ...,   0.,   0.,  23.],\n",
       "        [  0.,   0.,   0., ..., 148.,   9.,   0.],\n",
       "        [ 76.,   5.,   0., ...,   1., 127.,  54.],\n",
       "        ...,\n",
       "        [ 20.,   8.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7.,   0.,   0.]], dtype=float32),\n",
       " array([[  7.,  36.,  38., ...,   0.,   0.,   0.],\n",
       "        [ 67.,  77.,   9., ...,   0.,   0.,   0.],\n",
       "        [115.,  73.,  18., ...,   3.,  22.,  26.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [116.,   2.,   1., ...,  26.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  16.]], dtype=float32),\n",
       " array([[27., 20., 21., ..., 69.,  0.,  0.],\n",
       "        [42., 13.,  2., ..., 39., 15.,  3.],\n",
       "        [22., 21., 11., ..., 23., 19.,  9.],\n",
       "        ...,\n",
       "        [14., 24., 34., ...,  1.,  5., 14.],\n",
       "        [49., 28., 11., ..., 17.,  2.,  4.],\n",
       "        [ 2.,  6.,  2., ..., 44.,  0.,  1.]], dtype=float32),\n",
       " array([[192.,  15.,   0., ...,   1.,   1.,   4.],\n",
       "        [ 18.,  40.,  29., ...,   0.,   0.,   0.],\n",
       "        [  0.,  43., 110., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 10.,  48., 142., ...,  24.,  93.,   4.],\n",
       "        [  1.,   0.,   0., ...,  12.,  73.,  51.],\n",
       "        [ 36.,  70.,  38., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  15.,   2.,   3.],\n",
       "        [ 25.,  69.,  37., ...,   0.,   0.,   5.],\n",
       "        [  0.,   0.,   0., ..., 130.,  23.,   0.],\n",
       "        ...,\n",
       "        [ 15.,   8.,  25., ...,  13.,   8., 145.],\n",
       "        [ 31.,   5.,   6., ...,   4.,  85., 147.],\n",
       "        [  0.,  37.,  22., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[31.,  3.,  1., ...,  0.,  0.,  2.],\n",
       "        [ 4., 24., 10., ...,  3.,  1.,  0.],\n",
       "        [11.,  3.,  1., ..., 10., 32., 42.],\n",
       "        ...,\n",
       "        [66., 54.,  5., ...,  4.,  2.,  9.],\n",
       "        [ 1.,  2.,  3., ..., 10.,  4.,  0.],\n",
       "        [67., 26., 12., ...,  0.,  0., 16.]], dtype=float32),\n",
       " array([[  2.,   7.,  20., ...,   2.,   6.,  17.],\n",
       "        [  2.,  10.,  10., ...,   5.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   1.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  83.,  17.,   0.],\n",
       "        [  0.,   0.,   0., ...,  81., 142.,  26.],\n",
       "        [ 27.,  95., 135., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  3.,  1.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  2., 10.],\n",
       "        [11.,  1.,  0., ...,  0., 18., 22.],\n",
       "        ...,\n",
       "        [ 0.,  0., 16., ...,  1.,  0., 52.],\n",
       "        [80.,  1.,  0., ..., 14.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ..., 32., 27.,  1.]], dtype=float32),\n",
       " array([[10., 68., 10., ..., 40.,  1.,  0.],\n",
       "        [ 4., 40.,  1., ..., 68., 10.,  1.],\n",
       "        [ 0., 21., 87., ..., 22.,  1.,  2.],\n",
       "        ...,\n",
       "        [25., 33.,  5., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 27.,  0.,  2.],\n",
       "        [20.,  3.,  6., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   1.,   5., ...,   9.,   0.,   2.],\n",
       "        [ 11.,   1.,   1., ...,   2.,  13.,  14.],\n",
       "        [102.,   1.,   0., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 75.,   2.,   0., ...,  16.,  10.,   8.],\n",
       "        [  1.,   1.,   0., ...,   0.,   0.,   3.],\n",
       "        [  9.,   6.,   4., ...,   0.,   5.,   9.]], dtype=float32),\n",
       " array([[118.,  25.,  49., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   3.,   4.],\n",
       "        [  0.,   0.,   0., ...,   2.,   5.,  12.],\n",
       "        ...,\n",
       "        [  3.,   0.,   0., ..., 102.,  69.,   9.],\n",
       "        [ 38.,  96.,  83., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[  5.,   3.,   1., ...,  18.,   1.,   6.],\n",
       "        [ 58.,   3.,   0., ...,  21.,   3.,   1.],\n",
       "        [  0.,   1.,   1., ...,   8.,   3.,   3.],\n",
       "        ...,\n",
       "        [ 10., 166.,  12., ...,   1.,   3.,   3.],\n",
       "        [  0., 174.,  50., ...,   5.,  31.,  13.],\n",
       "        [ 25., 181.,  74., ...,   0.,   2.,  70.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,  68.],\n",
       "        [  6.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0., 131.],\n",
       "        ...,\n",
       "        [ 43.,   8.,   4., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,  14., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,  15.,  12.]], dtype=float32),\n",
       " array([[  0.,   7.,  96., ...,  22.,  13.,  19.],\n",
       "        [  4.,  16.,   9., ...,  15., 149.,  15.],\n",
       "        [  2.,   4.,   4., ...,   1.,   6.,  15.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   7.,  28.,   0.],\n",
       "        [  7.,   0.,   1., ..., 105.,  51.,  18.],\n",
       "        [ 47.,   9.,  16., ...,  28.,  91.,  13.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  9.,  1.,  1.],\n",
       "        [89., 51.,  2., ...,  0.,  4.,  1.],\n",
       "        [ 5.,  3.,  3., ..., 48., 38., 23.],\n",
       "        ...,\n",
       "        [ 1.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 17.,  3.,  1.],\n",
       "        [47., 23.,  4., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[151.,  77.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  80.,   1.,   2.],\n",
       "        [ 25.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,  52.,  86.,   0.],\n",
       "        [  1.,  14.,   3., ...,   3.,  66.,  51.],\n",
       "        [ 15.,  19.,  48., ...,   1.,   0.,   3.]], dtype=float32),\n",
       " array([[ 0.,  9., 45., ...,  6., 53.,  5.],\n",
       "        [ 1.,  1.,  2., ...,  2.,  0.,  2.],\n",
       "        [ 3., 28., 75., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 2.,  3.,  7., ..., 13.,  2.,  3.],\n",
       "        [ 0.,  3., 30., ...,  0.,  1., 11.],\n",
       "        [ 8.,  4.,  5., ...,  2.,  3.,  1.]], dtype=float32),\n",
       " array([[ 13.,   4.,   2., ...,   1.,   1.,   0.],\n",
       "        [  0.,   0.,   2., ...,  32.,   3.,   7.],\n",
       "        [ 10.,  16.,  41., ...,   4.,   2.,   0.],\n",
       "        ...,\n",
       "        [  0.,   8.,  14., ...,  37.,   2.,   0.],\n",
       "        [ 20.,  21., 116., ...,   5.,   4.,   5.],\n",
       "        [ 38.,   5.,  10., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[87.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [32., 40., 24., ...,  0.,  5., 17.],\n",
       "        [ 0.,  0.,  0., ...,  0., 16., 72.],\n",
       "        ...,\n",
       "        [49., 29.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  6., ...,  0.,  2.,  8.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  3., 10.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  5.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 12.,   8.,   7., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [ 10.,   0.,   0., ...,  12.,  16.,  18.],\n",
       "        [ 12.,   8.,   0., ...,   4.,   2.,   1.],\n",
       "        [103.,  37.,   5., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  3.,  1., ..., 11.,  4., 20.],\n",
       "        [20., 25.,  5., ...,  1.,  0.,  1.],\n",
       "        [ 4.,  4.,  4., ...,  5.,  1., 16.],\n",
       "        ...,\n",
       "        [38., 25.,  4., ...,  0.,  0.,  1.],\n",
       "        [ 1.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 13.,  0.,  0.]], dtype=float32),\n",
       " array([[ 36.,  59.,  32., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   3., ...,  49.,  93.,  83.],\n",
       "        [  2.,   7.,  18., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 13.,  27.,  19., ...,   5.,   6.,  55.],\n",
       "        [108., 119.,  24., ...,   0.,   6.,  25.],\n",
       "        [ 16.,   5.,   4., ...,  10.,  69.,  42.]], dtype=float32),\n",
       " array([[64.,  2.,  1., ...,  0.,  0.,  2.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  4.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  2.,  3.],\n",
       "        ...,\n",
       "        [39., 80., 15., ..., 87.,  1.,  1.],\n",
       "        [ 1.,  0.,  0., ..., 16.,  0.,  0.],\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 12.,   2.,   0., ...,   0.,   0.,   3.],\n",
       "        [ 11.,   7.,  20., ...,   0.,   0.,   0.],\n",
       "        [101.,  89.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  2.,   5.,  35., ...,   0.,   0.,   0.],\n",
       "        [ 35.,  27.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 30.,  10.,   4., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 5.,  0.,  0., ...,  8.,  2.,  9.],\n",
       "        [ 6.,  1.,  1., ...,  0.,  0.,  5.],\n",
       "        [55.,  4.,  3., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [12.,  3.,  0., ..., 24.,  0.,  0.],\n",
       "        [ 1.,  3.,  2., ...,  0.,  0.,  5.],\n",
       "        [ 5.,  1.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[24., 18.,  5., ...,  0.,  1., 30.],\n",
       "        [15., 48.,  6., ..., 66., 13.,  0.],\n",
       "        [19.,  1.,  0., ...,  1.,  5.,  4.],\n",
       "        ...,\n",
       "        [50., 19.,  0., ...,  0.,  0.,  5.],\n",
       "        [24.,  0.,  0., ..., 22.,  0.,  0.],\n",
       "        [49., 20.,  0., ...,  4.,  0.,  4.]], dtype=float32),\n",
       " array([[ 22.,  15.,   6., ...,   0.,   0.,   2.],\n",
       "        [  0.,   2.,   8., ...,   2.,   3.,   2.],\n",
       "        [ 17.,  17.,  71., ...,   0.,   1.,   3.],\n",
       "        ...,\n",
       "        [  4., 111., 135., ...,   5.,  14.,   3.],\n",
       "        [ 14.,  15.,   8., ...,  11.,   5.,   6.],\n",
       "        [ 29., 153., 103., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   7.,   6.,  30.],\n",
       "        [ 12.,  61.,  32., ...,   1.,   0.,   1.],\n",
       "        [120.,  59.,   3., ...,   8.,   1.,  26.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   5.,  50.,  40.],\n",
       "        [ 95.,  63.,  49., ...,   0.,   0.,   4.],\n",
       "        [ 48.,   4.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  42.,   2.,   0.],\n",
       "        [  1.,   6.,   3., ...,  17.,  13.,   4.],\n",
       "        ...,\n",
       "        [  3.,   0.,  31., ...,  24.,  72., 119.],\n",
       "        [  2.,   6.,   2., ...,  13.,  19.,  11.],\n",
       "        [ 26.,  24.,   3., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 67., 100.,  16., ...,   0.,   0.,   0.],\n",
       "        [ 12.,  18.,   0., ..., 136.,  25.,  14.],\n",
       "        [  4.,  53.,  39., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 65.,   3.,   0., ...,   8.,   0.,   0.],\n",
       "        [  1.,  16.,  46., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  10.,   1.,   2.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  0.,   1.,  15., ...,   1.,   0.,   0.],\n",
       "        [  6.,   1.,   0., ...,   0.,   0.,   6.],\n",
       "        ...,\n",
       "        [  7., 128., 128., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   2.,  15.]], dtype=float32),\n",
       " array([[87., 10.,  0., ...,  4.,  0.,  0.],\n",
       "        [83.,  4.,  1., ..., 10., 11.,  8.],\n",
       "        [ 9.,  9.,  2., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [ 9.,  2.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1.,  0., ..., 16., 10.,  1.],\n",
       "        [12.,  3.,  0., ...,  3., 33., 36.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,  20.,   1.,   1.],\n",
       "        [  1.,   0.,   0., ...,  27.,   2.,   3.],\n",
       "        [  0.,   1.,   6., ...,   5.,  29., 119.],\n",
       "        ...,\n",
       "        [  7.,  45.,  25., ...,   2.,   0.,   5.],\n",
       "        [  5.,  36.,  11., ...,   2.,   0.,   0.],\n",
       "        [ 12.,   3.,   1., ...,  13.,  66.,  45.]], dtype=float32),\n",
       " array([[ 12.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 27.,  13.,   3., ...,   0.,   0.,   1.],\n",
       "        [ 48.,  33.,   2., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [116.,   1.,   0., ...,  29.,   0.,   0.],\n",
       "        [103.,  17.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   2., ...,  19.,  17.,  52.]], dtype=float32),\n",
       " array([[  1.,   0.,   1., ...,  40.,  19.,  10.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   5.],\n",
       "        [ 49.,  27.,   3., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  29.,  11.,  15.],\n",
       "        [159.,  37.,  16., ...,   0.,   0.,   0.],\n",
       "        [ 65.,  74.,  86., ...,   1.,  15.,  27.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 7.,  2.,  0., ..., 13.,  2.,  4.],\n",
       "        [14., 27., 14., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 2., 15., 17., ..., 69.,  1.,  0.],\n",
       "        [50., 33.,  1., ...,  0.,  0.,  0.],\n",
       "        [39., 40., 32., ...,  0.,  3., 22.]], dtype=float32),\n",
       " array([[ 12.,  36.,  21., ...,  14., 137.,  17.],\n",
       "        [113.,  62.,   8., ...,   1.,   1.,   1.],\n",
       "        [  6.,   2.,   2., ...,  23.,   5.,  15.],\n",
       "        ...,\n",
       "        [ 23.,  13.,  66., ...,   5.,   0.,   0.],\n",
       "        [ 70.,  27.,  38., ...,  10.,  10.,   1.],\n",
       "        [  0.,  12., 106., ...,   0.,   0.,  15.]], dtype=float32),\n",
       " array([[ 98.,  12.,   7., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0., 129., ...,   0.,   0.,   0.],\n",
       "        [ 21.,  11.,   9., ...,   2.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,  19.,   8., ...,   0.,   0.,   0.],\n",
       "        [ 70.,  44.,   8., ...,   0.,   0.,   0.],\n",
       "        [ 48.,  25.,   4., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 33.,  10.,   4., ...,   0.,   1., 107.],\n",
       "        [ 14.,   2.,   2., ...,   6.,   2.,  11.],\n",
       "        [ 21.,   2.,   2., ...,  31.,  11.,   3.],\n",
       "        ...,\n",
       "        [  0.,   9., 123., ...,   7.,   3.,   3.],\n",
       "        [  0.,   0.,   0., ...,   6.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   8.,   1.,   2.]], dtype=float32),\n",
       " array([[ 86.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [152.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [  3.,  78.,  55., ...,   0.,   0.,   8.],\n",
       "        ...,\n",
       "        [ 67.,   4.,   0., ...,   8.,   4.,   1.],\n",
       "        [  1.,   4.,  36., ..., 137., 137.,  30.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  3.,   1.,   0., ...,   2.,   1.,   1.],\n",
       "        [ 30.,  33.,  11., ...,   0.,   0.,   4.],\n",
       "        [  0.,   0.,   0., ...,   1.,   3.,  26.],\n",
       "        ...,\n",
       "        [  2.,   6.,  32., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,  51., ..., 122., 109.,  15.],\n",
       "        [  8.,  88.,  23., ...,   7., 141.,  84.]], dtype=float32),\n",
       " array([[26.,  8., 27., ...,  6., 37., 77.],\n",
       "        [ 2.,  1.,  2., ...,  0.,  0.,  2.],\n",
       "        [20., 12.,  3., ...,  0.,  2.,  3.],\n",
       "        ...,\n",
       "        [ 3., 12., 73., ...,  0.,  7., 43.],\n",
       "        [54., 31., 39., ...,  0.,  0., 12.],\n",
       "        [ 0.,  0.,  0., ..., 46., 47., 17.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        [24.,  2.,  0., ...,  1.,  0.,  6.],\n",
       "        [ 0.,  1.,  0., ...,  0.,  0.,  4.],\n",
       "        ...,\n",
       "        [55., 11.,  1., ...,  3.,  0.,  0.],\n",
       "        [19., 23.,  0., ...,  0., 28., 43.],\n",
       "        [36., 46., 19., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 46., 115.,  54., ...,  25.,   3.,   1.],\n",
       "        [  0.,   0.,  18., ...,   0.,   0.,   2.],\n",
       "        [  1.,   0.,   9., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  2.,   6.,   9., ...,   0.,   0.,   0.],\n",
       "        [ 12.,  11.,  22., ...,   5.,  19.,  28.],\n",
       "        [ 22.,   3.,   0., ...,   3.,   8.,  10.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  9.,  1.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 12.,  1.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  0.,  6.],\n",
       "        ...,\n",
       "        [15., 10.,  6., ..., 15.,  3.,  9.],\n",
       "        [58., 33.,  1., ..., 10.,  1., 37.],\n",
       "        [14.,  2.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   9.,  58.,  42.],\n",
       "        [132.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  7.,  22.,   6., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 47., 149.,  12., ...,   0.,   0.,   0.],\n",
       "        [ 73.,  67.,   5., ...,   0.,   1.,  58.],\n",
       "        [  0.,   0.,   2., ...,  13.,   1.,   7.]], dtype=float32),\n",
       " array([[ 26.,  18.,   0., ...,   0.,   0.,   2.],\n",
       "        [ 18.,   2.,   9., ...,   0.,   0.,   0.],\n",
       "        [ 34.,   8.,  19., ...,  76.,  22.,   6.],\n",
       "        ...,\n",
       "        [ 17.,   3.,   9., ...,   2.,   0.,   0.],\n",
       "        [ 28., 137.,   3., ...,   0.,   0.,   0.],\n",
       "        [  5., 131.,  64., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  5.,  5., 17.],\n",
       "        [38., 13.,  5., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 72., 14.,  3.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0., 12.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  1., 11.]], dtype=float32),\n",
       " array([[17., 41., 23., ...,  0.,  0.,  0.],\n",
       "        [25.,  6.,  1., ...,  1.,  0.,  0.],\n",
       "        [27.,  7.,  2., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 7., 61.,  5., ...,  0.,  0.,  8.],\n",
       "        [ 0.,  0.,  1., ...,  8.,  2.,  1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0.,   4.,  42.,  20.,  14.,   8.,  28.,   4.,   6.,\n",
       "          15.,  98.,  47.,  11.,  16., 153.,  11.,   6.,   6.,  12.,   4.,\n",
       "           1., 153.,  66.,   5.,   1.,   4.,   5.,   1.,  14., 137.,   7.,\n",
       "           0.,   0.,   2.,  18.,   8.,   7.,  20.,  61.,   1.,   0.,   2.,\n",
       "         153.,  61.,   9.,  24., 153.,  55.,   0.,   0.,  15.,   9.,   3.,\n",
       "          63., 102.,  75.,   4.,   5.,  12.,   4.,   2.,  14.,   1.,   0.,\n",
       "           0.,   0.,   4.,   9.,   5.,   4.,  20.,   1.,   0.,   1.,  48.,\n",
       "         122.,  28.,  19., 153.,  29.,   0.,   0.,   3.,  21.,  22.,  63.,\n",
       "         147.,  38.,   1.,   0.,   0.,   1.,   0.,   4.,   0.,   0.,   0.,\n",
       "           0.,   0.,   0.,   0.,   0.,   5.,   1.,   1.,   2.,   8.,  12.,\n",
       "           5.,   5.,  97.,  52.,   9.,   0.,   1.,   3.,   5.,  26.,  46.,\n",
       "          91.,  42.,   0.,   0.,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   2.,  29.,  64.,   7.,   5.,   3.,  31.,   4.,   1.,\n",
       "          17.,  30.,  40.,  22.,  18., 164.,  13.,   1.,   3.,   4.,   9.,\n",
       "          11., 101.,  81.,  11.,   8.,   4.,   4.,  26.,  31.,  52.,   4.,\n",
       "           1.,   2.,  12.,  41.,  37.,  18.,   8.,  46.,  14.,   4.,  43.,\n",
       "          39.,  35.,  23.,  18., 164.,  99.,   5.,  12.,   8.,   7.,   4.,\n",
       "          40., 108.,  64.,  28.,  18.,   8.,  11.,   8.,  20.,   0.,   0.,\n",
       "           0.,   1.,  31.,  62.,  37.,  16.,  33.,   4.,   1.,  22.,  47.,\n",
       "         108.,  38.,  25., 164.,  53.,   2.,   4.,   7.,  15.,   8.,  74.,\n",
       "         110.,  71.,  12.,   2.,   0.,   0.,   5.,  41.,   0.,   1.,   7.,\n",
       "          25.,  34.,  35.,  10.,   4.,  18.,   6.,   4.,  34.,  64.,  23.,\n",
       "          19.,  21., 135.,  78.,   3.,   5.,   6.,   4.,  19.,  45.,  83.,\n",
       "         119.,  11.,   0.,   0.,   0.,   1.,   9.],\n",
       "        [  3.,   2.,   2.,   8.,  28.,  15.,   1.,   1.,  13.,  27.,  26.,\n",
       "           8.,   2.,   1.,   2.,   3., 151.,  24.,   9.,   1.,   0.,   0.,\n",
       "           2.,  51.,  95.,   0.,   0.,   0.,   0.,   0.,   7., 100.,   1.,\n",
       "           0.,   1.,   7.,  57.,  27.,   8.,   3.,  46.,  19.,  27.,  35.,\n",
       "          55.,  35.,   6.,   3., 153.,  32.,  11.,   5.,   4.,   2.,   1.,\n",
       "          99.,  91.,   6.,   1.,   6.,  10.,   2.,   6., 121.,   5.,   0.,\n",
       "           0.,   2.,  28.,  25.,  15.,  18.,  57.,   3.,   0.,   1., 111.,\n",
       "         107.,  14.,  17., 153., 102.,   0.,   0.,  15.,  15.,   2.,  25.,\n",
       "          85., 101.,   9.,   3.,  10.,   4.,   2.,  12.,   6.,   0.,   0.,\n",
       "           0.,   2.,   2.,   1.,   7.,  13.,   2.,   0.,   0.,  49.,  89.,\n",
       "          18.,   9., 153.,  73.,   0.,   0.,   8.,  36.,  21.,  25., 120.,\n",
       "          75.,   1.,   0.,   0.,   0.,   0.,   2.],\n",
       "        [ 39.,   5.,   1.,   8.,  29.,  19.,   3.,   7., 160.,  12.,   0.,\n",
       "           1.,   0.,   1.,   1.,  56., 131.,  28.,   2.,   0.,   0.,   0.,\n",
       "           1.,  45.,  92.,  28.,   0.,   0.,   0.,   0.,   2.,  23.,  51.,\n",
       "           4.,   0.,   8.,  27.,  22.,  15.,  15., 160.,  16.,   1.,   1.,\n",
       "           1.,   2.,   9.,  87., 114.,  23.,   4.,   0.,   0.,   3.,  32.,\n",
       "          74., 105.,  25.,   5.,   0.,   0.,   0.,   0.,  53.,  38.,   9.,\n",
       "           1.,  10.,  18.,  29.,  17.,  10., 160.,  93.,   3.,   3.,   2.,\n",
       "           3.,   3.,  25., 131.,  73.,  18.,   1.,   0.,   1.,   6.,  19.,\n",
       "          71.,  33.,  12.,   0.,   0.,   1.,   1.,  11.,  18.,   2.,   0.,\n",
       "           3.,  22.,  47.,  19.,   9., 160.,  53.,   0.,   1.,   4.,   7.,\n",
       "           3.,  23., 123.,  95.,   1.,   0.,   0.,   0.,   0.,  11.,  49.,\n",
       "          25.,  11.,   4.,   0.,   1.,   2.,   8.],\n",
       "        [ 76.,  55.,   7.,  13.,  14.,   1.,   0.,   3., 163.,  94.,   0.,\n",
       "           0.,   0.,   0.,   0.,   9., 122.,  63.,   0.,   0.,   0.,   0.,\n",
       "           0.,  11.,  49.,  20.,   2.,   1.,   0.,   1.,   8.,  12.,  80.,\n",
       "          25.,   4.,   9.,  10.,  23.,  14.,   9., 163.,  54.,   1.,   0.,\n",
       "           0.,   1.,   4.,  71., 121.,  39.,   8.,   5.,   0.,   1.,  20.,\n",
       "          64.,  97.,  58.,   2.,   0.,   0.,   0.,   5.,  20.,  71.,  17.,\n",
       "           3.,  24.,  25.,  17.,   8.,   7., 163.,  57.,   4.,   2.,   1.,\n",
       "           2.,   6.,  43.,  86.,  38.,  26.,  13.,   2.,  15.,  30.,  40.,\n",
       "          92.,  51.,   4.,   0.,   0.,   1.,   2.,  62.,  40.,   6.,   1.,\n",
       "           7.,  15.,  29.,  24.,  16., 163.,  60.,   2.,   2.,   2.,   5.,\n",
       "           9.,  42.,  81.,  35.,  11.,  10.,  10.,  25.,  27.,  31.,  72.,\n",
       "          34.,   6.,   2.,   1.,   2.,   3.,  25.],\n",
       "        [ 10.,  16.,   9.,   3.,   7.,   5.,   0.,   2., 143.,  20.,   6.,\n",
       "           1.,   0.,   0.,   3.,  62.,  60.,   0.,   0.,   4.,   0.,   0.,\n",
       "          32., 144.,   5.,   0.,   8.,  52.,   1.,   0.,   9.,  81.,  23.,\n",
       "          14.,  13.,  14.,  42.,  36.,   4.,   2., 144.,  36.,   8.,   4.,\n",
       "           6.,   6.,   1.,  99., 101.,   8.,   1.,  28.,  27.,   5.,   2.,\n",
       "         115.,   1.,   0.,   6., 111.,  47.,  10.,   0.,   5.,  21.,   1.,\n",
       "           0.,   1.,  35.,  77.,  16.,   9., 144., 102.,   0.,   0.,  14.,\n",
       "          31.,   7.,  25., 108.,  96.,   4.,   4.,  23.,  23.,   1.,   8.,\n",
       "           1.,   4.,   1.,   8.,  56., 113.,   1.,   0.,   1.,   0.,   0.,\n",
       "           0.,   4.,  29.,  12.,   3., 125.,  44.,   3.,   0.,   2.,  26.,\n",
       "          20.,  26.,  86., 117.,  45.,   0.,   0.,   2.,   0.,   1.,   1.,\n",
       "          42.,  33.,   1.,   7.,  41.,   1.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  54.,  37.,  12.],\n",
       "        [ 42.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 47.,  52.,  17., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 13.,  23.,   2., ...,  25.,   7.,   7.],\n",
       "        [  0.,   0.,   0., ...,  23.,  12.,   7.],\n",
       "        [ 16.,  72., 101., ...,   5.,   5.,  16.]], dtype=float32),\n",
       " array([[ 11.,   2.,   2., ...,   4.,   4.,   2.],\n",
       "        [ 96.,  25.,   4., ...,   8.,   1.,   1.],\n",
       "        [133.,   9.,   3., ...,   7.,   1.,   5.],\n",
       "        ...,\n",
       "        [ 11.,   0.,   1., ...,   6.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,  22.,   3.]], dtype=float32),\n",
       " array([[ 37., 139.,  22., ...,  36.,  22.,   6.],\n",
       "        [  0.,   0.,   0., ...,   7.,   4.,  13.],\n",
       "        [  0.,   5.,  63., ...,   4.,  21.,  21.],\n",
       "        ...,\n",
       "        [ 44.,  12.,   9., ...,  12.,  34.,  17.],\n",
       "        [  0.,   0.,   0., ...,   0.,   5.,  28.],\n",
       "        [ 21.,   9.,   4., ...,   8.,  96.,  66.]], dtype=float32),\n",
       " array([[ 43., 130.,  39., ...,   0.,  35.,  29.],\n",
       "        [  0.,   0.,   0., ...,   1.,   4.,  47.],\n",
       "        [  6.,  90., 119., ...,   5.,   0.,  11.],\n",
       "        ...,\n",
       "        [ 17., 154.,  73., ...,   0.,   0.,   0.],\n",
       "        [ 11.,  10.,   5., ...,  14.,   1.,   2.],\n",
       "        [ 25.,  14.,   1., ...,  10.,   6.,  20.]], dtype=float32),\n",
       " array([[12.,  6.,  6., ...,  0.,  0.,  0.],\n",
       "        [ 4.,  0.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  0.,  0., ...,  8.,  3.,  0.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  0., ...,  4.,  0.,  0.],\n",
       "        [ 7.,  0.,  0., ...,  0., 10., 25.],\n",
       "        [ 2., 10.,  6., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[24., 35.,  4., ..., 29.,  3.,  5.],\n",
       "        [36., 17.,  4., ..., 20.,  8.,  3.],\n",
       "        [ 5.,  0.,  0., ..., 14., 17., 87.],\n",
       "        ...,\n",
       "        [19., 39., 12., ...,  4., 26.,  9.],\n",
       "        [ 5.,  6.,  4., ...,  0.,  2.,  2.],\n",
       "        [16.,  3.,  0., ...,  5.,  9., 10.]], dtype=float32),\n",
       " array([[36., 88., 24., ...,  5., 14., 59.],\n",
       "        [ 2.,  2.,  4., ..., 44., 54., 41.],\n",
       "        [85.,  8., 10., ...,  0.,  4., 13.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  9., 24.,  7.],\n",
       "        [ 0.,  0.,  1., ..., 34., 60., 97.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  5.,  63., 175., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 28.,  12.,  15., ...,  13.,  10.,  24.],\n",
       "        [ 23.,   2.,  10., ...,  43.,  26.,  39.],\n",
       "        [ 38.,  62.,  15., ...,  23.,   7.,  17.]], dtype=float32),\n",
       " array([[ 56.,  38.,  10., ...,   0.,   0.,   0.],\n",
       "        [142.,  92.,   6., ...,  31.,  17.,   2.],\n",
       "        [  0.,   1.,   0., ...,   3.,  11.,  88.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  33.,  47.,   9.],\n",
       "        [  0.,   0.,   0., ...,  19.,   5.,   1.],\n",
       "        [ 10.,   6.,   6., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  4.,   8.,  22., ...,   0.,   0.,   0.],\n",
       "        [131.,  56.,   8., ...,   0.,   0.,   0.],\n",
       "        [135.,  30.,   3., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [136.,   4.,   0., ...,   7.,   0.,   1.],\n",
       "        [  2.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  3., 124.,  37., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 24.,   1.,   2., ...,   2.,  30.,  39.],\n",
       "        [ 30.,   1.,   1., ...,   1.,  20.,  72.],\n",
       "        [  0.,   2.,  22., ...,   0.,   0.,   7.],\n",
       "        ...,\n",
       "        [  5.,  10.,  43., ...,  18.,   1.,   1.],\n",
       "        [ 51.,  47.,   4., ...,   0.,   0.,   0.],\n",
       "        [  1.,   2.,   2., ..., 124.,  25.,   3.]], dtype=float32),\n",
       " array([[ 13.,  51.,   7., ...,   0.,   1.,  52.],\n",
       "        [  7.,  19.,  68., ...,   0.,   0.,   0.],\n",
       "        [  7.,  36., 113., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   6.,   5.,   3.],\n",
       "        [  0.,   0.,   0., ...,  31.,   3.,  14.],\n",
       "        [  9.,  49., 142., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 56.,   7.,   2., ...,   2.,   0.,   0.],\n",
       "        [  4.,   1.,   5., ...,   0.,  23.,  10.],\n",
       "        [  0.,   0.,   0., ...,  29.,  19.,   2.],\n",
       "        ...,\n",
       "        [117.,   0.,   0., ...,   8.,   0.,   1.],\n",
       "        [  7.,  15.,  17., ...,  11.,   7.,  13.],\n",
       "        [  0.,   2.,   1., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 19.,  17.,   4., ...,   0.,   0.,   0.],\n",
       "        [127., 127.,  21., ...,  20.,  29.,   1.],\n",
       "        [  0.,   1.,   3., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,  10.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 20.,   2.,   1., ...,   0.,   0.,   1.],\n",
       "        [ 15.,   7.,  16., ...,  64.,   8.,  21.]], dtype=float32),\n",
       " array([[  0.,   0.,  19., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   7., ...,  20.,  42.,  10.],\n",
       "        [ 95., 131.,   4., ...,   7.,  15.,   4.],\n",
       "        ...,\n",
       "        [  1.,   1.,   7., ...,   7.,  16.,   6.],\n",
       "        [ 14.,  36.,  28., ...,  11.,   4.,   4.],\n",
       "        [ 27.,  11.,   8., ...,   0.,   0.,   7.]], dtype=float32),\n",
       " array([[  2.,   5.,  10., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,  10., 125.],\n",
       "        [  0.,   0.,   0., ...,   1.,  17., 131.],\n",
       "        ...,\n",
       "        [  1.,  32.,  59., ...,   0.,   0.,   3.],\n",
       "        [ 21.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  6.,   1.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2., 133., 133.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 30.,  41., 104., ...,   2.,   0.,   1.],\n",
       "        ...,\n",
       "        [  1.,   6.,  15., ...,  11.,   0.,   3.],\n",
       "        [ 30.,  37.,  81., ...,  10.,  11.,   4.],\n",
       "        [113., 114.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  3., 100.,  23., ...,   0.,   1.,   2.],\n",
       "        [  4.,   6.,  26., ...,   0.,   0.,   0.],\n",
       "        [ 57.,  52.,  59., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 56.,  67.,  27., ...,  27.,   6.,   4.],\n",
       "        [  8.,  26.,  52., ...,   0.,   0.,   0.],\n",
       "        [121.,  96.,  35., ...,  21.,  46.,  21.]], dtype=float32),\n",
       " array([[  5.,   0.,  10., ...,   0.,   1.,   2.],\n",
       "        [  0.,   0.,   0., ...,  34.,  17.,  14.],\n",
       "        [  3.,   1.,   0., ...,  42.,   3.,   3.],\n",
       "        ...,\n",
       "        [  0.,  23.,  59., ...,   2.,   8.,  20.],\n",
       "        [  0.,   0.,   0., ...,  79.,  47.,  33.],\n",
       "        [  0.,   0.,  13., ...,   0.,  26., 114.]], dtype=float32),\n",
       " array([[ 11.,  28.,  37., ...,   4.,   0.,   0.],\n",
       "        [  6.,  47.,  79., ...,  11.,   6.,   2.],\n",
       "        [ 74.,   4.,   1., ...,  14.,   8.,   5.],\n",
       "        ...,\n",
       "        [ 44.,  27.,  12., ...,  89., 114.,   1.],\n",
       "        [  7.,  38.,  51., ...,   6.,  32.,   4.],\n",
       "        [  0.,   6.,   2., ...,  61., 120.,  30.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  18.,   4.,  13.],\n",
       "        [  2.,   5.,  13., ...,   0.,   0.,   0.],\n",
       "        [103.,   0.,   0., ...,   5.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  2.,   3.,   3., ...,  32.,   1.,   3.],\n",
       "        [  6.,   3.,   1., ...,   0.,   0.,   2.]], dtype=float32),\n",
       " array([[  0.,   1.,   0., ...,  98.,   7.,  11.],\n",
       "        [ 44.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 26.,   6.,   0., ...,   0.,   2.,   8.],\n",
       "        ...,\n",
       "        [  6.,  40.,  12., ...,   3.,   2.,   1.],\n",
       "        [ 11.,  16.,   5., ...,  41.,   9.,   7.],\n",
       "        [160.,  38.,   3., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[121.,  47.,   0., ...,  32.,   7.,  43.],\n",
       "        [ 89.,  70.,   6., ..., 130.,   4.,   1.],\n",
       "        [  1.,   0.,   3., ...,   2.,   0.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  18.,   0.,   7.],\n",
       "        [  7.,  42.,  26., ...,   0.,   0.,   0.],\n",
       "        [157.,  17.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[168.,   7.,   3., ...,   0.,   0.,   0.],\n",
       "        [ 80.,  58.,   1., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,  31.,  14.,   3.],\n",
       "        ...,\n",
       "        [  6.,   1.,   0., ...,  11.,  20.,  33.],\n",
       "        [  1.,   6.,  14., ...,   1.,   1.,  18.],\n",
       "        [  5.,   6.,  19., ...,   5.,   7.,   9.]], dtype=float32),\n",
       " array([[ 0.,  0.,  4., ...,  4.,  1.,  1.],\n",
       "        [52., 48.,  3., ...,  6.,  1., 12.],\n",
       "        [43., 66., 24., ..., 59., 14.,  0.],\n",
       "        ...,\n",
       "        [13., 45.,  9., ...,  1.,  0.,  0.],\n",
       "        [ 0., 12., 16., ...,  3., 19., 59.],\n",
       "        [ 5.,  3., 77., ..., 10., 22.,  3.]], dtype=float32),\n",
       " array([[  1.,   4.,  24., ...,   5.,   3.,   9.],\n",
       "        [  1.,   5.,  25., ...,  31.,   6.,  29.],\n",
       "        [  5.,   0.,  11., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 66., 110.,   7., ...,   0.,   0.,   0.],\n",
       "        [ 12.,  32.,  50., ...,   1.,  13.,  32.],\n",
       "        [ 78.,   5.,   1., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[124.,  43.,   9., ...,   5.,   0.,   0.],\n",
       "        [  1.,   1.,  24., ...,   1.,   2.,   0.],\n",
       "        [ 30., 127.,  22., ...,   8.,  16.,  41.],\n",
       "        ...,\n",
       "        [  6.,  10.,  14., ...,   0.,   1.,   0.],\n",
       "        [ 60., 123.,  26., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   9., ...,   0.,  20.,  71.]], dtype=float32),\n",
       " array([[61., 69.,  9., ...,  0.,  0.,  0.],\n",
       "        [69., 54., 13., ...,  7.,  4., 10.],\n",
       "        [18., 29., 85., ...,  0., 13.,  2.],\n",
       "        ...,\n",
       "        [76., 97., 47., ...,  0.,  2.,  7.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 35.],\n",
       "        [69., 61., 10., ...,  0.,  0., 22.]], dtype=float32),\n",
       " array([[ 12.,  99., 119., ...,   2.,   2.,   6.],\n",
       "        [ 15.,  32.,  18., ...,   1.,   0.,   0.],\n",
       "        [ 33.,  26.,  11., ...,   1.,   2.,   3.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   2.,   6.,  33.],\n",
       "        [  7.,   1.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  1.,  5.],\n",
       "        [21.,  5.,  2., ...,  5.,  4.,  0.],\n",
       "        [44., 12.,  7., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  1.,  4., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  7., 80., ...,  6., 13., 52.],\n",
       "        [65.,  4.,  4., ...,  2., 23., 82.]], dtype=float32),\n",
       " array([[ 29., 136.,  94., ...,   0.,  14.,  11.],\n",
       "        [ 15.,   1.,   6., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   7.],\n",
       "        ...,\n",
       "        [ 12.,  54.,  28., ...,   0.,   1.,   2.],\n",
       "        [  0.,   1.,  27., ...,   0.,   0.,   1.],\n",
       "        [ 28.,  73.,  12., ...,  54.,   7.,   0.]], dtype=float32),\n",
       " array([[  2.,   1.,   0., ..., 121.,  77.,   2.],\n",
       "        [  1.,   0.,   0., ...,  64., 121.,  62.],\n",
       "        [  0.,   2.,   6., ...,   2.,   1.,   2.],\n",
       "        ...,\n",
       "        [ 48.,  16.,   4., ...,   1.,   5.,   7.],\n",
       "        [  0.,   0.,   0., ...,  68.,   8.,   6.],\n",
       "        [ 12.,  10.,  15., ...,  15.,  21.,   9.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ..., 13., 10., 30.],\n",
       "        [16., 13., 10., ...,  0.,  0.,  0.],\n",
       "        [39.,  0.,  0., ..., 23., 13., 34.],\n",
       "        ...,\n",
       "        [ 3.,  9.,  4., ...,  0.,  0.,  0.],\n",
       "        [40., 82., 10., ..., 54.,  1.,  3.],\n",
       "        [23.,  1.,  0., ...,  5.,  0.,  0.]], dtype=float32),\n",
       " array([[ 11.,  26., 129., ...,   0.,   1.,   1.],\n",
       "        [  5.,   3.,  24., ...,  26.,  27.,  20.],\n",
       "        [  1.,   7.,  72., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  2., 151.,  24., ...,   0.,   0.,   0.],\n",
       "        [ 25.,   6.,  12., ...,   0.,   0.,   0.],\n",
       "        [ 63., 118.,  29., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 21.,  21.,  13., ...,   2.,   1.,   1.],\n",
       "        [100.,  25.,   9., ...,  11.,   7.,   6.],\n",
       "        [  1.,  10.,  41., ...,   0.,   0.,   4.],\n",
       "        ...,\n",
       "        [ 11.,  15.,   2., ...,   2.,   0.,   2.],\n",
       "        [ 87.,   7.,   1., ...,  49.,  10.,   8.],\n",
       "        [ 13.,   2.,  12., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[23.,  4.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  0.,  0., ...,  0.,  0., 16.],\n",
       "        [47., 69., 22., ...,  1.,  7., 12.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  2., 18., 13.],\n",
       "        [ 5.,  5., 32., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 13.,  7., 17.]], dtype=float32),\n",
       " array([[49., 25., 15., ..., 70., 94.,  5.],\n",
       "        [ 4.,  0.,  0., ..., 10.,  3.,  5.],\n",
       "        [10., 43., 12., ..., 39.,  1.,  2.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  1., ...,  2.,  1.,  3.],\n",
       "        [ 3.,  8., 16., ..., 16., 25., 10.],\n",
       "        [56.,  5.,  3., ..., 22., 27.,  4.]], dtype=float32),\n",
       " array([[ 94.,  10.,   0., ...,   1.,   2.,  66.],\n",
       "        [ 32.,  59.,  70., ...,   3.,   3.,  10.],\n",
       "        [ 39.,  13.,   0., ...,  12.,   6.,   2.],\n",
       "        ...,\n",
       "        [ 30.,  63.,  17., ...,   0.,   0.,   0.],\n",
       "        [  7.,   6.,   6., ...,   8.,   0.,   3.],\n",
       "        [  0.,   0.,   5., ...,   1.,  13., 132.]], dtype=float32),\n",
       " array([[37.,  2.,  0., ...,  7.,  1.,  0.],\n",
       "        [ 3., 12., 12., ..., 11., 37.,  5.],\n",
       "        [ 0.,  7., 25., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  1.,  0., ...,  3.,  1., 15.],\n",
       "        [ 0.,  0.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  3., 13.,  5.]], dtype=float32),\n",
       " array([[ 12.,  16.,  12., ...,  58.,  13.,   1.],\n",
       "        [ 21.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   2., ...,   8.,  13.,  10.],\n",
       "        ...,\n",
       "        [  6.,   8.,  66., ...,   2.,  11.,  65.],\n",
       "        [  3.,   0.,   2., ...,   0.,   1.,   2.],\n",
       "        [ 28.,  55., 107., ...,   0.,   7.,   1.]], dtype=float32),\n",
       " array([[ 9.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1.,  1., ...,  1.,  0.,  0.],\n",
       "        [40.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [19., 42.,  4., ...,  0.,  0., 11.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  0.],\n",
       "        [63., 16.,  0., ...,  2.,  0.,  1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  8.],\n",
       "        [ 0.,  4., 11., ...,  0.,  0.,  0.],\n",
       "        [26.,  1.,  1., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [89.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [99.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1.,  7., ...,  0.,  0.,  3.]], dtype=float32),\n",
       " array([[  1., 122., 119., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,   0.,   5.,   1.],\n",
       "        [ 22.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 28.,  42.,   7., ...,  78.,   2.,   0.],\n",
       "        [ 32.,  32.,  22., ...,  45.,  45.,  50.],\n",
       "        [137., 137.,  15., ...,   5.,   6.,   5.]], dtype=float32),\n",
       " array([[15.,  4.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 4.,  0.,  0., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  1.,  1., ...,  7.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  7.],\n",
       "        [ 0.,  1.,  2., ...,  0.,  0.,  0.],\n",
       "        [12., 24.,  4., ...,  0.,  0., 19.]], dtype=float32),\n",
       " array([[ 0.,  2.,  2., ...,  0.,  0.,  0.],\n",
       "        [26.,  6.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 3., 32., 18., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  3., 10., ...,  0.,  0.,  3.],\n",
       "        [ 6., 20., 13., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ..., 13.,  1.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 13.,  3.,  4.],\n",
       "        [ 0.,  0., 12., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  0., ..., 11.,  4.,  2.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [25.,  9.,  3., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   3.,  20., ...,   0.,   0.,   0.],\n",
       "        [ 21.,   5.,   3., ...,  34.,   2.,   1.],\n",
       "        [  0.,   0.,   0., ...,  71.,   3.,   1.],\n",
       "        ...,\n",
       "        [ 23.,  66.,  85., ...,   0.,  78., 100.],\n",
       "        [ 53.,  54.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 21.,   3.,   0., ...,   0.,   0.,  13.]], dtype=float32),\n",
       " array([[41., 38., 97., ...,  0.,  0.,  0.],\n",
       "        [20., 34., 11., ..., 14.,  3., 12.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  2.,  6.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [51., 15.,  0., ...,  0.,  0.,  1.],\n",
       "        [14.,  6.,  1., ..., 24., 41., 89.]], dtype=float32),\n",
       " array([[42.,  9.,  1., ...,  1.,  0.,  1.],\n",
       "        [19., 14.,  2., ...,  0.,  0.,  7.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  0.,  5.],\n",
       "        ...,\n",
       "        [ 0.,  2.,  0., ...,  5.,  3.,  6.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  1., 16.],\n",
       "        [ 1.,  1.,  0., ...,  6., 10.,  8.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 85.,  3.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 15.],\n",
       "        [ 7.,  4.,  1., ...,  4.,  1.,  6.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  2.,  2.,  3.],\n",
       "        [ 3.,  3.,  0., ...,  1.,  0.,  3.],\n",
       "        [ 5.,  5.,  0., ...,  1.,  1.,  1.]], dtype=float32),\n",
       " array([[ 28.,   5.,   0., ...,   0.,   0.,   3.],\n",
       "        [  9.,  94., 100., ...,  19.,   7.,   5.],\n",
       "        [ 31., 106.,   9., ..., 130.,  80.,   0.],\n",
       "        ...,\n",
       "        [  9.,   5.,  25., ...,   9.,   2.,   2.],\n",
       "        [  3.,   2.,   9., ...,   9.,  10.,  10.],\n",
       "        [ 13.,  35.,  38., ...,  46.,   8.,  15.]], dtype=float32),\n",
       " array([[ 12.,  25.,  18., ...,   3.,   3.,   2.],\n",
       "        [129.,  32.,   3., ...,   6.,   8.,  38.],\n",
       "        [ 71.,  37.,   1., ...,  14.,   5.,   4.],\n",
       "        ...,\n",
       "        [ 14.,  17.,  42., ...,   0.,   0.,   0.],\n",
       "        [ 72.,  31.,   2., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  18.,   0.,   0.]], dtype=float32),\n",
       " array([[ 12., 120.,  77., ...,   0.,   1.,  17.],\n",
       "        [  4.,   4.,   3., ...,   8.,  35.,  28.],\n",
       "        [ 20.,   7.,   5., ...,   7.,  22.,  12.],\n",
       "        ...,\n",
       "        [ 35., 129.,  24., ...,   2.,   8.,  37.],\n",
       "        [ 22.,  46.,  31., ...,  21.,   8.,   3.],\n",
       "        [ 18.,   6.,   6., ...,   4.,  11.,   6.]], dtype=float32),\n",
       " array([[131., 164.,  34., ...,   0.,   0.,   0.],\n",
       "        [  8.,  10.,  16., ..., 104.,   6.,  33.],\n",
       "        [ 18.,  16.,   1., ...,   0.,   5.,  30.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   7.,  23.],\n",
       "        [151.,  46.,  13., ...,   6.,   3.,  12.],\n",
       "        [ 13.,  41.,  66., ...,   2.,   1.,   7.]], dtype=float32),\n",
       " array([[  0., 110., 112., ...,   0.,   0.,   1.],\n",
       "        [  0.,   5.,  56., ...,   0.,   0.,   2.],\n",
       "        [  3.,  39.,  93., ...,   0.,   0.,   7.],\n",
       "        ...,\n",
       "        [ 15.,  14.,  17., ...,  87.,  69.,   1.],\n",
       "        [  0.,   0.,   0., ...,  31.,  33.,  13.],\n",
       "        [ 89.,  60.,  33., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[ 36.,  48.,   4.,   0.,   0.,   0.,   0.,   1., 150.,  88.,   0.,\n",
       "           0.,   0.,   2.,  12.,  30.,  49.,   4.,   1.,   0.,   1.,  60.,\n",
       "          73.,  24.,  31.,   2.,   2.,   1.,   0.,  43.,  62.,  22.,  46.,\n",
       "          10.,   2.,   2.,   5.,   3.,   1.,   5., 150.,  38.,   4.,   6.,\n",
       "           3.,   2.,   1.,  56.,  89.,  12.,  52.,  92.,  24.,  13.,  12.,\n",
       "          28.,   3.,  38.,  99.,  19.,   1.,  15.,  17.,   4.,  41.,  16.,\n",
       "          14.,  16.,   3.,   1.,   0.,   1., 150., 150.,  53.,  16.,   1.,\n",
       "           0.,   0.,   3.,  39.,  60., 118., 150.,   9.,   0.,   1.,  13.,\n",
       "          36.,  52.,  45.,  17.,   0.,   0.,   5.,  23.,  22.,   8.,   3.,\n",
       "           8.,   5.,   2.,   1.,   5.,  74.,  68.,  17.,   1.,   0.,   0.,\n",
       "           3.,  69.,  43.,  26.,  29.,   4.,   0.,   1.,  16., 150.,  16.,\n",
       "           1.,   0.,   0.,   0.,   4.,  33.,  60.],\n",
       "        [124.,  48.,   0.,   0.,   0.,   0.,   0.,   2., 135.,  46.,   1.,\n",
       "           5.,  52.,  14.,   1.,   6.,   4.,   4.,   4.,  13., 135.,  39.,\n",
       "           1.,   1.,   2.,  22.,  26.,   3.,  11.,   3.,   1.,   2., 100.,\n",
       "          54.,   0.,   0.,   0.,   7.,   9.,  11., 135.,  73.,   1.,   5.,\n",
       "          43.,  15.,   1.,  13.,  17.,   3.,   0.,  26., 135.,  73.,   1.,\n",
       "           2.,   8.,   4.,   2.,   5.,  32.,   9.,   2.,   7.,  48.,   2.,\n",
       "           0.,   0.,   2.,  25.,  78.,  69., 135.,  10.,   2.,  31.,  39.,\n",
       "          13.,   6.,  97.,  15.,   3.,   2., 126., 135.,  34.,   1.,   6.,\n",
       "           7.,   3.,   0.,  11.,  16.,   2.,  11.,  21.,  46.,   6.,   4.,\n",
       "           3.,  15.,   9.,  23.,  41., 108.,   1.,   0.,   3.,  38.,  35.,\n",
       "           8.,  80.,   4.,   2.,   1.,  13., 135.,  99.,   3.,   4.,   4.,\n",
       "          27.,  11.,   4.,  17.,   5.,   4.,   4.],\n",
       "        [  9.,   1.,   1.,   3.,   5.,   7.,   9.,  14., 137.,   1.,   0.,\n",
       "           0.,   2.,   2.,   2.,  73.,  49.,   0.,   0.,  16., 106.,  34.,\n",
       "           1.,  30.,   0.,   0.,   0.,  14., 137.,  68.,   1.,   0.,  26.,\n",
       "           9.,   5.,  15.,  29.,  13.,   4.,   5., 137.,  20.,   2.,   4.,\n",
       "          10.,   1.,   1.,  30.,  54.,   3.,   1.,  62., 137.,   4.,   0.,\n",
       "          10.,   0.,   0.,   0.,  28., 137.,  23.,   0.,   0.,  21.,   3.,\n",
       "           1.,   9.,  36.,  24.,   4.,   4., 137.,  60.,   4.,  16.,  14.,\n",
       "           3.,   2.,  18.,  33.,  19.,  27., 137., 120.,   2.,   0.,   2.,\n",
       "           0.,   0.,  35.,  45., 113.,  24.,   0.,   0.,  21.,   2.,   1.,\n",
       "          16.,  25.,   3.,   1.,   2., 137.,  19.,   0.,   5.,  34.,   4.,\n",
       "           1.,  23.,  20.,   3.,  18.,  58., 137.,  28.,   0.,   3.,   0.,\n",
       "           1.,  61.,  44.,  31.,   6.,   0.,   0.],\n",
       "        [ 26.,  17.,   6.,   4.,  23.,   2.,   0.,   0., 152.,  67.,   2.,\n",
       "           0.,   2.,   0.,   0.,  16., 101.,  98.,   8.,   0.,   1.,   6.,\n",
       "           2.,   6.,   8.,  52.,   2.,   0.,   5.,  79.,  30.,   1.,  47.,\n",
       "           1.,   0.,   3.,  40.,   9.,   0.,   3., 152.,  27.,   5.,   1.,\n",
       "           5.,  10.,   6.,  71.,  67.,  64.,  30.,   5.,   8.,  53.,  21.,\n",
       "          42.,  31.,  89.,  15.,   6.,   0.,   2.,   6.,  24.,  30.,   3.,\n",
       "           0.,   1.,  22.,  20.,   3.,   5., 152., 152.,  71.,   1.,   2.,\n",
       "           5.,   2.,  10.,  24., 125., 152.,   7.,   3.,  12.,   6.,   9.,\n",
       "          22., 107.,  95.,  14.,   0.,   0.,   2.,  11.,   4.,   2.,   1.,\n",
       "           6.,   4.,   3.,   1.,   1.,  24.,  42.,  20.,   0.,   0.,   1.,\n",
       "           0.,   3.,  35.,  62.,  62.,   0.,   0.,   0.,   0.,   4.,  76.,\n",
       "         116.,  15.,   0.,   0.,   0.,   0.,   3.],\n",
       "        [  0.,   1.,  15.,   2.,   0.,   1.,   8.,   4.,  14.,   2.,  12.,\n",
       "           2.,   0.,   0.,  20.,  48., 131.,   3.,   1.,   0.,   0.,   1.,\n",
       "          10., 136.,  77.,  24.,   1.,   1.,   6.,   5.,   8.,  77.,  23.,\n",
       "           0.,   0.,   1.,   7.,  30.,  34.,  29., 111.,   3.,   0.,   0.,\n",
       "           0.,   7., 134., 136., 132.,  20.,   0.,   0.,   1.,  68., 136.,\n",
       "          84.,  73.,  43.,   1.,   1.,  18.,  36.,  14.,  12.,  56.,   0.,\n",
       "           7.,  19.,  20.,  17.,   7.,  16., 136.,  25.,   0.,   0.,   0.,\n",
       "           6.,  17.,  57.,  85.,  23.,   0.,   0.,   3., 136.,  47.,  16.,\n",
       "          47.,  11.,   0.,   0.,   1.,  50.,  40.,  46.,  43.,   0.,   1.,\n",
       "           1.,   0.,  12.,  24.,  24., 136.,  11.,   0.,   0.,   1.,   1.,\n",
       "           3.,  50.,  55.,  58.,  19.,  10.,   3.,  14.,   3.,   4.,   6.,\n",
       "          24.,  55.,  36.,   2.,  11.,  11.,  14.],\n",
       "        [ 31.,  10.,   5.,   0.,   0.,   0.,   0.,  16., 136.,   2.,   0.,\n",
       "           1.,   1.,   1.,   1., 136.,  94.,  48.,  15.,   7.,   4.,   3.,\n",
       "           1.,  94.,  52.,  66.,   3.,   0.,   0.,   0.,   2.,  14.,  91.,\n",
       "          16.,   0.,   0.,   0.,   0.,   0.,  19., 136.,  21.,   1.,   2.,\n",
       "           3.,  14.,  15., 136.,  42.,  25.,  12.,  12.,  16.,  86.,  63.,\n",
       "          62.,  76.,  63.,   2.,   0.,   0.,   2.,  17.,  33.,  91.,  23.,\n",
       "           6.,   0.,   0.,   0.,   0.,  35., 136., 100.,  12.,   2.,   1.,\n",
       "           3.,   3.,  66.,  61.,  56.,  33.,  13.,  10.,  26.,  24.,  28.,\n",
       "          26.,  20.,   1.,   0.,   1.,   2.,  52.,  51.,  43.,   1.,   1.,\n",
       "           0.,   0.,   1.,  41., 136., 117.,  20.,   2.,   0.,   0.,   0.,\n",
       "           6., 113.,  45.,  50.,  18.,   1.,   0.,   0.,   3.,  23.,  41.,\n",
       "          64.,   3.,   1.,   2.,   0.,   4.,   9.],\n",
       "        [ 22.,  10.,   1.,   0.,   0.,   0.,   6.,  34.,  15.,   5.,   1.,\n",
       "           2.,   4.,   6.,  42.,  62.,   2.,   2.,   1.,   0.,   0.,   6.,\n",
       "         124.,  83.,  59.,   3.,   3.,   1.,   0.,   2.,  39., 132.,  42.,\n",
       "           8.,   2.,   0.,   0.,   0.,  30.,  54., 132.,   9.,   1.,   1.,\n",
       "           0.,   2.,  91., 132.,  17.,   4.,   3.,   5.,   5.,  24., 132.,\n",
       "         123.,  11.,   5.,  16.,  19.,  73.,  22.,  70.,  64.,  64.,  19.,\n",
       "           8.,   1.,   0.,   0.,  15.,  45., 132.,  63.,  18.,   2.,   0.,\n",
       "           1.,  10.,  61.,  61.,  53.,  52.,  24.,  10.,  13.,  21.,  18.,\n",
       "          13.,   8.,   4.,  28., 132.,  31.,   9.,   7.,  40.,  11.,   4.,\n",
       "           0.,   0.,   0.,  27., 108.,  83.,   9.,   2.,   0.,   0.,  17.,\n",
       "          41., 132.,  41.,  10.,   6.,   4.,   9.,  19.,  31.,  42.,   5.,\n",
       "           3.,   8.,  10.,  29.,  38.,   6.,   3.]], dtype=float32),\n",
       " array([[ 37.,  19.,   7., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  6.,   0.,   0., ...,  17.,  29., 128.],\n",
       "        ...,\n",
       "        [  0.,   0.,   8., ...,   1.,  13.,  27.],\n",
       "        [  9.,   9.,   0., ...,   0.,   4.,  24.],\n",
       "        [  0.,   1.,   3., ...,   1.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,   1.,  55., ...,   5.,   1.,   1.],\n",
       "        [  1.,   2.,   0., ...,   3.,   2.,   1.],\n",
       "        [ 43.,  23.,  38., ..., 131., 118.,  18.],\n",
       "        ...,\n",
       "        [  0.,   1.,   5., ...,   0.,   0.,   3.],\n",
       "        [  1.,   2.,   4., ...,   1.,   0.,   4.],\n",
       "        [  4.,   4.,   1., ...,  50.,  43.,  11.]], dtype=float32),\n",
       " array([[  0.,   1.,   8.,  16.,   4.,   1.,  16.,   1.,   0.,   5.,  41.,\n",
       "          84.,   2.,   0.,   9.,   3.,  12.,  97.,  65.,  22.,   0.,   0.,\n",
       "           1.,   2.,   7.,  31.,  15.,   1.,   0.,   0.,   0.,   0.,   0.,\n",
       "          24.,  53.,  64.,  18.,   0.,   0.,   0.,   7.,  17.,  64., 131.,\n",
       "          76.,   9.,   2.,   3., 131., 131.,  76.,  58.,   5.,   2.,   2.,\n",
       "          14.,  70.,  43.,   6.,   2.,   0.,   0.,   0.,   3.,   6.,  35.,\n",
       "          30.,  22.,  24.,  15.,  56.,  12.,   9.,   4.,   7.,  59., 109.,\n",
       "         131., 130.,  26., 131.,  19.,   5.,   8.,   7.,  23.,  87., 131.,\n",
       "          65.,   4.,   0.,   0.,   0.,   0.,   6.,  44.,   0.,   1.,   1.,\n",
       "           0.,   0.,   9., 106.,   5.,   0.,   0.,   2.,   1.,   0.,  36.,\n",
       "         131.,   6.,   9.,   0.,   2.,   1.,   0.,   8.,  93.,  78.,   6.,\n",
       "           0.,   3.,   1.,   0.,   0.,   5.,  27.],\n",
       "        [  5.,   0.,   4.,  38.,   3.,   0.,   1.,  14.,   0.,   4.,  39.,\n",
       "         130.,   3.,   0.,   0.,   1.,  13.,  20.,  24.,  82.,  15.,   5.,\n",
       "          21.,  18.,   6.,   1.,   0.,   8.,   6.,   4.,  75.,  72.,   0.,\n",
       "           0.,   3.,  65.,  95.,  20.,   0.,   1.,  11.,  33.,  94., 130.,\n",
       "         118.,  55.,   5.,   4., 130., 130.,  59.,  20.,   4.,   6.,   7.,\n",
       "          24.,  74.,  15.,   0.,   0.,   0.,   0.,   8.,  34.,   0.,   0.,\n",
       "           0.,   7.,  64.,  59.,   1.,   0.,  11.,   5.,   3.,  12.,  84.,\n",
       "         130.,  88.,  17., 130.,  18.,   2.,   2.,   3.,  52.,  97., 119.,\n",
       "          92.,   5.,   0.,   8.,   2.,   0.,   2.,  25.,   2.,   0.,   0.,\n",
       "           4.,   7.,   7.,   3.,   2.,   2.,   0.,   0.,   0.,   1.,  60.,\n",
       "          60.,   8.,   9.,   0.,   0.,   0.,   1.,  23., 112.,  51.,  10.,\n",
       "           0.,   0.,  33.,  38.,   4.,  16.,  23.],\n",
       "        [  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,  41.,  23.,   0.,\n",
       "           0.,   2.,   1.,   0.,   0., 196.,  83.,   0.,   0.,   0.,   0.,\n",
       "           0.,   1.,  61.,   8.,   0.,   0.,   0.,   0.,   0.,   4.,  13.,\n",
       "           8.,   0.,   1.,   3.,   0.,   0.,   0., 107.,  29.,   1.,   7.,\n",
       "          25.,   2.,   0.,   3., 196.,  70.,   0.,   0.,   1.,   0.,   0.,\n",
       "           9., 127.,  13.,   0.,   0.,   0.,   0.,   0.,   7.,  57.,  14.,\n",
       "           0.,   0.,   1.,   1.,   0.,   1., 104.,   6.,   0.,   1.,  12.,\n",
       "           9.,   8.,  29., 196.,  15.,   0.,   0.,   0.,   0.,   1.,  50.,\n",
       "         130.,   9.,   0.,   1.,   3.,   1.,   1.,  16.,  46.,  22.,   0.,\n",
       "           0.,   0.,   0.,   0.,   0.,  77.,  31.,   4.,   0.,   0.,   1.,\n",
       "           2.,   7., 196.,  60.,   0.,   0.,   0.,   0.,   0.,   6., 106.,\n",
       "          31.,   1.,   1.,   2.,   0.,   0.,   0.],\n",
       "        [  9.,  15.,  22.,  21.,   0.,   0.,   0.,   0.,  15.,   7.,   9.,\n",
       "          37.,  12.,  25.,  26.,  18.,   1.,   0.,   0.,  31.,  82.,  97.,\n",
       "          20.,   4.,   1.,   2.,   1.,  14.,  46.,  17.,   0.,   0.,  24.,\n",
       "          23.,  50.,  72.,  21.,   5.,   2.,   5., 139.,  55.,  24.,  13.,\n",
       "           7.,  40.,  41.,  82.,  31.,   5.,   3.,   9., 139., 139.,  43.,\n",
       "          28.,   1.,   0.,   0.,   1.,  38., 139.,  25.,   1.,  22.,   2.,\n",
       "           1.,  14.,  24.,  34.,  86.,  35., 139.,  87.,  25.,  10.,   6.,\n",
       "           7.,  33.,  72.,  32.,  43.,  43.,  58., 124.,  80.,   3.,   7.,\n",
       "           0.,   0.,   0.,   1.,  52., 139.,  26.,   1.,  10.,   0.,   0.,\n",
       "           0.,   0.,   5.,  75.,  45.,  17.,  10.,   3.,   0.,   0.,   3.,\n",
       "          57.,  65.,   7.,   7.,   6.,   4.,   7.,  29.,  38.,  55.,   0.,\n",
       "           0.,   0.,   0.,  13.,  65.,  86.,  16.]], dtype=float32),\n",
       " array([[50.,  9.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  7., 30., 32.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  2.,  2.],\n",
       "        ...,\n",
       "        [ 6., 29., 75., ...,  3., 35., 99.],\n",
       "        [ 6.,  0.,  0., ...,  0.,  3., 28.],\n",
       "        [ 0.,  0.,  0., ..., 10.,  8.,  6.]], dtype=float32),\n",
       " array([[  0.,   0.,  15., ...,   0.,   0.,   0.],\n",
       "        [ 50.,   7.,   0., ...,   1.,   2.,  32.],\n",
       "        [  8.,  55., 113., ...,   6.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 41.,  52.,  41., ...,   0.,   0.,   1.],\n",
       "        [ 86.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   2., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[138.,  91.,  17., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   6.,   1.,   0.],\n",
       "        [  6.,  94., 112., ...,   4.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 12.,  26.,  22., ...,  98.,  18.,   6.],\n",
       "        [ 11.,  68.,  32., ...,  36.,  13.,  41.],\n",
       "        [ 26.,   1.,   3., ...,   1.,   0.,  11.]], dtype=float32),\n",
       " array([[  0.,   0.,   8., ...,   0.,   3.,   6.],\n",
       "        [  0.,   9.,  64., ...,   1.,  34.,  53.],\n",
       "        [  0.,  43., 147., ...,   0.,   1.,   1.],\n",
       "        ...,\n",
       "        [ 21.,  19.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 92.,  10.,   0., ...,   0.,   6.,  26.],\n",
       "        [ 39.,   5.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[107.,   6.,   0., ...,   3.,  15., 109.],\n",
       "        [ 44.,  12.,   3., ...,   2.,   1.,  93.],\n",
       "        [  0.,   0.,   0., ...,  40.,   1.,   1.],\n",
       "        ...,\n",
       "        [ 13.,   3.,   1., ...,  19.,  40., 143.],\n",
       "        [  5.,   0.,   0., ...,   6.,   1.,   1.],\n",
       "        [ 33.,   8.,   1., ...,   0.,   0.,   2.]], dtype=float32),\n",
       " array([[ 63.,  16.,   1., ...,   7.,   0.,   0.],\n",
       "        [106.,   2.,   0., ...,   5.,   1.,   3.],\n",
       "        [ 54.,  77.,   0., ...,   7.,   1.,   0.],\n",
       "        ...,\n",
       "        [  1.,  27.,  63., ...,   7.,   2.,  12.],\n",
       "        [ 45.,  47.,  26., ...,   2.,   1.,   2.],\n",
       "        [ 78.,  89.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 46.,  20.,   0., ...,   6.,  11.,  14.],\n",
       "        [ 44.,   2.,   0., ...,   0.,   1.,  34.],\n",
       "        [  9.,  32.,  33., ...,   1.,  12.,  10.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,  17.],\n",
       "        [  0.,   1.,  16., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7., 117., 123.]], dtype=float32),\n",
       " array([[ 3.,  0.,  0., ...,  3., 14., 36.],\n",
       "        [ 0.,  0.,  0., ..., 14.,  1.,  4.],\n",
       "        [12., 15.,  1., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [88., 24.,  5., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  3.,  0.],\n",
       "        [69.,  2.,  0., ...,  2.,  7., 91.]], dtype=float32),\n",
       " array([[ 2.,  6., 41., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  3.,  3., ...,  2.,  3.,  0.],\n",
       "        [ 1.,  6., 15., ...,  3.,  3.,  6.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 10., 36.,  6.],\n",
       "        [ 0., 24., 70., ...,  0.,  0., 17.],\n",
       "        [62., 30., 19., ...,  4.,  6., 11.]], dtype=float32),\n",
       " array([[  0.,   0.,   4., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,  13.,   0.,   2.],\n",
       "        [ 16.,  29.,  19., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [ 52.,   6.,   5., ...,   0.,   3.,  12.],\n",
       "        [123.,  23.,   4., ...,   1.,   8.,  24.],\n",
       "        [  1.,  11.,  23., ...,   6.,  10.,  57.]], dtype=float32),\n",
       " array([[  2.,  21., 123., ...,  11.,   1.,   1.],\n",
       "        [  0.,  47., 161., ...,   2.,   0.,   0.],\n",
       "        [  3.,  32.,  54., ...,   1.,   1.,   0.],\n",
       "        ...,\n",
       "        [ 48.,   0.,   0., ...,   4.,   0.,   9.],\n",
       "        [ 43.,  24.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 14.,   1.,   0., ...,   5., 124.,  84.]], dtype=float32),\n",
       " array([[  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 12.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 12.,   9.,   6., ...,  57.,  72.,   5.],\n",
       "        ...,\n",
       "        [ 29.,  52.,  16., ...,  10.,  32., 109.],\n",
       "        [  2.,   2.,  14., ...,   5.,   1.,   3.],\n",
       "        [  3.,  14.,   0., ...,   9.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   4.,   8., ...,  14.,   0.,   1.],\n",
       "        [ 19.,   6.,   0., ...,   3.,  14.,  14.],\n",
       "        [ 12.,  92.,  76., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 46.,  18.,   2., ...,   2.,   1.,  11.],\n",
       "        [ 63.,  33.,   2., ...,   0.,   0.,   6.],\n",
       "        [ 12.,  10.,   8., ..., 107.,  20.,   1.]], dtype=float32),\n",
       " array([[  2.,   5.,   6., ...,  15.,  12.,  35.],\n",
       "        [ 26., 105.,  39., ..., 120.,  12.,   0.],\n",
       "        [ 11.,   9.,  22., ...,   0.,   0.,  10.],\n",
       "        ...,\n",
       "        [ 19.,  29.,  23., ...,   0.,   0.,   0.],\n",
       "        [132.,  90.,  51., ...,   5.,  38.,  49.],\n",
       "        [ 23.,  69., 137., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7.,   1.,   7.],\n",
       "        ...,\n",
       "        [  4.,   0.,   0., ...,   4.,   4.,  14.],\n",
       "        [  4.,   3.,   7., ..., 135.,   0.,   0.],\n",
       "        [104.,  40.,   0., ...,   4.,  20.,  16.]], dtype=float32),\n",
       " array([[ 89.,  17.,   0., ...,   3.,   0.,   0.],\n",
       "        [  0.,   0.,   3., ...,   1.,   2.,   6.],\n",
       "        [ 73.,  56.,   2., ...,   0.,   2.,  12.],\n",
       "        ...,\n",
       "        [  1.,   0.,   1., ...,  34., 114.,  28.],\n",
       "        [ 97.,  53.,   2., ...,   0.,   1.,  31.],\n",
       "        [  1.,  12.,  53., ...,  20.,   2.,   0.]], dtype=float32),\n",
       " array([[  2.,   1.,   1., ...,   0.,   0.,  11.],\n",
       "        [ 96.,  45.,   8., ...,  40.,  74.,  31.],\n",
       "        [  0.,   0.,   4., ..., 107.,  53.,  65.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   7.],\n",
       "        [  8.,  10.,   3., ...,  28.,  34.,   9.],\n",
       "        [ 16.,  30.,  51., ...,   1.,  24.,  32.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   8.,   7.,   9.],\n",
       "        [115.,   8.,   0., ...,  12.,  49.,  23.],\n",
       "        [ 14.,   7.,  44., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [  4.,   3.,   4., ...,  34.,  33.,  20.],\n",
       "        [  9.,  37.,  36., ...,   2.,   4.,   5.]], dtype=float32),\n",
       " array([[ 45.,  41.,  11., ..., 103.,  41.,   6.],\n",
       "        [ 36., 125.,  45., ...,  60.,  75.,   0.],\n",
       "        [  4.,   0.,   0., ...,  23.,   5.,   1.],\n",
       "        ...,\n",
       "        [  3.,   1.,   0., ...,  21.,  45.,  52.],\n",
       "        [  5.,   5.,   3., ...,  15., 126.,  49.],\n",
       "        [  8.,  27., 131., ...,   7.,   5.,   1.]], dtype=float32),\n",
       " array([[ 1.,  1.,  4., ...,  0.,  1., 85.],\n",
       "        [ 0.,  0.,  0., ..., 11., 23., 35.],\n",
       "        [ 0.,  0., 15., ...,  0.,  0., 23.],\n",
       "        ...,\n",
       "        [30.,  2.,  0., ...,  0.,  1., 14.],\n",
       "        [72., 62.,  0., ..., 11., 11., 11.],\n",
       "        [11.,  7., 18., ..., 27.,  0.,  1.]], dtype=float32),\n",
       " array([[ 17.,  27.,  12., ...,  17.,   1.,   1.],\n",
       "        [  3.,   0.,  11., ...,   0.,   0.,   0.],\n",
       "        [ 34.,  31.,  23., ...,  13.,  21.,  26.],\n",
       "        ...,\n",
       "        [ 18.,   8.,   3., ..., 116.,  63.,  14.],\n",
       "        [ 87.,  92.,   4., ...,   0.,   0.,   0.],\n",
       "        [  5.,  16., 130., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 1.,  0.,  1., ...,  2.,  1.,  3.],\n",
       "        [ 4., 25., 85., ...,  0.,  1.,  9.],\n",
       "        ...,\n",
       "        [56.,  1.,  0., ...,  2.,  1.,  4.],\n",
       "        [ 7.,  0.,  0., ...,  8., 12.,  8.],\n",
       "        [ 2., 50.,  5., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  3., 123., 123., ...,   1.,   9.,  26.],\n",
       "        [  7.,   1.,   1., ...,  10.,  57.,   9.],\n",
       "        [  6., 142.,  85., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  20.,   8.,  32.],\n",
       "        [  1.,   2.,  14., ...,   0.,   0.,   0.],\n",
       "        [  1.,  23., 107., ...,   7.,   7.,   3.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   4.,   4.,   4.],\n",
       "        [  0.,   0.,   0., ...,   3.,   1.,   2.],\n",
       "        [  1.,   0.,   0., ..., 119.,   4.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,  11., ...,  10.,   6.,   9.],\n",
       "        [ 96.,  19.,  14., ...,   0.,   0.,   0.],\n",
       "        [ 60.,  21.,  29., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[15.,  2.,  1., ..., 16., 54., 26.],\n",
       "        [ 0.,  1., 17., ..., 39., 19.,  6.],\n",
       "        [ 3., 19., 73., ...,  0.,  1.,  5.],\n",
       "        ...,\n",
       "        [ 7.,  6.,  2., ...,  3.,  0., 26.],\n",
       "        [ 2., 25.,  3., ...,  5.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ..., 19.,  2.,  2.]], dtype=float32),\n",
       " array([[  3.,  23., 129., ...,  61.,   7.,  15.],\n",
       "        [  0.,   0.,   0., ...,   1.,  12.,  52.],\n",
       "        [ 13.,   6.,   0., ...,   0.,  18.,  74.],\n",
       "        ...,\n",
       "        [ 20.,   8.,   1., ...,  46.,  41.,  10.],\n",
       "        [  4.,  13.,   2., ...,   5.,  71.,  87.],\n",
       "        [  2.,   2.,  18., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  57.,  21.,   0.],\n",
       "        [ 88.,   6.,   3., ...,   4.,  18.,   2.],\n",
       "        [  3.,  10.,   2., ...,   6.,  44.,  26.],\n",
       "        ...,\n",
       "        [ 14.,   1.,   0., ...,   0.,   0.,  24.],\n",
       "        [ 15.,  10.,   3., ...,   1.,   2.,  44.],\n",
       "        [ 67., 125.,  13., ...,  29.,  10.,   5.]], dtype=float32),\n",
       " array([[ 21.,  56., 123., ...,   0.,   0.,   0.],\n",
       "        [  1.,   4.,   3., ...,  59., 127.,  57.],\n",
       "        [  0.,   0.,  36., ..., 121.,  41.,  13.],\n",
       "        ...,\n",
       "        [ 19.,  45.,  42., ...,   0.,   1.,   1.],\n",
       "        [  5., 102.,  61., ...,   1.,  11.,  56.],\n",
       "        [  2.,   0.,   0., ...,   4.,   6.,  18.]], dtype=float32),\n",
       " array([[  0.,   0.,   0.,   1., 114.,  12.,   0.,   0.,  22.,   0.,   0.,\n",
       "           9., 126.,   3.,   0.,  13., 113.,   0.,   0.,   2.,  22.,   2.,\n",
       "           1.,  76.,   8.,   0.,   0.,  23., 126.,   3.,   1.,   8.,   0.,\n",
       "           0.,   0.,   4., 126.,   1.,   0.,   0.,  55.,   7.,   0.,   7.,\n",
       "         126.,   2.,   0.,   5., 126.,  21.,   0.,   2.,  33.,   8.,   1.,\n",
       "          20.,   8.,   1.,   0.,   8., 126.,  27.,   0.,   2.,   0.,   0.,\n",
       "           0.,  12., 126.,   2.,   0.,   0.,  52.,   2.,   0.,  11., 126.,\n",
       "           5.,   2.,  15., 126.,  10.,   0.,  14.,  25.,   1.,   1.,  29.,\n",
       "           7.,   2.,   0.,  53., 126.,   8.,   0.,   0.,   0.,   0.,   0.,\n",
       "           5., 115.,   8.,   0.,   0.,  49.,   1.,   0.,   2.,  90.,  15.,\n",
       "           1.,  13., 113.,   5.,   0.,  13.,  33.,   0.,   0.,  18.,   1.,\n",
       "           0.,   0.,  39., 126.,   0.,   0.,   0.],\n",
       "        [ 17.,  13.,  21.,   8.,   3.,   0.,   0.,   1., 145.,  17.,   5.,\n",
       "           9.,  25.,   4.,   1.,  12.,  18.,   1.,   0.,  48., 145.,  19.,\n",
       "           1.,   3.,   0.,   0.,   0.,   5.,  81.,  10.,   0.,   0.,  41.,\n",
       "           4.,   2.,   8.,  15.,   1.,   0.,   4., 145.,  10.,   1.,   5.,\n",
       "          34.,  23.,   4.,  38.,  21.,   2.,   0.,  23., 145.,  94.,   3.,\n",
       "           9.,   0.,   0.,   0.,   9., 107.,  13.,   0.,   0.,  36.,  10.,\n",
       "           0.,   2.,  17.,   3.,   0.,   1., 145.,  90.,   9.,  21.,  24.,\n",
       "           3.,   1.,   5.,  18.,  18.,   8.,  77., 145.,  23.,   1.,   1.,\n",
       "           0.,   0.,   0.,  11., 110.,   9.,   0.,   0.,  12.,   5.,   0.,\n",
       "           0.,  16.,   9.,   0.,   2., 145.,  31.,   2.,   2.,   7.,   9.,\n",
       "           4.,  25.,  26.,   5.,   1.,   7., 145., 106.,   6.,  13.,   0.,\n",
       "           0.,   0.,   1.,  87.,  47.,   0.,   0.],\n",
       "        [ 88.,  61.,   0.,   0.,   0.,   0.,   0.,   0., 133., 113.,   7.,\n",
       "          13.,  35.,   6.,   2.,   5.,   5.,   6.,   3.,  18., 144.,  36.,\n",
       "           2.,   2.,  16.,  11.,   0.,   1.,   9.,   5.,   0.,   0., 113.,\n",
       "          14.,   0.,   0.,   0.,   0.,   0.,   7., 145.,  29.,   1.,   1.,\n",
       "          18.,  21.,   8.,  64.,  23.,   3.,   0.,   4., 145.,  99.,   8.,\n",
       "          18.,  17.,   3.,   0.,   1.,  33.,  10.,   0.,   2., 105.,  15.,\n",
       "           0.,   0.,   0.,   0.,   0.,   6., 145., 107.,   3.,   8.,  19.,\n",
       "           2.,   0.,  17.,  35.,  26.,   4.,  28., 145.,  14.,   1.,   4.,\n",
       "          15.,   1.,   0.,   2.,  44.,   5.,   2.,   7.,  72.,  13.,   0.,\n",
       "           0.,   0.,   0.,   0.,   2., 145.,  25.,   1.,   2.,  13.,   1.,\n",
       "           0.,  38.,  34.,   6.,   1.,   7., 145.,  20.,   4.,   9.,   2.,\n",
       "           0.,   0.,   1.,  20.,  15.,  22.,   7.],\n",
       "        [  4.,  42.,  34.,  10.,   4.,   1.,   0.,   0.,  65.,  50.,  22.,\n",
       "           2.,  19.,  23.,   3.,  10.,   6.,   0.,   4.,  14.,  69.,  83.,\n",
       "          10.,   4.,   0.,   0.,   3.,  42.,  73.,  87.,   2.,   0.,  23.,\n",
       "           8.,   9.,  10.,  29.,  44.,   5.,   9., 126.,  24.,   4.,   1.,\n",
       "          16.,  26.,   8.,  62.,  28.,   4.,   1.,  14., 126., 126.,   6.,\n",
       "          16.,   0.,   0.,   2.,  49., 108.,  76.,   5.,   0.,  11.,  15.,\n",
       "          23.,   6.,  17.,  40.,  12.,  13., 126.,  96.,   5.,   1.,   6.,\n",
       "           7.,   8.,  26.,  56.,  52.,   1.,   2., 103., 126.,   5.,   3.,\n",
       "           0.,   0.,   0.,   0.,  41., 126.,  33.,   0.,   1.,  26.,  27.,\n",
       "           4.,  15.,  19.,   0.,   1.,  63., 111.,  28.,   1.,   1.,   1.,\n",
       "           0.,   1., 126.,  84.,   0.,   0.,  29.,  51.,   2.,   2.,   2.,\n",
       "           1.,   0.,   0.,  80., 116.,   2.,   0.],\n",
       "        [ 90., 100.,   0.,   0.,   0.,   0.,   0.,   5., 133.,  56.,   1.,\n",
       "           9.,  42.,   1.,   0.,   1.,   9.,   3.,   0.,  19., 133.,  34.,\n",
       "           1.,   0.,  21.,   2.,   0.,   0.,  23.,  55.,   4.,   3., 126.,\n",
       "         105.,   0.,   0.,   0.,   0.,   2.,  25., 133.,  74.,   1.,   9.,\n",
       "          40.,   7.,   2.,  12.,  19.,   5.,   6.,  47., 133.,  36.,   2.,\n",
       "           2.,  10.,   7.,   8.,  11.,  20.,  51.,  12.,   4.,  96.,   9.,\n",
       "           0.,   0.,   0.,   0.,  29., 106., 133.,  24.,  10.,  57.,  32.,\n",
       "           1.,   3.,  34.,  15.,  11.,  13., 133., 133.,   5.,   2.,   2.,\n",
       "          60.,  34.,  10.,  14.,   7.,   8.,   6.,   6.,  88.,  82.,   1.,\n",
       "           0.,   0.,   0.,   5.,   9.,  79.,  25.,   4.,  24.,  31.,  13.,\n",
       "           3.,  10.,   2.,   1.,   1.,  30.,  63.,  55.,  16.,   4.,  32.,\n",
       "          13.,   0.,   1.,   2.,   6.,  10.,  15.]], dtype=float32),\n",
       " array([[52., 12.,  2., ...,  1.,  0.,  2.],\n",
       "        [ 6.,  2.,  2., ...,  0.,  0.,  0.],\n",
       "        [40.,  0.,  0., ..., 33.,  1.,  3.],\n",
       "        ...,\n",
       "        [17.,  4.,  4., ...,  0.,  0.,  0.],\n",
       "        [21.,  3.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 31.,  3.,  5.]], dtype=float32),\n",
       " array([[  0.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   6.,   2.,  25.],\n",
       "        [  7.,  22.,   4., ...,   4.,   2.,  30.],\n",
       "        ...,\n",
       "        [ 61.,  49.,  80., ...,   1.,   1.,   1.],\n",
       "        [  1.,   4.,  16., ...,   0.,   0.,   9.],\n",
       "        [ 17.,  97., 118., ...,   0.,   1.,   1.]], dtype=float32),\n",
       " array([[ 21.,   3.,   0., ...,   0.,   0.,  53.],\n",
       "        [ 18.,  58.,  32., ...,   0.,   0.,   0.],\n",
       "        [ 35.,  13.,   0., ...,   0.,   0.,   8.],\n",
       "        ...,\n",
       "        [ 53.,   5.,   0., ...,  18.,   6.,  30.],\n",
       "        [  0.,   0.,   0., ...,  19.,   5.,  23.],\n",
       "        [  1.,   1.,   0., ..., 114.,   4.,   2.]], dtype=float32),\n",
       " array([[ 29.,  43., 137., ...,   1.,  10.,   2.],\n",
       "        [  2.,   0.,   0., ...,   5.,   4.,   1.],\n",
       "        [  5.,   4.,   5., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  5.,   1.,  14., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   5.,  31.,  14.],\n",
       "        [  1.,  11.,  79., ...,   1.,   3.,   3.]], dtype=float32),\n",
       " array([[  3.,   1.,   1., ...,   0.,   2.,  11.],\n",
       "        [ 21.,  10.,  14., ...,  40.,  33.,  88.],\n",
       "        [ 22.,   2.,   9., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [115.,  28.,   6., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,  43.,  16.,   2.],\n",
       "        [ 17.,   8.,   6., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 8., 19., 23., ...,  1.,  4., 13.],\n",
       "        [67., 16., 22., ...,  1.,  4.,  1.],\n",
       "        [16., 23., 10., ...,  0.,  0.,  8.],\n",
       "        ...,\n",
       "        [ 2.,  0.,  0., ..., 28.,  1.,  0.],\n",
       "        [19.,  3.,  1., ..., 13.,  0.,  1.],\n",
       "        [ 7., 10.,  5., ...,  1.,  0.,  2.]], dtype=float32),\n",
       " array([[ 40.,   7.,   0., ..., 124.,  15.,   0.],\n",
       "        [ 77.,  49.,   0., ...,  53.,  37.,  11.],\n",
       "        [  5.,   9.,  21., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 44.,  95.,  12., ...,   7.,   2.,   1.],\n",
       "        [  0.,   0.,   3., ...,   6.,   4.,   5.],\n",
       "        [  3.,   6.,   2., ...,   0.,   2.,   8.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 54.,  39.,   4., ...,   1.,   0.,   0.],\n",
       "        [  6.,   1.,   0., ...,   0.,   0.,  50.],\n",
       "        ...,\n",
       "        [  4., 130., 130., ...,   5.,  10.,  45.],\n",
       "        [ 25.,  10.,   4., ...,  47., 128.,  64.],\n",
       "        [  0.,   0.,   0., ...,   4.,  13.,   2.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  11.,  48., 118.],\n",
       "        [  0.,   0.,   0., ...,  27., 121.,  47.],\n",
       "        [ 39.,  58.,  18., ...,   3.,  71., 100.],\n",
       "        ...,\n",
       "        [ 76.,  97.,  34., ...,   0.,   4.,   4.],\n",
       "        [ 23.,  15.,   1., ...,   0.,   0.,  22.],\n",
       "        [  1.,   0.,   0., ...,  20.,   1.,   8.]], dtype=float32),\n",
       " array([[ 59.,  84.,   0., ..., 106.,   9.,   0.],\n",
       "        [  0.,   0.,   0., ...,  65.,   0.,   0.],\n",
       "        [ 68.,  70.,   1., ...,  82.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 34.,  15.,   8., ...,  38.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 35., 158.,  92., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   1., ...,   0.,   1.,   4.],\n",
       "        [  0.,   0.,   1., ...,   1.,   1.,  15.],\n",
       "        ...,\n",
       "        [ 18.,  55.,  13., ...,  14.,   0.,   0.],\n",
       "        [128.,   2.,   0., ...,   2., 111.,  66.],\n",
       "        [  5.,   3.,   1., ...,   9.,   4.,   1.]], dtype=float32),\n",
       " array([[133.,  28.,   2., ...,   2.,   0.,   0.],\n",
       "        [ 17.,   1.,   1., ...,  25.,   2.,  26.],\n",
       "        [  2.,  22.,  35., ...,   5.,   0.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  34.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   3.,   0.,   1.],\n",
       "        [ 10.,  16.,  43., ...,  19.,   3.,   2.]], dtype=float32),\n",
       " array([[ 0., 15., 76., ...,  0.,  1., 13.],\n",
       "        [ 1.,  5.,  6., ...,  2.,  1., 24.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0., 11.],\n",
       "        ...,\n",
       "        [ 8.,  1.,  0., ...,  0.,  0.,  3.],\n",
       "        [ 1.,  2., 13., ..., 12., 27., 35.],\n",
       "        [ 1.,  0.,  3., ..., 16., 42., 11.]], dtype=float32),\n",
       " array([[ 40.,   8.,   2., ...,  22.,   1.,   6.],\n",
       "        [  3.,   4.,   0., ...,   4.,   2.,   4.],\n",
       "        [124.,  17.,   4., ...,   4.,  18.,  26.],\n",
       "        ...,\n",
       "        [ 43.,  88.,  30., ...,   6.,   1.,   0.],\n",
       "        [  0.,   5.,  48., ...,  11.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,  20.]], dtype=float32),\n",
       " array([[  7.,   0.,   0., ...,  27.,  19.,  11.],\n",
       "        [ 61.,  48.,   8., ...,   2.,  12., 105.],\n",
       "        [  9.,  12.,  14., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  7.,  30.,  20., ...,   6.,  19.,  36.],\n",
       "        [ 16.,   0.,   0., ...,   0.,   0.,   4.],\n",
       "        [  0.,   0.,   0., ...,   6.,   5.,   4.]], dtype=float32),\n",
       " array([[134.,  38.,   0., ...,   6.,   1.,   1.],\n",
       "        [125.,  14.,   0., ...,   0.,   1.,  16.],\n",
       "        [ 58.,  40.,   2., ...,  15.,  10.,   9.],\n",
       "        ...,\n",
       "        [  3.,   0.,   1., ...,   0.,   0.,   6.],\n",
       "        [ 13.,  44.,  48., ...,   6.,  14.,   3.],\n",
       "        [  0.,   0.,   0., ...,   8.,  22.,  24.]], dtype=float32),\n",
       " array([[ 2.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [34.,  8.,  0., ...,  0.,  0.,  0.],\n",
       "        [26.,  2.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [29.,  6.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 7.,  1.,  0., ...,  0.,  0.,  3.],\n",
       "        [ 3.,  1.,  1., ...,  1.,  1.,  5.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ..., 12.,  5., 53.],\n",
       "        [ 8., 60., 63., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3., 28., 50.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  2.,  5., 10.],\n",
       "        [ 8.,  2.,  0., ..., 50., 13.,  0.],\n",
       "        [13.,  7., 13., ..., 43., 16.,  2.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  23.,  34.,  60.],\n",
       "        [ 23.,   9.,   9., ...,   1.,   0.,   4.],\n",
       "        [ 53.,  44.,   7., ...,   0.,   1.,  67.],\n",
       "        ...,\n",
       "        [ 12.,   1.,   1., ...,  27.,  60.,  52.],\n",
       "        [ 73.,  27.,   8., ...,  18., 106.,  44.],\n",
       "        [  3.,   0.,   0., ...,  16.,   9.,   1.]], dtype=float32),\n",
       " array([[ 10.,   0.,   1., ...,   0.,  43., 137.],\n",
       "        [  7.,   1.,   2., ...,   0.,   0.,   0.],\n",
       "        [  2.,   1.,   0., ...,  55.,  14.,   0.],\n",
       "        ...,\n",
       "        [ 76.,   2.,   0., ...,  41.,   1.,   0.],\n",
       "        [116.,  10.,   0., ...,   0.,   0.,   0.],\n",
       "        [  6.,   0.,   0., ...,   3.,   1.,   2.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        [ 63., 130.,  51., ...,   4.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1.,   3.,   6.],\n",
       "        [  1.,  28.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 81.,  18.,   5., ...,   8.,   9.,  16.]], dtype=float32),\n",
       " array([[  8.,   4.,   1., ...,   1.,   1.,   3.],\n",
       "        [ 48., 120., 135., ...,   0.,   0.,   0.],\n",
       "        [ 24.,  11.,   5., ...,  14.,   9.,   1.],\n",
       "        ...,\n",
       "        [  2.,   0.,   1., ...,  46.,  81.,  66.],\n",
       "        [ 13.,  18.,  51., ...,   0.,   7.,  68.],\n",
       "        [ 61.,  45.,   0., ...,   9.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 39.,  9., 18.],\n",
       "        [11.,  3.,  3., ..., 32., 16.,  3.],\n",
       "        [42., 69., 22., ...,  1.,  3.,  3.],\n",
       "        ...,\n",
       "        [ 8.,  8.,  3., ..., 12.,  3.,  6.],\n",
       "        [ 5., 12., 23., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  3., 12.]], dtype=float32),\n",
       " array([[17., 58., 22., ...,  0., 18.,  6.],\n",
       "        [23., 14., 44., ..., 12.,  4., 16.],\n",
       "        [30., 25., 42., ...,  5.,  1.,  0.],\n",
       "        ...,\n",
       "        [70., 43.,  0., ...,  2., 14., 28.],\n",
       "        [ 0.,  0., 19., ...,  1.,  4., 28.],\n",
       "        [21., 12.,  0., ...,  7.,  7.,  3.]], dtype=float32),\n",
       " array([[ 10., 109.,  68., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,  11.,  63.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 40.,  13.,   5., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   3.],\n",
       "        [ 64.,  55.,   5., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[102.,  38.,   0., ...,  10.,   2.,   2.],\n",
       "        [  0.,   0.,   0., ...,   2.,   9.,  43.],\n",
       "        [  3.,  11.,   4., ...,  70., 102.,   7.],\n",
       "        ...,\n",
       "        [  3.,  43.,  18., ...,   5.,  11.,  51.],\n",
       "        [ 11.,   3.,   7., ...,   7.,   0.,   0.],\n",
       "        [  3.,   7.,   3., ...,   2.,  24., 125.]], dtype=float32),\n",
       " array([[  7.,   2.,  15., ...,  41.,  29.,  21.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  67.],\n",
       "        [  7.,  14.,  11., ...,  21.,  28.,  35.],\n",
       "        ...,\n",
       "        [ 53.,  72.,  37., ...,   0.,   0.,   0.],\n",
       "        [ 41., 125.,  30., ...,   0.,   0.,   0.],\n",
       "        [124., 124.,  20., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   1.,   6., ...,  19.,   1.,   1.],\n",
       "        [ 39.,  75.,  11., ...,   8.,   7.,   2.],\n",
       "        [101.,  20.,   4., ...,  33.,  20.,  45.],\n",
       "        ...,\n",
       "        [ 50.,   6.,  25., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,   5.,   7.,  40.],\n",
       "        [  5.,   9.,   3., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  1., ...,  0.,  1., 56.],\n",
       "        [17., 27.,  4., ...,  1.,  0.,  1.],\n",
       "        [62., 52., 23., ...,  3.,  4., 16.],\n",
       "        ...,\n",
       "        [ 4., 16.,  2., ..., 31., 47.,  6.],\n",
       "        [ 0.,  3.,  1., ...,  1.,  4., 36.],\n",
       "        [ 1.,  1.,  4., ...,  4.,  1.,  3.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   2.,   5.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   4.,  12.],\n",
       "        ...,\n",
       "        [ 30.,  80.,  47., ...,   3.,   1.,  13.],\n",
       "        [ 18.,   2.,   2., ...,   0.,   0.,  26.],\n",
       "        [  0.,   3., 135., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  4.,   2.,   2., ...,   0.,   0.,  17.],\n",
       "        [ 35., 104.,  54., ...,  94.,   6.,   3.],\n",
       "        [ 12.,   5.,   7., ...,   6.,   3.,  25.],\n",
       "        ...,\n",
       "        [  0.,   1.,   6., ...,   0.,   0.,   0.],\n",
       "        [ 44.,   1.,   1., ...,   4.,   2.,  18.],\n",
       "        [  5.,   0.,   1., ...,   0.,   0.,   8.]], dtype=float32),\n",
       " array([[  0.,   0., 137., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  50.,   2.,   4.],\n",
       "        [  0.,   0.,   0., ...,  19.,  17.,   8.],\n",
       "        ...,\n",
       "        [ 21.,  27.,  13., ...,  29.,  22.,  19.],\n",
       "        [ 41.,  48.,  25., ...,   1.,   0.,   1.],\n",
       "        [ 39.,  64.,  97., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[105.,  56.,  59., ...,   0.,   0.,   5.],\n",
       "        [  6.,   0.,   0., ...,   0.,   0.,  11.],\n",
       "        [  0.,   0.,   0., ...,  32.,   8.,   2.],\n",
       "        ...,\n",
       "        [ 60.,   8.,   3., ...,  17.,   3.,   1.],\n",
       "        [ 49.,  33.,  12., ...,   3.,   3.,  17.],\n",
       "        [  8.,  18.,   5., ...,   3.,   1.,   4.]], dtype=float32),\n",
       " array([[87., 30., 30., ...,  0.,  1.,  8.],\n",
       "        [ 0.,  0.,  0., ..., 26., 71.,  6.],\n",
       "        [19.,  7.,  1., ..., 37.,  7., 14.],\n",
       "        ...,\n",
       "        [13., 33.,  9., ..., 18.,  2.,  6.],\n",
       "        [ 5.,  4.,  0., ...,  8.,  1.,  0.],\n",
       "        [40.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[13., 14.,  9., ...,  0.,  2., 54.],\n",
       "        [42., 51.,  8., ...,  9.,  5.,  6.],\n",
       "        [ 0.,  1.,  0., ..., 22.,  6., 17.],\n",
       "        ...,\n",
       "        [16.,  7.,  4., ...,  1., 31., 84.],\n",
       "        [ 0.,  0., 47., ...,  0.,  0.,  1.],\n",
       "        [31., 42., 16., ...,  1.,  0.,  1.]], dtype=float32),\n",
       " array([[ 55.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [  5.,  23., 120., ...,   0.,   0.,   0.],\n",
       "        [ 17.,   5.,   0., ...,  15.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   1.,   1., ...,   0.,   0.,   2.],\n",
       "        [ 40.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 16.,  17.,  22., ...,   0.,   0.,   2.]], dtype=float32),\n",
       " array([[14., 48., 94., ...,  0.,  0.,  2.],\n",
       "        [95., 36.,  6., ...,  4.,  8., 34.],\n",
       "        [17.,  1.,  0., ...,  2.,  9., 57.],\n",
       "        ...,\n",
       "        [ 6.,  2., 19., ..., 25., 15.,  7.],\n",
       "        [43., 22.,  4., ...,  0.,  0.,  0.],\n",
       "        [65., 53., 30., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  1.,   0.,   1., ...,   8.,   4.,   4.],\n",
       "        [  6.,  28.,  25., ...,   0.,   0.,   0.],\n",
       "        [ 55.,  51.,  63., ...,  20.,   9.,   8.],\n",
       "        ...,\n",
       "        [  3.,  52.,  57., ..., 113.,  13.,   1.],\n",
       "        [ 56.,  22.,   9., ...,  40.,  36.,  20.],\n",
       "        [ 17.,  13.,  60., ...,  31.,  25.,   6.]], dtype=float32),\n",
       " array([[ 37.,  12.,   6., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   1.,   9.],\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 42.,   7.,   3., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   1., ...,   0.,   0.,  60.],\n",
       "        [111.,  11.,   1., ...,   0.,   0.,  23.]], dtype=float32),\n",
       " array([[53., 33., 13., ..., 10., 12., 24.],\n",
       "        [63., 11.,  3., ...,  0.,  0.,  0.],\n",
       "        [12.,  5.,  4., ...,  4.,  0.,  0.],\n",
       "        ...,\n",
       "        [29., 75.,  2., ...,  0.,  0.,  0.],\n",
       "        [16., 14.,  0., ...,  5.,  2.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  1.,  4.]], dtype=float32),\n",
       " array([[  2.,   0.,   0., ...,   1.,   6.,  69.],\n",
       "        [126.,   1.,  13., ...,   3.,   5.,   3.],\n",
       "        [ 34.,  36.,  14., ...,   0.,   3.,  13.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   7.,   7.,   4.],\n",
       "        [  3.,   0.,   0., ...,   6.,   2.,  13.],\n",
       "        [ 72.,   6.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   8.,   2., ...,  29.,  10.,  10.],\n",
       "        [  0.,   0.,   0., ...,  11.,  15.,  11.],\n",
       "        [  1.,   0.,   1., ...,   0.,   0.,  16.],\n",
       "        ...,\n",
       "        [ 34.,  11.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 132.,  44.,  38.],\n",
       "        [ 29., 131., 115., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 1.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 5.,  9., 23., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 15., 33., 11.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  3., 71., 72.],\n",
       "        [28.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  4.,  5.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2.,   4.,   6.],\n",
       "        [ 33.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 68.,  14.,   4., ...,   0.,   9.,   9.],\n",
       "        [ 57.,  14.,   0., ...,  13.,   6.,  15.],\n",
       "        [114.,  18.,   1., ...,   0.,   5.,   3.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,  28.,  19.],\n",
       "        [  0.,   1.,  10., ...,   0.,  19.,   5.],\n",
       "        [126.,   1.,   0., ...,   0.,   3.,   3.],\n",
       "        ...,\n",
       "        [ 22.,   7.,   0., ...,   2.,   0.,   4.],\n",
       "        [  0.,   2.,   6., ..., 102.,   1.,   1.],\n",
       "        [ 60.,  96.,   0., ...,   1.,   4.,   2.]], dtype=float32),\n",
       " array([[ 66., 133.,  17., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 132.,  18.,   0.],\n",
       "        [  2.,   0.,   0., ...,  31.,  67.,  33.],\n",
       "        ...,\n",
       "        [ 54.,  78.,  10., ...,   0.,   0.,   2.],\n",
       "        [  1.,   0.,   0., ...,   5., 121., 100.],\n",
       "        [ 16.,   9.,   4., ...,  34.,  19.,   2.]], dtype=float32),\n",
       " array([[  1.,  24., 167., ...,   0.,   0.,   0.],\n",
       "        [ 15., 102.,  24., ...,  11.,   1.,   1.],\n",
       "        [  0.,   1.,   4., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 54.,   5.,   3., ...,   0.,   0.,  10.],\n",
       "        [  9.,   2.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,  22., 173., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 19.,   9.,   9., ...,   0.,   0.,   0.],\n",
       "        [  0.,   5.,  88., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   2., ...,   3.,   2.,   1.],\n",
       "        ...,\n",
       "        [  2.,   0.,   0., ...,   0.,  34., 133.],\n",
       "        [ 11.,  41.,  56., ...,   0.,   0.,   1.],\n",
       "        [ 12.,  58., 135., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   3.,  29., ...,   0.,   0.,   7.],\n",
       "        [  5.,   1.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 28.,  27.,  17., ...,  17.,   1.,   0.],\n",
       "        ...,\n",
       "        [  0.,  10.,  73., ...,   3.,   0.,   0.],\n",
       "        [ 22.,  12.,  23., ...,   1.,   0.,   0.],\n",
       "        [  9.,   0.,   0., ...,  10.,  35., 106.]], dtype=float32),\n",
       " array([[ 15.,  17.,  17., ...,  60.,  24.,  11.],\n",
       "        [136.,  13.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 60.,  36.,   1., ..., 135.,  68.,   6.],\n",
       "        ...,\n",
       "        [145.,   0.,   0., ...,   0.,   1.,  10.],\n",
       "        [ 76.,  39.,   5., ...,   5.,  15.,   9.],\n",
       "        [ 17.,  75.,  64., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[71., 89., 12., ...,  0.,  0.,  0.],\n",
       "        [ 0., 48., 91., ...,  0.,  0.,  0.],\n",
       "        [ 0., 14., 53., ...,  1.,  5., 32.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  8.,  3., 13.],\n",
       "        [60., 10.,  5., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  6.,  5., ...,  2., 15., 12.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2.,   2.,   0.],\n",
       "        [ 91.,  59., 122., ...,   0.,   0.,   0.],\n",
       "        [ 73.,  26.,   0., ...,  25.,  23.,   6.],\n",
       "        ...,\n",
       "        [  0.,   9.,  68., ...,   0.,   0.,   2.],\n",
       "        [  0.,  15.,  14., ...,   4.,  29.,  56.],\n",
       "        [139., 140.,   4., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   3., ...,   0.,   0.,   0.],\n",
       "        [ 17.,   9.,   1., ..., 107.,  44.,   1.],\n",
       "        [ 35.,  50.,  20., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 13., 140.,  67., ...,   0.,   0.,   0.],\n",
       "        [ 73.,   5.,   0., ...,   0.,   0.,   0.],\n",
       "        [126.,  16.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 5., 27., 45., ...,  0.,  9., 33.],\n",
       "        [ 1.,  2., 28., ...,  0.,  0.,  0.],\n",
       "        [31., 38., 32., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 2., 25., 12., ...,  3.,  4.,  1.],\n",
       "        [ 6., 13.,  3., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  5., ..., 18.,  4.,  5.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2., 140., 146.],\n",
       "        [  0., 135., 135., ...,   0.,   1.,   7.],\n",
       "        [  3.,  54.,  87., ...,  47.,   7.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   7., ...,   9., 103.,  50.],\n",
       "        [  0.,   7.,   9., ...,   0.,   7.,  15.],\n",
       "        [ 75.,  47.,  61., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  4.,  39.,  73., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  38.,  46.,   4.],\n",
       "        [  6.,   2.,   0., ...,   0.,  22.,  33.],\n",
       "        ...,\n",
       "        [  9.,  53.,  11., ...,   8.,   0.,   0.],\n",
       "        [ 50., 100.,   6., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   9.]], dtype=float32),\n",
       " array([[11.,  5.,  0., ...,  5.,  2., 14.],\n",
       "        [ 2., 16., 47., ...,  2.,  0.,  0.],\n",
       "        [ 1.,  6., 30., ..., 14.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 1.,  1.,  0., ..., 50.,  0.,  2.],\n",
       "        [33.,  0.,  0., ...,  2., 32., 38.],\n",
       "        [ 0., 13., 16., ...,  9., 40.,  2.]], dtype=float32),\n",
       " array([[  3.,   4.,   0., ...,  72.,  16.,  53.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 30.,   6.,   0., ...,   0.,   0.,   5.],\n",
       "        ...,\n",
       "        [132.,   7.,   1., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,  11.],\n",
       "        [  2.,   0.,   0., ...,   2.,  72.,  10.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 14.,  3.,  7.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  1.,  1.],\n",
       "        ...,\n",
       "        [42.,  2.,  0., ...,  0.,  0., 20.],\n",
       "        [ 0.,  2.,  7., ..., 14.,  4.,  1.],\n",
       "        [ 0.,  1.,  1., ..., 13.,  5.,  1.]], dtype=float32),\n",
       " array([[45., 10.,  0., ..., 14.,  4.,  7.],\n",
       "        [ 6.,  1.,  0., ...,  1.,  5., 13.],\n",
       "        [17.,  0.,  0., ..., 11.,  8., 16.],\n",
       "        ...,\n",
       "        [ 1.,  1.,  7., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 92., 15.,  0.],\n",
       "        [91.,  6.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 39.,  74.,   6., ...,  13.,   4.,   8.],\n",
       "        [ 43.,  83.,  19., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   1.,   1.],\n",
       "        ...,\n",
       "        [ 55.,   6.,   1., ...,   0.,   1.,  15.],\n",
       "        [  2.,   2.,  12., ...,   0.,   6., 134.],\n",
       "        [  4.,   0.,   0., ...,   5.,   8.,  23.]], dtype=float32),\n",
       " array([[  5.,   0.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 16.,   7.,   1., ...,  22.,  46.,  11.],\n",
       "        [ 78., 125.,   1., ..., 115.,  36.,   5.],\n",
       "        ...,\n",
       "        [159.,   1.,   0., ...,   1.,  32.,  27.],\n",
       "        [ 62.,  16.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 89.,  28.,  10., ...,   0.,   1.,   6.]], dtype=float32),\n",
       " array([[ 62.,   3.,   0., ..., 137.,  62.,  10.],\n",
       "        [  0.,   0.,  37., ...,   0.,   0.,   3.],\n",
       "        [ 30.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 11.,   4.,   0., ...,   0.,   0.,   0.],\n",
       "        [115., 101.,  18., ...,  17.,  22.,   7.],\n",
       "        [ 11.,   5.,   1., ...,   0.,   3.,  57.]], dtype=float32),\n",
       " array([[ 63.,   2.,   6., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  43.,  19.,  10.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   4.],\n",
       "        ...,\n",
       "        [  9.,  77., 130., ...,   0.,   0.,   0.],\n",
       "        [ 55., 136.,  74., ...,  19.,  61.,  13.],\n",
       "        [  1.,   6., 128., ...,   0.,   1.,   8.]], dtype=float32),\n",
       " array([[ 1.,  7.,  4., ...,  1.,  0.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 13., 25.,  1.],\n",
       "        [51.,  5.,  2., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [16.,  2.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 5., 16.,  5., ...,  3.,  0.,  0.],\n",
       "        [ 4.,  0.,  0., ...,  7.,  4.,  1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  11.,   0.,   0.],\n",
       "        [  4.,   0.,   0., ...,   1.,   0.,   2.],\n",
       "        [  1.,   0.,   0., ...,   0.,  19.,  45.],\n",
       "        ...,\n",
       "        [135., 135.,  18., ...,   0.,   0.,   3.],\n",
       "        [  1.,  28.,  21., ...,   0.,   0.,  23.],\n",
       "        [ 83., 108., 124., ...,   2.,  20., 124.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 10.,  9.,  3.],\n",
       "        [10.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [12.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 0., 61., 67., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  6.],\n",
       "        [ 1., 50., 98., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 89., 117.,   0., ...,   0.,   0.,   0.],\n",
       "        [  4.,  56.,  43., ...,  34.,   1.,   0.],\n",
       "        [ 13., 128.,  36., ...,   0.,   1.,  38.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   4.,   4.,   4.],\n",
       "        [  0.,   0.,   0., ...,   4.,   1.,   0.],\n",
       "        [ 45.,  75.,  13., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   1.,   3., ...,   0.,   0.,   0.],\n",
       "        [ 13., 106.,  62., ...,   0.,   0.,   0.],\n",
       "        [ 10.,  97., 105., ...,   3.,   1.,   0.],\n",
       "        ...,\n",
       "        [127.,  14.,   2., ...,  46.,   7.,   5.],\n",
       "        [  0.,   1.,   5., ...,   0.,  20.,  24.],\n",
       "        [ 21.,  16.,   0., ...,  15.,   3.,  13.]], dtype=float32),\n",
       " array([[ 0., 20., 58., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 12., 19.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 13., 42., 39.],\n",
       "        ...,\n",
       "        [38.,  2.,  0., ...,  4.,  1.,  3.],\n",
       "        [97., 27.,  0., ...,  5.,  0.,  1.],\n",
       "        [22., 79., 74., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 55.,  50.,  51., ...,   0.,   0.,   0.],\n",
       "        [116., 119.,  69., ...,   4.,   0.,   0.],\n",
       "        [125.,  89.,  74., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  10.,   7.,  15.],\n",
       "        [  6.,   7.,   4., ...,   0.,   0.,   2.],\n",
       "        [ 24.,  50.,  55., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0., 10., ...,  0.,  0.,  0.],\n",
       "        [ 0., 14., 32., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  2.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 1., 17., 20., ...,  7.,  9., 10.],\n",
       "        [11., 16.,  3., ..., 34., 45., 14.],\n",
       "        [ 4., 19., 69., ...,  3., 18.,  1.]], dtype=float32),\n",
       " array([[ 2.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 5.,  5.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 7.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [12.,  4.,  3., ...,  4.,  1.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  0.,  3.],\n",
       "        [ 3.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 6.,  0.,  0., ..., 13., 16.,  5.],\n",
       "        [ 4.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        [10.,  0.,  0., ...,  3.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 7., 32., 70., ...,  6.,  1., 32.],\n",
       "        [ 9., 57., 24., ..., 27.,  9.,  1.],\n",
       "        [ 6.,  1.,  0., ..., 18.,  0.,  0.]], dtype=float32),\n",
       " array([[  3.,   3.,   2., ...,   1.,   2.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,  99.],\n",
       "        [  0.,   1.,  11., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0., 142., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  15.,  62.,  85.],\n",
       "        [  0.,   0.,   0., ...,   0.,  13., 119.]], dtype=float32),\n",
       " array([[  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 131.,  28.,   1.],\n",
       "        [  2.,  25., 141., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 31.,  33.,  23., ...,   3.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  68.,   3.,   3.]], dtype=float32),\n",
       " array([[ 2.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [14., 42., 14., ...,  0.,  0.,  6.],\n",
       "        [ 3.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 0.,  3., 55., ...,  0.,  0.,  1.],\n",
       "        [ 1.,  0.,  6., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  2., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  26.,   0.,   2.],\n",
       "        [  4.,  23., 103., ...,   0.,   0.,   0.],\n",
       "        [ 53.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,  16.,  60., ...,  31.,   6.,   5.],\n",
       "        [ 19.,   3.,   4., ...,  17.,  79.,   7.],\n",
       "        [  4.,  10.,  17., ...,  51.,   6.,   4.]], dtype=float32),\n",
       " array([[  2.,  15.,  21., ...,   1.,   0.,   0.],\n",
       "        [ 14.,  10.,   6., ...,  78.,  68.,  84.],\n",
       "        [ 39.,  38.,   2., ...,   9.,   1.,   6.],\n",
       "        ...,\n",
       "        [115.,  13.,   1., ...,   0.,   0.,   0.],\n",
       "        [  3.,  23.,  26., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 68.,  32.,   1., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   9., 124.],\n",
       "        [ 12.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  9.,  75.,  71., ...,   0.,   0.,   0.],\n",
       "        [ 14.,   0.,   0., ...,  15.,   0.,   0.],\n",
       "        [ 84.,  46.,  23., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 29.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 10., 16., 20.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  9.],\n",
       "        [88., 32.,  0., ...,  1., 30., 40.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   1.,   0., ...,  32.,   1.,   3.],\n",
       "        [107.,  91.,  10., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 67.,  64.,   0., ...,   2.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 70.,  32.,   0., ...,   1.,   5.,   0.],\n",
       "        [  0.,   7.,  16., ...,   0.,   3.,  18.],\n",
       "        [  5.,  13.,  31., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  2.,  78., 129., ...,  23.,   4.,   0.],\n",
       "        [ 16., 126.,  24., ...,   0.,   0.,   0.],\n",
       "        [ 13.,  90.,  35., ...,   0.,   1.,   0.]], dtype=float32),\n",
       " array([[  1.,   6.,  12., ...,   0.,   0.,   2.],\n",
       "        [  3.,   6.,   2., ...,   0.,   0.,   0.],\n",
       "        [  4.,   4.,  20., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 40.,  98.,  63., ...,   0.,   1., 135.],\n",
       "        [  0.,   0.,  10., ...,   8.,   3.,   1.],\n",
       "        [ 80.,   8.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[ 26.,   9.,   1., ...,  20.,  30.,  68.],\n",
       "        [ 21., 107.,  41., ...,   2.,   2.,   5.],\n",
       "        [  0.,   1.,   1., ...,   1.,   1.,  35.],\n",
       "        ...,\n",
       "        [  1.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 45.,   4.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 17.,   0.,   0., ...,  12.,   6.,   5.]], dtype=float32),\n",
       " array([[ 18., 110.,  54., ...,   0.,  17.,   8.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   2.],\n",
       "        ...,\n",
       "        [142.,  14.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 19.,  36.,  28., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 18.,   0.,   0., ...,  45.,  37.,   3.],\n",
       "        [133.,  33.,   3., ...,   0.,   0.,   0.],\n",
       "        [  6.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,   1.,   0., ...,  47.,   7.,   0.],\n",
       "        [  0.,   0.,   0., ...,  12.,  31.,  26.],\n",
       "        [ 28.,   4.,  18., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   1.,   0., ...,   5.,   6.,   7.],\n",
       "        [ 37.,   0.,   0., ...,   6.,   1.,   0.],\n",
       "        [  0.,   1.,   4., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [104.,  16.,   1., ...,   0.,   0.,   2.],\n",
       "        [  3.,   1.,   0., ...,   1.,   2.,   2.],\n",
       "        [  1.,   1.,   6., ...,   0.,   0.,   6.]], dtype=float32),\n",
       " array([[117.,  42.,   1., ...,   0.,   1.,   0.],\n",
       "        [ 98.,  62.,   0., ...,   0.,  47.,  55.],\n",
       "        [ 20.,  42.,  21., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   4.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,  48.,  41.],\n",
       "        [166.,   5.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[ 16.,  36.,  11., ...,   0.,   0.,   0.],\n",
       "        [138.,   5.,   0., ...,   1.,   0.,   0.],\n",
       "        [  4.,   6.,   4., ...,  17.,   7.,   6.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 99.,   5.,   0., ...,   1.,   2.,   0.],\n",
       "        [ 27.,  26.,  20., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,  10.,  14., ...,  14.,   1.,  10.],\n",
       "        [  0.,   0.,   0., ...,   9.,   4.,  47.],\n",
       "        [  0.,   2.,   1., ...,   0.,   2.,  12.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  28.,  12.,   5.],\n",
       "        [  6.,   2.,   2., ...,   0.,   0.,   0.],\n",
       "        [148.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 79.,   9.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   1.,   1.,   4.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   4.,  62.],\n",
       "        [ 27.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [103.,  33.,   0., ...,  20.,  98., 142.]], dtype=float32),\n",
       " array([[ 35.,  31.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 16.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 26.,  74.,   1., ...,  74.,   9.,   1.],\n",
       "        ...,\n",
       "        [  0.,  90., 133., ...,   0.,   0.,  10.],\n",
       "        [  0.,   0.,   0., ...,   1., 167.,  81.],\n",
       "        [  0.,   0.,   0., ...,  42.,  61.,  38.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [79., 80.,  2., ...,  0.,  3.,  3.],\n",
       "        [22., 83.,  5., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  6.,  8.,  3.],\n",
       "        [ 1.,  5.,  6., ...,  1.,  1.,  0.]], dtype=float32),\n",
       " array([[  2.,   2.,  55., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,  21., ...,   0.,   0.,   0.],\n",
       "        [ 33.,   9.,  12., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,  10.,  19., ...,  55.,   4.,   3.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   2., 120., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ...,  6., 19., 44.],\n",
       "        [ 0.,  0.,  0., ...,  0., 28., 61.],\n",
       "        [13., 31., 34., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [20.,  4.,  0., ...,  2.,  1.,  2.],\n",
       "        [ 2., 52., 37., ...,  0.,  0.,  0.],\n",
       "        [17., 30., 20., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 78., 120.,  15., ...,   0.,   0.,   0.],\n",
       "        [ 14.,  41.,  34., ...,   0.,   0.,   0.],\n",
       "        [  1.,   9., 115., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   2., ...,  31.,  22.,  50.],\n",
       "        [ 47., 134.,  62., ...,   0.,   0.,   0.],\n",
       "        [  4.,  22.,  19., ...,   0.,   0.,   4.]], dtype=float32),\n",
       " array([[  0.,   2.,  89., ...,   0.,   0.,   0.],\n",
       "        [  1.,   1.,   1., ...,  14.,   0.,   0.],\n",
       "        [  0.,  66., 114., ...,   0.,   0.,   4.],\n",
       "        ...,\n",
       "        [135.,  33.,   1., ...,   4.,  10.,   1.],\n",
       "        [ 84.,   7.,   0., ...,   0.,   0.,   0.],\n",
       "        [  9.,   1.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1.,   0.,   1.],\n",
       "        [ 12.,   1.,   0., ...,  43., 145.,   5.],\n",
       "        [  7.,   2.,   0., ...,   0.,   0.,   4.],\n",
       "        ...,\n",
       "        [  6.,  20.,   1., ...,   0.,   5.,  26.],\n",
       "        [  0.,   0.,   1., ...,  57.,  99.,  39.],\n",
       "        [ 48.,  62.,  69., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   8.,   0.,   0.],\n",
       "        ...,\n",
       "        [108.,  82.,  64., ...,   0.,   0.,   0.],\n",
       "        [100.,  79.,   5., ...,   0.,   0.,   0.],\n",
       "        [ 51.,  26.,   9., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 30.,   8.,  24., ...,   1.,   4.,  44.],\n",
       "        [  0.,   0.,   4., ...,   0.,   0.,   2.],\n",
       "        [  8.,  29.,   6., ...,   7.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 35., 115.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  82.,  12.,  15.],\n",
       "        [  0.,   0.,   0., ...,  69., 120.,   0.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   0.,   0.,  17.],\n",
       "        [  1.,   0.,   0., ...,   2.,   8.,   3.],\n",
       "        [ 20.,   5.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,   6.,   6.],\n",
       "        [  0.,   1.,  61., ...,   0.,   0.,   0.],\n",
       "        [  0.,   9., 124., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 39.,  60.,  84., ...,   1.,   0.,  27.],\n",
       "        [ 42.,   2.,   2., ...,  69.,  82.,   3.],\n",
       "        [  0.,   0.,   0., ...,  98.,  27.,  20.],\n",
       "        ...,\n",
       "        [133.,   3.,   0., ...,   3.,   9.,  21.],\n",
       "        [ 24.,  19., 154., ...,   0.,   0.,   0.],\n",
       "        [ 37.,   2.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[26.,  0.,  1., ...,  5.,  7.,  2.],\n",
       "        [ 0.,  0.,  0., ...,  7.,  2., 30.],\n",
       "        [ 0.,  2.,  0., ..., 23., 19., 18.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  3., 46.],\n",
       "        [49.,  8.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  3., ...,  1.,  2., 11.]], dtype=float32),\n",
       " array([[13., 41., 17., ...,  1.,  0.,  0.],\n",
       "        [ 2.,  3., 14., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  1.,  1., ...,  2.,  2.,  1.],\n",
       "        ...,\n",
       "        [37., 10.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        [65., 34.,  0., ...,  9.,  0.,  0.]], dtype=float32),\n",
       " array([[  1., 135., 119., ...,   0.,   0.,   0.],\n",
       "        [ 91., 103.,   3., ...,   0.,   0.,   1.],\n",
       "        [  3.,   6.,   6., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,  78.,  59., ...,   0.,   0.,  66.],\n",
       "        [  0.,  15.,   6., ...,   0.,   0.,  93.]], dtype=float32),\n",
       " array([[  3.,  22., 138., ...,   2.,   3.,   0.],\n",
       "        [ 12.,   5.,   3., ...,   2.,   3.,   5.],\n",
       "        [  8.,  23.,  14., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 20.,  20.,  25., ...,   0.,   0.,   0.],\n",
       "        [ 30.,   8.,  72., ...,   0.,   5.,   3.],\n",
       "        [ 63.,   5.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ...,  1.,  5.,  1.],\n",
       "        [ 3.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  0.,  0., ...,  0.,  0., 18.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 31.,  1.,  3.],\n",
       "        [ 0.,  7.,  8., ..., 13., 88., 80.],\n",
       "        [ 0.,  0.,  0., ..., 19.,  3., 21.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   2., 161.,  43.],\n",
       "        [  2.,  98., 180., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [ 18.,   4.,   0., ...,   2.,   2.,   0.],\n",
       "        [  5.,  22.,  42., ...,   0.,   0.,   3.],\n",
       "        [  1.,   3.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[14., 10., 20., ...,  0.,  0.,  0.],\n",
       "        [26., 88., 12., ...,  2.,  2.,  3.],\n",
       "        [ 4.,  4.,  1., ...,  0.,  0.,  4.],\n",
       "        ...,\n",
       "        [ 9.,  9.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  0.,  0.],\n",
       "        [ 5.,  7., 11., ...,  1.,  2., 12.]], dtype=float32),\n",
       " array([[159., 159.,   2., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,  52.,  16.,  15.],\n",
       "        [  2.,  17., 153., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   8.,  90., ...,   5.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  12.,  15.,  39.],\n",
       "        [  0.,   0.,   3., ...,   2.,  10.,  40.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 12.,  3.,  3.],\n",
       "        [ 0.,  0.,  5., ..., 16.,  0.,  0.],\n",
       "        [ 0.,  0.,  6., ...,  7.,  0., 11.],\n",
       "        ...,\n",
       "        [46., 56., 19., ...,  2., 14.,  4.],\n",
       "        [ 1.,  1.,  2., ...,  0.,  1.,  7.],\n",
       "        [26., 16.,  1., ...,  0.,  0.,  2.]], dtype=float32),\n",
       " array([[ 5.,  7.,  9., ...,  5.,  3.,  3.],\n",
       "        [19., 44., 33., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0., 23., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 4.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [51., 54., 26., ...,  0.,  1.,  4.],\n",
       "        [25., 14., 77., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 1.,  0.,  9., ...,  6., 10.,  5.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 27., 18.,  6.],\n",
       "        ...,\n",
       "        [ 2.,  9.,  3., ..., 15., 26.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  0.,  1.],\n",
       "        [27., 13., 25., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 53.,  69.,  17., ...,   5.,   8.,   9.],\n",
       "        [131.,   8.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 79.,  22.,   2., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 18.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  4.,   2.,   0., ...,   0.,   0.,  19.],\n",
       "        [ 18.,   7.,   2., ...,   0.,   0.,   2.]], dtype=float32),\n",
       " array([[123.,   5.,   0., ...,   0.,   5.,   9.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  13.],\n",
       "        [ 47.,  15.,   5., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,   5.,   1., ...,   0.,   0.,   3.],\n",
       "        [  1.,  19.,  41., ...,   0.,   0.,   0.],\n",
       "        [ 39.,   5.,   0., ...,   6.,   0.,   0.]], dtype=float32),\n",
       " array([[  4.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  16.,  18.,  44.],\n",
       "        [ 36., 113.,   1., ...,   9.,   5.,   8.],\n",
       "        ...,\n",
       "        [ 27.,  18.,   9., ...,   0.,   0.,   4.],\n",
       "        [  2.,   6.,   0., ...,   0.,   0.,   1.],\n",
       "        [  1.,   0.,   0., ...,  15.,   5.,   6.]], dtype=float32),\n",
       " array([[ 31., 114.,  52., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   3.,   0.,   7.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 41.,   9.,   1., ...,   5.,  12.,   6.],\n",
       "        [  0.,   0.,   0., ...,   5.,   0.,   1.],\n",
       "        [156.,  24.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,  11.],\n",
       "        [  1.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  3.,  16.,  43., ...,   7.,   2.,   1.],\n",
       "        ...,\n",
       "        [  4.,   0.,   0., ...,  58.,  94.,  13.],\n",
       "        [  0.,   4.,  13., ...,   4.,  51.,  21.],\n",
       "        [130.,  43.,  21., ...,   0.,   0.,  12.]], dtype=float32),\n",
       " array([[ 81.,  20.,  15., ...,   6.,  49.,  76.],\n",
       "        [  3.,  14.,  20., ...,   0.,   0.,   0.],\n",
       "        [131., 109.,  18., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 55.,   2.,   0., ...,   0.,   0.,   3.],\n",
       "        [  0.,   1.,   2., ...,   0.,   1.,   0.],\n",
       "        [  2.,   4.,  38., ..., 113.,  20.,  17.]], dtype=float32),\n",
       " array([[ 5.,  2.,  1., ..., 46., 28.,  6.],\n",
       "        [ 0.,  1.,  0., ..., 92., 13., 11.],\n",
       "        [ 0.,  0.,  0., ..., 23.,  9., 45.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 88., 52., 17.],\n",
       "        [ 4.,  3.,  2., ...,  0.,  0.,  0.],\n",
       "        [49., 75., 67., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   4.],\n",
       "        [ 22.,  88.,  49., ...,  24.,   3.,  31.],\n",
       "        [103., 129.,  31., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 23.,   1.,   7., ...,  68.,  23.,   1.],\n",
       "        [  4.,   8.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  64.,  54.,  16.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,   2.,  41.,  30.],\n",
       "        ...,\n",
       "        [142., 142.,   3., ...,  10.,  13.,   2.],\n",
       "        [  9.,  11.,  95., ...,   0.,   0.,   0.],\n",
       "        [ 79.,  30.,  31., ...,  73.,  10.,   1.]], dtype=float32),\n",
       " array([[  2.,  15.,  31., ...,   2.,  79., 125.],\n",
       "        [  0.,   0.,   0., ...,  84.,   3.,   1.],\n",
       "        [  2.,   2.,  38., ...,  78.,  36.,  13.],\n",
       "        ...,\n",
       "        [ 98.,   5.,  20., ...,   0.,   0.,   0.],\n",
       "        [ 88.,  31.,  47., ...,   0.,   4.,   0.],\n",
       "        [  1.,   1.,   9., ...,   0.,   0.,   2.]], dtype=float32),\n",
       " array([[  1.,  10.,  41., ...,   7.,   0.,   3.],\n",
       "        [ 15.,  77., 120., ...,   0.,   0.,   0.],\n",
       "        [  2.,   1.,   5., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [  2.,   2.,  26., ...,   0.,   0.,   0.],\n",
       "        [ 53.,  33.,  14., ...,   5.,   4.,   5.]], dtype=float32),\n",
       " array([[  0.,   0.,   4., ...,   0.,   0.,   0.],\n",
       "        [  4.,  14.,  63., ...,  21.,  33.,   5.],\n",
       "        [ 54., 134.,  53., ...,  12.,   3.,   8.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,  11., 118., 118.],\n",
       "        [  0.,   3., 102., ...,   2.,  48., 119.],\n",
       "        [ 13.,   6.,  34., ...,   2.,  20.,   3.]], dtype=float32),\n",
       " array([[ 0.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1., 11., ...,  1., 19.,  3.],\n",
       "        [ 1., 11., 10., ...,  2.,  4.,  0.],\n",
       "        ...,\n",
       "        [ 5.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 1., 28., 35., ...,  0.,  0.,  9.],\n",
       "        [ 0.,  0.,  0., ..., 15., 58., 15.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [126., 111.,  17., ...,   7.,   6.,   1.],\n",
       "        [132.,  61.,  11., ...,   0.,   4.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  76.,   4.,   1.],\n",
       "        [  0.,   3., 100., ...,   4.,   5.,   6.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  1., 26., 36.],\n",
       "        [ 0.,  0.,  0., ..., 75., 12., 16.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 45.,  3., 15.],\n",
       "        [ 0.,  7., 22., ...,  9.,  1.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  1., 19., 53.]], dtype=float32),\n",
       " array([[  3.,   1.,   0., ...,  29.,   5.,  17.],\n",
       "        [  3.,  22., 106., ...,   0.,   0.,   0.],\n",
       "        [  0.,   4.,   8., ...,  43.,  58.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  15.,  18.,  45.],\n",
       "        [  4.,  21.,  17., ...,   1.,   0.,   0.],\n",
       "        [  0.,  16., 125., ...,   3.,   1.,   1.]], dtype=float32),\n",
       " array([[  6.,   4.,   1., ...,   0.,   0.,   1.],\n",
       "        [  1.,  13.,  71., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,  66., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        [  1.,   0.,   0., ..., 114.,  31.,   5.],\n",
       "        [ 22., 117.,  64., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   3.],\n",
       "        [ 53.,  15.,  11., ...,   0.,   0.,   0.],\n",
       "        [ 10.,  67.,  59., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 76.,  64.,  65., ...,   0.,   0.,   0.],\n",
       "        [  5.,  22.,  28., ...,  12., 110.,  20.],\n",
       "        [  2.,   7.,  24., ..., 128.,  27.,  46.]], dtype=float32),\n",
       " array([[  3.,  19.,  43., ...,   0.,   0.,   0.],\n",
       "        [ 25.,   0.,   0., ...,   1.,   8.,   7.],\n",
       "        [ 27., 133.,  62., ...,  90.,  44.,   1.],\n",
       "        ...,\n",
       "        [  7.,  80., 138., ...,   1.,   1.,   4.],\n",
       "        [105.,  76.,  17., ...,  14.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  37.,  37.,   8.]], dtype=float32),\n",
       " array([[  5., 134., 139., ...,   0.,   0.,   0.],\n",
       "        [ 81., 128.,  76., ...,   0.,   0.,   0.],\n",
       "        [ 35.,  26.,  19., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   3.,  29.,  24.],\n",
       "        [  0.,   0.,   0., ...,  83.,  10.,   2.],\n",
       "        [ 29.,  79.,  90., ...,   6.,   3.,   5.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  19.,   2.,   2.],\n",
       "        [  0.,   0.,   1., ...,   1.,   0.,   1.],\n",
       "        [ 37.,   6.,  63., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 27.,   3.,   2., ...,   2.,  49., 108.],\n",
       "        [  0.,   3.,  17., ...,   5.,   6.,  36.],\n",
       "        [  1.,   0.,   0., ..., 131.,  34.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  7.,  8., 81.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  0.,  1.],\n",
       "        [ 9., 13., 36., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 9., 13.,  3., ...,  0.,  1., 59.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  1.,  5.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  3.,  2.]], dtype=float32),\n",
       " array([[  0.,   0.,   5., ...,   0.,   0.,   0.],\n",
       "        [  0.,  11., 112., ...,   0.,   0.,   0.],\n",
       "        [  4.,  28., 119., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,   0.,   0., ...,   0.,   2.,   4.],\n",
       "        [ 10.,  40.,  21., ...,   0.,   0.,   0.],\n",
       "        [  1.,  18.,  63., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[117.,  29.,  22., ...,   0.,   0.,   0.],\n",
       "        [  0.,   4.,  27., ...,   9.,  15.,  18.],\n",
       "        [ 30.,   8.,  17., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,   4.,  27., ...,  34.,  54.,  18.],\n",
       "        [  0.,   0.,   0., ...,   5.,   6.,  12.],\n",
       "        [  0.,   0.,   0., ...,  56.,   4.,   5.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  14.,   9.,  15.],\n",
       "        [  0.,  56., 139., ...,   0.,   0.,  29.],\n",
       "        [ 97.,  76.,  31., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,   1.,   0.,   6.],\n",
       "        [ 20.,  53.,  38., ...,   0.,   1.,  12.],\n",
       "        [ 22.,  20.,  18., ...,   0.,   0.,  24.]], dtype=float32),\n",
       " array([[  0.,   5.,  20., ...,   3.,   1.,   0.],\n",
       "        [119.,  28.,   3., ...,   7.,   0.,   6.],\n",
       "        [118.,  20.,  11., ...,   3.,   3.,   6.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  54.,   4.,   6.],\n",
       "        [  8.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [131., 131.,  13., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   5.,  30.,   4.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,  16., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [  0.,  53., 115., ...,   0.,   0.,  22.],\n",
       "        [  2.,   9.,  65., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   3., ...,   1.,  21., 100.]], dtype=float32),\n",
       " array([[146.,  29.,   3., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,  28.,  18.,   3.],\n",
       "        [  0.,   0.,   4., ...,  13.,  21.,  38.],\n",
       "        ...,\n",
       "        [  4.,   7.,   2., ...,   4.,   3.,  16.],\n",
       "        [100.,  44.,  59., ...,  15.,   7.,   0.],\n",
       "        [  1.,   1.,   9., ...,  13.,  19.,  45.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   6.,  10.,  48.],\n",
       "        [  3., 107., 126., ...,   2.,   3.,  11.],\n",
       "        [122.,  70.,  15., ...,   0.,   1.,   0.],\n",
       "        ...,\n",
       "        [ 41.,  51.,  43., ...,  25., 119.,  48.],\n",
       "        [ 39.,  66.,  22., ...,   6.,  24.,   2.],\n",
       "        [  2.,   4.,   2., ..., 108.,  22.,   3.]], dtype=float32),\n",
       " array([[  1.,   6.,  32., ...,   0.,   0.,   0.],\n",
       "        [ 33.,  35.,  57., ...,   0.,   0.,   0.],\n",
       "        [ 21., 102., 125., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,  23.,  20., ...,   1.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   7.,   8.,   0.],\n",
       "        [  1.,   0.,  13., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 14.,  14.,  14., ...,   0.,   0.,   2.],\n",
       "        [  0.,  72., 132., ...,   0.,   0.,   0.],\n",
       "        [ 29.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  3., 100.,  70., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,  81.,  88.,  93.]], dtype=float32),\n",
       " array([[  0.,  60., 121., ...,  30.,  29.,   6.],\n",
       "        [ 24.,  43., 146., ...,  26.,  11.,   2.],\n",
       "        [ 14., 105., 147., ...,   0.,   2.,   2.],\n",
       "        ...,\n",
       "        [  0.,   2.,  86., ...,   3.,   3.,  10.],\n",
       "        [  0.,   3.,   9., ...,   0.,  23.,  72.],\n",
       "        [ 44.,  13.,   3., ...,   0.,   0.,   5.]], dtype=float32),\n",
       " array([[ 90.,  11.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   9.,  11., 102.],\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  3.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 23.,   1.,   1., ...,   3.,   1.,   1.],\n",
       "        [130.,  93.,   7., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,  10.,   6., ...,   0.,   0.,   0.],\n",
       "        [ 26.,  57., 120., ...,   0.,   4.,   5.],\n",
       "        [  2.,   6.,  10., ...,   4.,   0.,   8.],\n",
       "        ...,\n",
       "        [ 10.,  25., 134., ...,   0.,   0.,   0.],\n",
       "        [ 99.,  11.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,   1.,   0.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,  42.,  59.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  17.],\n",
       "        [  0.,   0.,   0., ...,   9.,   0.,   0.],\n",
       "        ...,\n",
       "        [100.,  11.,   1., ...,   0.,   0.,   0.],\n",
       "        [  3.,  21.,  80., ...,  12.,  43.,  39.],\n",
       "        [ 24.,  78.,  31., ...,  38.,  27.,  17.]], dtype=float32),\n",
       " array([[  7.,   6.,  21., ...,   0.,   0.,   0.],\n",
       "        [  9., 147.,  11., ...,   0.,   2.,  17.],\n",
       "        [  0.,   1.,   2., ...,   5.,   9.,  12.],\n",
       "        ...,\n",
       "        [  2.,   2.,  50., ...,   0.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  11.,  65.,   6.]], dtype=float32),\n",
       " array([[  9., 109., 164., ...,   0.,   0.,   0.],\n",
       "        [  7.,  21.,  39., ...,   0.,   0.,   0.],\n",
       "        [  4.,  47.,  92., ...,  38.,   8.,   0.],\n",
       "        ...,\n",
       "        [  4.,  47., 126., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,  62., 123.]], dtype=float32),\n",
       " array([[ 33.,  68.,  41., ...,   0.,   0.,   0.],\n",
       "        [129., 129.,  57., ...,   5.,   8.,   1.],\n",
       "        [  4.,   1.,   4., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1.,   3.,  66.],\n",
       "        [ 48., 107.,  79., ...,   9.,  95.,  28.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  20.]], dtype=float32),\n",
       " array([[17.,  6., 20., ...,  0.,  0.,  9.],\n",
       "        [ 0.,  2.,  1., ...,  1.,  1.,  1.],\n",
       "        [27.,  0.,  1., ...,  4.,  3.,  2.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  3.,  2., 10.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  1.,  6., ...,  1.,  0.,  1.]], dtype=float32),\n",
       " array([[146.,  77.,  12., ...,  31.,  42.,   2.],\n",
       "        [ 94., 129.,  29., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   3., ...,   0.,   1.,  25.],\n",
       "        ...,\n",
       "        [  0.,   2.,  13., ...,   3.,  30.,   5.],\n",
       "        [  0.,   0.,   0., ...,  18.,   5.,   1.],\n",
       "        [  6.,   1.,   1., ...,  55.,   2.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  11.,   8.,   6.],\n",
       "        [ 54.,  64.,  60., ...,   0.,   0.,   0.],\n",
       "        [ 39., 128.,  19., ...,   0.,   1.,  13.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,  16.,   0.,   3.],\n",
       "        [ 29.,  68.,  61., ...,   0.,   0.,   0.],\n",
       "        [ 37.,  46.,  38., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  6.,  37., 102., ...,  21.,   8.,  32.],\n",
       "        [  0.,   0.,   0., ...,   8.,  13.,  14.],\n",
       "        [  0.,   0.,   0., ...,  63.,  27.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   3.,   1.,   2.],\n",
       "        [ 66.,  32.,   9., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7.,   4.,  17.]], dtype=float32),\n",
       " array([[ 17.,  93.,  56., ...,  33.,   1.,   0.],\n",
       "        [ 12., 122.,  99., ...,   0.,   1.,   0.],\n",
       "        [ 23.,  14.,  23., ...,   0.,   0.,  10.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  69.,  10.,   8.],\n",
       "        [  0.,   0.,   0., ...,  45.,  45.,  22.],\n",
       "        [  0.,  15.,  26., ...,  16.,  78.,  21.]], dtype=float32),\n",
       " array([[ 19.,  17.,  48., ...,  58.,  47.,  11.],\n",
       "        [  0.,   0.,   0., ...,  23.,  67.,  43.],\n",
       "        [ 47.,  12.,  30., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  30.,  85.,  17.],\n",
       "        [  0.,   0.,   0., ...,  53.,  64.,  14.],\n",
       "        [ 29.,  74., 106., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  3.,  70., 168., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,  70., ...,   1.,  11.,   6.],\n",
       "        [ 16., 131., 131., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  3.,  24.,  33., ...,  37.,  67.,  90.],\n",
       "        [ 34., 163.,  63., ...,   2.,   1.,   5.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,  16.]], dtype=float32),\n",
       " array([[ 10., 116., 115., ...,   3.,   4.,   0.],\n",
       "        [  6.,  13.,   5., ...,   0.,   0.,   1.],\n",
       "        [  9.,  24.,  13., ...,  66.,   3.,   1.],\n",
       "        ...,\n",
       "        [ 73.,  67.,  19., ...,   1.,   1.,   3.],\n",
       "        [  2.,  60.,  63., ...,   0.,   4.,  35.],\n",
       "        [  0.,   0.,   2., ...,   1.,   8.,  27.]], dtype=float32),\n",
       " array([[80., 16.,  6., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  5., 33., 27.],\n",
       "        [ 0.,  0.,  0., ..., 56., 21., 18.],\n",
       "        ...,\n",
       "        [ 8., 39., 93., ...,  0.,  0., 13.],\n",
       "        [ 0.,  0.,  1., ...,  6., 76., 57.],\n",
       "        [ 7., 20.,  9., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  1.,   1.,   0., ...,  10.,  59., 108.],\n",
       "        [  5.,  14.,  11., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,   0.,   2.,  62.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  23., 125.,  45.],\n",
       "        [  8.,  24., 125., ...,   0.,   0.,   0.],\n",
       "        [ 11.,   5.,  21., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,  23.,  40., ...,  10.,  17.,  24.],\n",
       "        [ 35.,  21.,   7., ...,   5.,  17.,  39.],\n",
       "        [  0.,   0.,   0., ...,   9.,   4.,  15.],\n",
       "        ...,\n",
       "        [ 13.,   6.,   6., ..., 118.,  63.,   2.],\n",
       "        [  0.,   0.,   0., ...,  12.,   5.,   2.],\n",
       "        [ 23., 115., 111., ...,   1.,   2.,   9.]], dtype=float32),\n",
       " array([[16., 45., 22., ...,  0.,  0.,  0.],\n",
       "        [77., 43., 13., ...,  0.,  0.,  2.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  4.,  3.],\n",
       "        ...,\n",
       "        [ 6.,  6.,  1., ...,  1., 10., 22.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  5., 56., ...,  1.,  0.,  2.]], dtype=float32),\n",
       " array([[  1.,  16.,  92., ...,  10.,  29.,   9.],\n",
       "        [  0.,   1.,   2., ...,   0.,   0.,   1.],\n",
       "        [ 95.,  79.,  35., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [118.,  39.,   2., ...,   0.,   2.,  25.],\n",
       "        [  0.,   0.,   0., ...,  13.,   1.,   3.],\n",
       "        [ 30.,  46.,   8., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  3.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 71.,  10.,   8., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   6., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  5.,   6.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  60.,   6.,   0.],\n",
       "        [  0.,   0.,   0., ...,  20.,  82., 124.]], dtype=float32),\n",
       " array([[ 52.,   7.,   7., ...,   0.,   0.,   0.],\n",
       "        [  4., 153., 145., ...,   0.,   0.,   5.],\n",
       "        [ 22.,  45.,  44., ...,  27.,  10.,  10.],\n",
       "        ...,\n",
       "        [ 32., 116.,  77., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  20.,   1.,   1.],\n",
       "        [  0.,   0.,   0., ...,  24.,  11.,   7.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,  22.],\n",
       "        [  0.,   0.,   0., ...,   0.,   3.,  50.],\n",
       "        [ 52.,  38.,   9., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [110.,  75.,  24., ...,   0.,   0.,   0.],\n",
       "        [ 32.,  18.,  34., ...,  14.,  35.,  31.],\n",
       "        [  7., 109., 157., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 15., 11., 37.],\n",
       "        [38.,  5., 14., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  4., 21., 61.],\n",
       "        ...,\n",
       "        [ 7.,  8., 27., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  4., 41., 61.],\n",
       "        [ 0.,  0.,  0., ..., 51., 66., 18.]], dtype=float32),\n",
       " array([[ 49.,  18.,   2., ...,   0.,   0.,   1.],\n",
       "        [ 47.,  93.,   8., ...,   4.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  11.,   3.,  72.],\n",
       "        [  0.,   0.,   0., ...,   9.,  49.,  28.],\n",
       "        [ 98., 119.,  13., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   9., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   4.,   3.,   3.],\n",
       "        [  7.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 64.,  86., 106., ...,   0.,   0.,   0.],\n",
       "        [ 43., 127.,  95., ...,   0.,   3., 102.],\n",
       "        [ 73.,  18.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[22.,  7., 11., ...,  0.,  9.,  1.],\n",
       "        [13., 15., 25., ...,  0.,  0.,  0.],\n",
       "        [18., 15., 27., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  1., 70., ..., 10.,  1.,  4.],\n",
       "        [ 0.,  0.,  0., ..., 23., 40., 42.],\n",
       "        [ 0.,  0.,  0., ..., 78., 31., 20.]], dtype=float32),\n",
       " array([[ 1., 22., 20., ..., 64., 50., 43.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 3., 47., 47., ...,  3.,  7., 16.],\n",
       "        ...,\n",
       "        [20., 16., 84., ..., 23.,  7., 93.],\n",
       "        [ 0.,  3., 10., ...,  0.,  0.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  3.]], dtype=float32),\n",
       " array([[  4.,  11.,  45., ...,   1.,   8.,  18.],\n",
       "        [ 10.,  20.,  37., ...,   0.,  14.,  53.],\n",
       "        [ 31.,  56.,  30., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   2.,   7., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ..., 112.,  13.,   3.],\n",
       "        [  0.,   0.,   0., ...,  11.,   3.,   2.]], dtype=float32),\n",
       " array([[  0.,   1.,   2., ...,   1.,   7.,  37.],\n",
       "        [  1.,   2.,   7., ...,   0.,   0.,   0.],\n",
       "        [  3.,   3.,  11., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 64.,  16.,  51., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  2.,  35., 130., ...,   1.,   0.,  16.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  1., 11.],\n",
       "        [47., 50.,  2., ...,  2.,  2., 10.],\n",
       "        ...,\n",
       "        [ 0.,  3., 55., ...,  1.,  0.,  0.],\n",
       "        [42., 97., 53., ...,  0.,  0.,  9.],\n",
       "        [22., 14., 29., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  5., 10., 41.],\n",
       "        [16., 57., 60., ...,  2.,  1.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  9., 18., 48.],\n",
       "        ...,\n",
       "        [ 3.,  1.,  0., ..., 14., 35., 29.],\n",
       "        [13., 30., 57., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 36., 10.,  2.]], dtype=float32),\n",
       " array([[13., 12., 10., ...,  0.,  0.,  0.],\n",
       "        [23.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  1.,  4.],\n",
       "        ...,\n",
       "        [ 8., 78., 76., ...,  1.,  2.,  1.],\n",
       "        [ 3.,  1.,  8., ...,  0.,  0.,  0.],\n",
       "        [ 8.,  3.,  9., ...,  1.,  0.,  0.]], dtype=float32),\n",
       " array([[20.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 7., 66., 26., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1.,  5., ..., 20., 10.,  2.],\n",
       "        ...,\n",
       "        [ 1.,  7., 42., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 48.,  1.,  3.],\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 5.,  3.,  1., ..., 89., 99., 17.],\n",
       "        [10., 23.,  9., ...,  0.,  0.,  0.],\n",
       "        [23., 30., 22., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 6., 31., 20., ...,  0.,  2.,  6.],\n",
       "        [ 3.,  2.,  7., ...,  1.,  0.,  0.],\n",
       "        [19.,  0.,  0., ...,  1.,  5., 43.]], dtype=float32),\n",
       " array([[  1.,   9.,  13., ...,   0.,   0.,   0.],\n",
       "        [ 72.,  18.,  18., ...,   0.,   7.,  14.],\n",
       "        [ 21.,  35.,  25., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  5.,  11.,  29., ...,   0.,   0.,   0.],\n",
       "        [ 42.,  49., 144., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   2.,   6.]], dtype=float32),\n",
       " array([[  3.,   0.,   0., ...,  11.,  32.,  72.],\n",
       "        [  0.,   0.,   0., ...,   9.,   0.,   0.],\n",
       "        [ 92.,  94.,  43., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   6.,   0.,   2.],\n",
       "        [ 17., 138.,  55., ...,   0.,   0.,   0.],\n",
       "        [ 35., 165., 127., ...,  11.,   4.,   4.]], dtype=float32),\n",
       " array([[ 0.,  0.,  2., ...,  5.,  1.,  4.],\n",
       "        [ 1.,  1., 14., ...,  4.,  2.,  3.],\n",
       "        [ 1., 15., 50., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  7.,  3., 47.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  2., 20.],\n",
       "        [32.,  4.,  9., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  1.,   2.,  23., ...,   0.,   0.,   0.],\n",
       "        [  9.,   4.,   6., ...,   0.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   8.,  56.,  59.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1.,   6.,   9.],\n",
       "        [ 18.,  22.,  10., ...,   0.,   0.,   0.],\n",
       "        [  0.,  47., 126., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[114.,   0.,   0., ...,   2.,  70.,  72.],\n",
       "        [  0.,   0.,   0., ...,  66.,  30.,   1.],\n",
       "        [  0.,   0.,   0., ...,  30.,   5.,   9.],\n",
       "        ...,\n",
       "        [ 29., 123.,  63., ...,  25.,  26.,   8.],\n",
       "        [ 25.,  87., 125., ...,   0.,   0.,   0.],\n",
       "        [108.,  94.,   2., ...,   7.,  83.,  38.]], dtype=float32),\n",
       " array([[  5.,  34., 100., ...,   6.,   2.,   0.],\n",
       "        [  2.,   0.,   0., ...,   0.,   1.,   0.],\n",
       "        [ 15.,  49.,  79., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 11.,  24.,  89., ...,  41.,  20.,   5.],\n",
       "        [  1., 100., 123., ...,   2.,   1.,   1.],\n",
       "        [  2.,  15.,   5., ...,   3.,   4.,   7.]], dtype=float32),\n",
       " array([[ 48.,  10.,  68., ...,   0.,   0.,   0.],\n",
       "        [ 24.,   2.,   0., ...,   7.,   3.,   6.],\n",
       "        [  0.,  16.,  87., ...,  12.,  40.,   4.],\n",
       "        ...,\n",
       "        [  6.,  89.,  69., ...,   1.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   8.,   7.,   4.],\n",
       "        [  0.,   0.,   0., ..., 125.,  16.,   1.]], dtype=float32),\n",
       " array([[ 80.,  67.,  43., ...,   5.,  38.,  29.],\n",
       "        [ 51., 113.,  74., ...,   0.,   0.,   9.],\n",
       "        [ 17.,   7.,   7., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   4.,  13., ...,  89.,  73.,   2.],\n",
       "        [  5.,  14.,  28., ...,   0.,   0.,   0.],\n",
       "        [  1.,  15.,  23., ..., 110.,  43.,  11.]], dtype=float32),\n",
       " array([[ 1., 13., 85., ...,  0.,  0.,  0.],\n",
       "        [13., 54., 49., ..., 25., 13., 21.],\n",
       "        [21., 36., 24., ...,  0.,  4., 14.],\n",
       "        ...,\n",
       "        [81.,  7., 13., ...,  2.,  0.,  3.],\n",
       "        [ 2.,  1.,  5., ...,  5., 23., 55.],\n",
       "        [19., 22., 46., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  2.,  17., 130., ...,   2.,  12.,  19.],\n",
       "        [ 19.,   7.,   6., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 38.,  15.,  49., ...,  11.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  13.,   1.,   1.],\n",
       "        [  7.,  23., 101., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 53.,  3.,  4.],\n",
       "        [20., 70., 67., ...,  1.,  0.,  4.],\n",
       "        ...,\n",
       "        [14., 19., 53., ..., 82., 39.,  6.],\n",
       "        [ 0.,  6.,  7., ...,  5.,  9.,  4.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  6.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1.,   4.,   6.],\n",
       "        [  3.,   5., 138., ...,  55.,  52.,  30.],\n",
       "        [ 19.,  43., 110., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 37.,  58.,  30., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  42.,  14.,  20.],\n",
       "        [ 22.,  46.,  17., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  9., 119., 119., ...,   0.,   0.,   0.],\n",
       "        [131., 113.,  51., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  11.,   0.,   0.],\n",
       "        [ 32.,  46.,  35., ...,   0.,   0.,   0.],\n",
       "        [  7.,  42.,  84., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   1.,  19., ...,   0.,   0.,   0.],\n",
       "        [  2.,   2.,  57., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,  22., 104.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ..., 118.,   8.,   0.],\n",
       "        [  4.,  77., 116., ...,   0.,   0.,   3.],\n",
       "        [104.,  82.,  13., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 62., 127., 106., ...,  90.,  78.,   8.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   4.],\n",
       "        [ 85.,  62.,  61., ...,   6.,   2.,   1.],\n",
       "        ...,\n",
       "        [  1.,  10., 121., ...,   0.,   0.,   0.],\n",
       "        [ 26.,  15.,  88., ...,  12.,   6.,   1.],\n",
       "        [118.,  69.,   6., ...,   0.,   0.,   5.]], dtype=float32),\n",
       " array([[  0.,   0.,   1., ...,   7.,   3.,   7.],\n",
       "        [  1.,   1.,   4., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,  14., ..., 102.,  44.,  11.],\n",
       "        ...,\n",
       "        [ 40., 118.,  35., ...,   1.,   0.,   1.],\n",
       "        [ 21.,  17.,   2., ...,   0.,   0.,   0.],\n",
       "        [  1.,  61., 124., ...,   3.,  79.,  25.]], dtype=float32),\n",
       " array([[10.,  6.,  1., ..., 13.,  1.,  1.],\n",
       "        [ 1.,  3., 16., ...,  3., 35., 78.],\n",
       "        [ 2.,  4., 11., ...,  0.,  0., 11.],\n",
       "        ...,\n",
       "        [ 1.,  1.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  1.,  0., ...,  3.,  6.,  4.],\n",
       "        [ 6., 12., 56., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[121.,  15.,  12., ...,   0.,   0.,   0.],\n",
       "        [  1.,   1.,   1., ...,  15.,  16.,   2.],\n",
       "        [ 23.,  38., 128., ...,  11.,   0.,  24.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  29.,   7.,  11.],\n",
       "        [ 11.,  14.,   6., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  19.,   1.,   0.]], dtype=float32),\n",
       " array([[50., 37., 48., ..., 46.,  3.,  1.],\n",
       "        [11., 13.,  1., ...,  1.,  0.,  0.],\n",
       "        [ 7., 10.,  6., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 20., 33., 48.],\n",
       "        [29.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  6.]], dtype=float32),\n",
       " array([[ 0.,  0.,  2., ..., 13.,  1.,  6.],\n",
       "        [36., 29., 72., ...,  0.,  0.,  0.],\n",
       "        [26., 20.,  5., ...,  5.,  0.,  1.],\n",
       "        ...,\n",
       "        [45., 94.,  5., ...,  0.,  0.,  0.],\n",
       "        [16., 45., 13., ...,  5.,  3., 20.],\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  9.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  12.,   8.,  49.],\n",
       "        [ 68.,  32.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 46.,  15.,   9., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   1.,  56., ...,  22.,  35.,  48.],\n",
       "        [ 26.,   1.,   0., ..., 102.,  79.,   0.],\n",
       "        [  0.,   0.,   1., ...,   0.,  16.,  62.]], dtype=float32),\n",
       " array([[50., 17.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 29., 67.,  0.],\n",
       "        [14.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [76.,  4.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  0.,  0., ...,  0., 13., 86.],\n",
       "        [ 1.,  4., 13., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0., 40., ...,  0.,  2., 80.],\n",
       "        [ 0.,  0.,  0., ..., 12.,  4., 31.],\n",
       "        [10., 20., 25., ...,  0.,  0., 16.],\n",
       "        ...,\n",
       "        [82., 13.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [40., 25.,  0., ..., 14.,  1.,  1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  0.,  0., ..., 56., 16.,  7.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  3., ..., 12., 37., 10.],\n",
       "        [55.,  6.,  0., ...,  0.,  0.,  0.],\n",
       "        [15.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  3.,  14.,   3., ...,  46.,   0.,   0.],\n",
       "        [ 98., 124.,  51., ...,   0.,   8.,  51.],\n",
       "        [  0.,   0.,   0., ...,   0.,  59., 109.],\n",
       "        ...,\n",
       "        [ 66.,  15.,  45., ...,   0.,   0.,   1.],\n",
       "        [  6.,  15.,  35., ...,   0.,   0.,   0.],\n",
       "        [  8.,   1.,   0., ...,   1.,   1.,   0.]], dtype=float32),\n",
       " array([[ 4.,  0.,  0., ...,  9.,  2.,  4.],\n",
       "        [ 0.,  0.,  0., ..., 25.,  3., 23.],\n",
       "        [ 3.,  3.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  0.,  0., ...,  2.,  0.,  0.],\n",
       "        [ 5.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 56., 139.,  28., ...,   0.,   0.,   0.],\n",
       "        [  7.,   1.,   3., ...,   0.,   7.,  47.],\n",
       "        [ 48.,  22.,  33., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   1.,  11., ...,   0.,   0.,   4.],\n",
       "        [ 60.,  81.,  31., ...,   0.,   0.,   0.],\n",
       "        [121.,  75.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[144.,   3.,   0., ...,   0.,   3.,   1.],\n",
       "        [ 23.,  27.,   1., ...,   0.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [  7.,   1.,   0., ...,  72.,  14.,   6.],\n",
       "        [ 77.,  62.,  14., ...,   1.,   0.,   0.],\n",
       "        [103.,  72.,  13., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 43.,  79.,  11., ...,   0.,  11.,  94.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  55.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [130.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 15.,   9.,   1., ...,   0.,   0.,   0.],\n",
       "        [  2.,  55., 154., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[109.,  43.,  30., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  63.,  31.,   2.],\n",
       "        [  4.,   0.,   3., ...,   4.,   2.,  31.],\n",
       "        ...,\n",
       "        [ 21.,   0.,   0., ...,  19.,  16.,   6.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   6.,  72.]], dtype=float32),\n",
       " array([[ 5.,  2., 17., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 10., 22., 15.],\n",
       "        [ 0.,  0.,  0., ...,  4., 42., 49.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  2., 43., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.]], dtype=float32),\n",
       " array([[ 8., 31., 10., ...,  1.,  4.,  5.],\n",
       "        [ 3.,  0.,  0., ..., 16., 28.,  2.],\n",
       "        [ 3.,  1.,  2., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 7., 28., 22., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  0.,  0.],\n",
       "        [36., 11.,  0., ...,  0.,  0.,  4.]], dtype=float32),\n",
       " array([[ 3.,  0., 16., ...,  0.,  0.,  0.],\n",
       "        [78., 37.,  0., ..., 12.,  4.,  6.],\n",
       "        [90., 31.,  9., ..., 17., 37., 76.],\n",
       "        ...,\n",
       "        [14., 13.,  2., ...,  0.,  0.,  0.],\n",
       "        [37.,  1.,  2., ...,  0.,  1.,  4.],\n",
       "        [10.,  0.,  1., ...,  0.,  0.,  1.]], dtype=float32),\n",
       " array([[ 57.,  94.,  27., ...,   0.,   6.,   7.],\n",
       "        [  2.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 71.,   8.,   0., ...,   1.,   1.,   1.],\n",
       "        ...,\n",
       "        [ 60.,  68.,  29., ...,   0.,   0.,  13.],\n",
       "        [  0.,   0.,   0., ...,  28., 117.,   1.],\n",
       "        [  0.,   0.,   0., ...,   5.,  10.,  10.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 20.,  33., 179., ...,   1.,   1.,   0.],\n",
       "        [ 16.,  11.,  29., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 30.,   5.,   0., ...,  13.,  21.,   6.],\n",
       "        [ 45.,   0.,   0., ...,  49.,  44.,  44.],\n",
       "        [ 19.,   3.,   0., ...,  17.,   9.,  12.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [12.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [34., 14.,  5., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  1.,  4.],\n",
       "        [ 3.,  1.,  0., ..., 95., 78.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  4., 41.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  4., 30.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  6., 31.],\n",
       "        [ 5., 23., 63., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 2.,  1.,  3., ...,  0.,  0.,  1.],\n",
       "        [93.,  9.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  7., 22., ..., 12.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  2.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 2., 10., 83., ...,  0.,  0.,  0.],\n",
       "        [57., 46.,  0., ...,  1.,  5., 26.],\n",
       "        ...,\n",
       "        [ 7.,  7.,  1., ...,  0.,  0.,  1.],\n",
       "        [87., 20.,  4., ...,  0.,  0.,  0.],\n",
       "        [74.,  3.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 34.,  60., 134., ...,   4.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   6.,   5.],\n",
       "        [ 18.,  13.,   0., ...,  14.,  30.,   4.],\n",
       "        ...,\n",
       "        [  4.,   2.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 61.,   2.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  9., 108., 146., ...,   0.,   5.,   2.],\n",
       "        [ 14.,  15.,   9., ...,   2.,   2.,   2.],\n",
       "        [ 10.,   2.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 15.,  24.,  11., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  22.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   0.,   1.,   3.],\n",
       "        [  9.,  25.,  13., ...,   0.,   0.,   0.],\n",
       "        [  2.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 20.,  87.,  25., ...,   0.,   0.,   0.],\n",
       "        [106.,  67.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 83.,  45.,  15., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  6.,   6.,  59., ...,   0.,   0.,   3.],\n",
       "        [  1.,   7.,   7., ...,   5.,   0.,   5.],\n",
       "        [  3.,   1.,   0., ...,   0.,   0.,  12.],\n",
       "        ...,\n",
       "        [  2.,   5., 127., ...,  23.,   1.,   0.],\n",
       "        [  2.,  65., 146., ...,  16.,   8.,  15.],\n",
       "        [ 35., 131.,  61., ...,  39.,  11.,   0.]], dtype=float32),\n",
       " array([[12.,  4.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 9.,  3.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0., 27., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [60., 26.,  8., ...,  0.,  2.,  0.],\n",
       "        [65., 11.,  3., ...,  0.,  1.,  1.]], dtype=float32),\n",
       " array([[104.,   4.,   0., ...,   1.,   3.,  30.],\n",
       "        [  0.,   0.,   0., ...,  40.,  10.,   9.],\n",
       "        [  0.,   1.,   2., ..., 101.,  38.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   4.,   6.,  17.],\n",
       "        [  0.,   0.,   0., ...,   0., 119., 119.],\n",
       "        [  2.,   6.,  48., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 97., 25.,  4.],\n",
       "        [ 3.,  0.,  0., ..., 24.,  1.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 86., 15.,  4.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 12., 23., 23.],\n",
       "        [48., 10., 18., ...,  0.,  0.,  0.],\n",
       "        [ 4., 22., 65., ..., 24.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  5.,   4.,   3., ...,   0.,   0.,   0.],\n",
       "        [ 19.,  11.,   5., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  8.,   7.,  12., ...,   0.,   0.,   0.],\n",
       "        [ 34.,  16.,   0., ...,  41.,   2.,   4.],\n",
       "        [ 71., 117.,  15., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  6.,   6., 140., ...,   5.,   0.,   0.],\n",
       "        [  3., 129.,  71., ...,  64.,  18.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   5., 125.],\n",
       "        ...,\n",
       "        [  1.,  64., 133., ...,   0.,   0.,   0.],\n",
       "        [  2.,   1.,   1., ...,  36., 154.,  70.],\n",
       "        [  2.,   9., 148., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 2.,  9., 12., ...,  0.,  1.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 48., 46., 56.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  7., 48.],\n",
       "        ...,\n",
       "        [58., 16.,  0., ..., 14., 40.,  3.],\n",
       "        [ 2.,  0.,  0., ...,  5.,  2.,  3.],\n",
       "        [ 5.,  1.,  0., ...,  7.,  0.,  1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  4., ...,  1.,  1.,  7.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  3.,  8.],\n",
       "        [ 1.,  6., 69., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [15., 12.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1.,  5., ..., 19.,  0.,  0.],\n",
       "        [ 5., 34.,  8., ...,  0.,  0.,  2.]], dtype=float32),\n",
       " array([[ 88.,  11.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 31., 137.,  34., ...,   3.,  10.,   8.],\n",
       "        [ 32.,   6.,   8., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   1.,   5., ...,   0.,   0.,   1.],\n",
       "        [  5.,   1.,   0., ...,   0.,   0.,   1.],\n",
       "        [  2.,   3.,   1., ...,   4.,   4.,   9.]], dtype=float32),\n",
       " array([[ 26.,  69.,  76., ...,   0.,   0.,   0.],\n",
       "        [ 50.,   5.,  22., ...,   0.,   0.,   0.],\n",
       "        [  0.,  85., 111., ...,   0.,   0.,  10.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   5.],\n",
       "        [  0.,   0.,   0., ...,  28.,   0.,   0.],\n",
       "        [  2.,   0.,   0., ...,   6.,   3.,  18.]], dtype=float32),\n",
       " array([[ 0.,  2., 14., ..., 14., 88., 26.],\n",
       "        [ 0.,  0.,  5., ...,  0.,  0.,  5.],\n",
       "        [ 2.,  0.,  0., ...,  3., 19.,  2.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  8.,  3., 10.],\n",
       "        [56.,  9., 14., ...,  0.,  0.,  0.],\n",
       "        [31.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,  16., ...,   0.,   0.,   0.],\n",
       "        [  1.,  42., 136., ...,   0.,   0.,   9.],\n",
       "        [  0.,  27., 119., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 13.,  96., 132., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,  11.,  94.],\n",
       "        [  0.,   0.,   0., ...,   2., 101., 139.],\n",
       "        [  6.,  10.,  64., ...,   8.,   0.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   6., ...,  59.,  29., 161.],\n",
       "        [ 39.,  12.,  18., ...,   0.,   0.,   0.],\n",
       "        [  2.,   6.,  76., ...,   6.,  78.,  19.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  7.],\n",
       "        [ 0.,  0.,  4., ...,  0.,  1.,  3.],\n",
       "        [39.,  2.,  2., ..., 13.,  1.,  2.],\n",
       "        ...,\n",
       "        [ 9.,  4.,  2., ...,  0.,  1.,  0.],\n",
       "        [12.,  7.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 5.,  1.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[109.,  24.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,  20., ...,   0.,   0.,   0.],\n",
       "        [147.,  85.,   4., ...,   0.,   3.,   2.],\n",
       "        ...,\n",
       "        [  1.,   0.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 79.,  53.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   8.,   0.,   2.]], dtype=float32),\n",
       " array([[ 51.,  64.,  14., ...,   0.,   0.,   0.],\n",
       "        [ 16.,  25.,  47., ...,   0.,   0.,   0.],\n",
       "        [ 88., 150.,  14., ...,   2.,  13.,  11.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  10.,   4.,   2.],\n",
       "        [  0.,   0.,   2., ...,  22.,  22.,  13.],\n",
       "        [ 23.,  17.,   7., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  9.,  12.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   8.,   2.,   3.],\n",
       "        [  0.,   0.,   0., ...,  14.,  30.,  51.],\n",
       "        ...,\n",
       "        [117., 139.,  13., ...,   0.,   0.,   0.],\n",
       "        [ 92.,  30.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,  12.,  27.]], dtype=float32),\n",
       " array([[89., 73.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [30., 48.,  1., ...,  0., 14., 25.],\n",
       "        ...,\n",
       "        [12., 22.,  2., ...,  4.,  9.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 30.,   1.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   4.],\n",
       "        [ 40., 138.,  81., ...,   1.,  54.,  82.],\n",
       "        ...,\n",
       "        [  4.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 13., 121.,  64., ...,   0.,   0.,   0.],\n",
       "        [  0.,   5., 125., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   1., ...,  10.,   0.,   0.],\n",
       "        [  0.,  90., 126., ...,   3.,  46.,  83.],\n",
       "        [  7.,   9.,   0., ...,  35.,  76.,   9.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   6.,   3.,   2.],\n",
       "        [ 30.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  2.,   0.,   0., ...,   0.,  42.,  87.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  42.,   0.,   2.],\n",
       "        [  2.,  61., 114., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   1.],\n",
       "        ...,\n",
       "        [126.,  16.,   6., ...,   0.,   0.,   4.],\n",
       "        [ 69.,  63.,  80., ...,   0.,   0.,   0.],\n",
       "        [  4.,   4.,   6., ...,   1.,   1.,   8.]], dtype=float32),\n",
       " array([[ 11.,   4.,  29., ...,   0.,   0.,   0.],\n",
       "        [ 54., 116., 103., ...,   1.,   1.,   0.],\n",
       "        [  4.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [  5.,   8.,   2., ...,   0.,   0.,   1.],\n",
       "        [ 40.,   8.,   5., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   7.,   7.]], dtype=float32),\n",
       " array([[ 5.,  6., 10., ...,  0.,  0.,  0.],\n",
       "        [ 4.,  3., 10., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1.,  0., ...,  7., 12., 20.],\n",
       "        ...,\n",
       "        [39., 73., 12., ...,  0.,  0., 29.],\n",
       "        [ 0.,  0.,  0., ..., 40.,  5.,  4.],\n",
       "        [12., 54., 69., ...,  6.,  1.,  2.]], dtype=float32),\n",
       " array([[  7.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 16.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 155.,  36.,   2.],\n",
       "        ...,\n",
       "        [ 57.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  17.,   2.,   0.],\n",
       "        [  3.,  20.,  37., ...,   0.,   3.,   2.]], dtype=float32),\n",
       " array([[ 2.,  4.,  7., ...,  5.,  5., 28.],\n",
       "        [10.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  5., 33.,  2.],\n",
       "        ...,\n",
       "        [ 0.,  1.,  0., ...,  0.,  3.,  2.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [33.,  9.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 7., 27., 62., ...,  0.,  2.,  3.],\n",
       "        [ 7.,  6.,  1., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 4.,  6.,  0., ...,  0.,  0.,  0.],\n",
       "        [60.,  0.,  0., ...,  0.,  0.,  5.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  61.,  20.,   1.],\n",
       "        [  0.,   0.,   0., ...,  12.,   8.,   2.],\n",
       "        [  3.,   1.,   0., ...,   7.,  19.,   7.],\n",
       "        ...,\n",
       "        [132.,  32.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 14.,   0.,   0., ...,   3.,   1.,   6.],\n",
       "        [ 20.,   2.,   0., ...,   1.,   0.,  10.]], dtype=float32),\n",
       " array([[  4.,  31.,  69., ...,   0.,   0.,   0.],\n",
       "        [  5.,  43., 134., ...,   0.,   0.,   0.],\n",
       "        [  1., 162.,  74., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  8.,   3.,   0., ...,  44.,  69.,  44.],\n",
       "        [ 33.,   3.,   6., ...,   1.,   0.,   0.],\n",
       "        [ 20.,  26.,  54., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 43.,  40., 103., ...,   2.,  14.,  21.],\n",
       "        [  0.,   0.,   0., ...,  67.,  48.,   5.],\n",
       "        [ 82.,  84.,  68., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 19.,  42.,  27., ...,   2.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  20.,   3.,   2.],\n",
       "        [ 79.,  21.,   6., ...,   2.,   0.,   1.]], dtype=float32),\n",
       " array([[  4.,  22.,  70., ...,  15.,   3.,   0.],\n",
       "        [ 11.,  35.,   5., ...,   0.,   0.,   1.],\n",
       "        [ 24.,  15.,   9., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 25.,   2.,   8., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7.,   0.,   0.],\n",
       "        [  8., 130., 121., ...,   0.,   2.,   1.]], dtype=float32),\n",
       " array([[  4.,  23.,  91., ..., 126.,  16.,   6.],\n",
       "        [  4.,  19.,  32., ...,   0.,   0.,   0.],\n",
       "        [ 25.,  11.,   2., ...,   1.,   9.,  12.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  16.,   5.,  20.],\n",
       "        [  0.,   0.,   0., ...,  28.,  18.,  11.],\n",
       "        [ 27.,   9.,  18., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 33.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0., 163., ...,   0.,   0.,   0.],\n",
       "        [ 67.,  90.,  59., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 28.,   5.,   0., ...,   0.,   0.,   0.],\n",
       "        [  7.,   5.,   1., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   3.,   1.,   2.]], dtype=float32),\n",
       " array([[ 70.,  22.,   4., ...,   0.,   8.,  10.],\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 75.,   8.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  3.,  22., 102., ...,   0.,   0.,   7.],\n",
       "        [ 64.,  54.,  57., ...,   0.,   0.,   4.],\n",
       "        [  0.,   0.,   0., ...,   2.,   1.,   3.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  1.,  0., 10.],\n",
       "        [77., 50.,  8., ...,  0.,  0.,  1.],\n",
       "        [31., 43.,  7., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [47.,  7.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  1., ...,  9.,  9., 54.],\n",
       "        [ 0.,  2.,  3., ...,  3.,  6.,  4.],\n",
       "        ...,\n",
       "        [13.,  7.,  1., ...,  3.,  2.,  3.],\n",
       "        [ 9., 11.,  0., ...,  3.,  2.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  0.,  2.]], dtype=float32),\n",
       " array([[  7.,   1.,   0., ...,   0.,   0.,   6.],\n",
       "        [  0.,   0.,   0., ...,   0.,  28.,  26.],\n",
       "        [  0.,   0.,   0., ...,  15.,   6.,   0.],\n",
       "        ...,\n",
       "        [ 87.,  91.,   1., ...,   5.,   2.,   0.],\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   4.,  53., 113.]], dtype=float32),\n",
       " array([[  0.,  28., 142., ...,   1.,   7.,  22.],\n",
       "        [ 67., 132., 132., ...,   0.,   0.,   0.],\n",
       "        [ 54.,  15.,   0., ...,   0.,  64., 127.],\n",
       "        ...,\n",
       "        [ 44.,  43.,  18., ...,   0.,   0.,   0.],\n",
       "        [133., 133.,  10., ...,   0.,   0.,   0.],\n",
       "        [ 13.,   0.,   0., ...,   9.,   0.,   1.]], dtype=float32),\n",
       " array([[ 21.,  31.,  20., ...,   0.,   0.,   0.],\n",
       "        [157.,   4.,   6., ...,   0.,   0.,   0.],\n",
       "        [ 14.,  57., 128., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 35.,  16.,   9., ...,   0.,   0.,   1.],\n",
       "        [  2.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [154.,  91.,  82., ...,   0.,   0.,   2.]], dtype=float32),\n",
       " array([[  4.,   0.,   0., ...,   0.,   2.,   8.],\n",
       "        [  0.,   0.,   4., ...,   1.,   1.,  10.],\n",
       "        [  1.,   0.,   0., ...,   2.,   1.,  10.],\n",
       "        ...,\n",
       "        [ 11.,   4.,   1., ...,   1.,   0.,   0.],\n",
       "        [  1.,  59., 109., ...,   1.,   0.,   3.],\n",
       "        [  5.,  26.,   7., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,   6.,  69., ...,   8.,   0.,   0.],\n",
       "        [ 21.,  45.,  22., ...,   7.,  11.,  74.],\n",
       "        [ 16.,  37.,  77., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 27., 106.,  44., ...,   0.,   0.,   0.],\n",
       "        [ 52.,  14.,   0., ...,   2.,   2.,   2.],\n",
       "        [  1.,   2.,  10., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  3.,  36.,   7., ...,  33.,  12.,   0.],\n",
       "        [  1.,   2.,  44., ...,   0.,   0.,   0.],\n",
       "        [ 12.,   3.,  23., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  3.,   4.,   0., ...,   9.,  15.,   6.],\n",
       "        [  4.,   1.,   0., ...,   2.,  15.,   1.],\n",
       "        [  0.,  52., 137., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 42.,  12.,  48., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.],\n",
       "        [ 92.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 56.,   8.,   1., ...,   0.,   0.,   0.],\n",
       "        [112., 113.,  25., ...,   0.,   0.,   0.],\n",
       "        [ 16., 131.,  40., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  4.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   6.,   5.,   0.],\n",
       "        [  0.,   0.,   0., ...,  11.,   1.,   0.],\n",
       "        ...,\n",
       "        [ 40.,  15.,  12., ...,   0.,   0.,   0.],\n",
       "        [174.,  12.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   3.]], dtype=float32),\n",
       " array([[ 96.,  46.,   5., ...,   0.,   0.,   3.],\n",
       "        [  0.,  11.,  29., ...,   0.,   0.,   0.],\n",
       "        [ 19.,   2.,   0., ...,   0.,   0.,   3.],\n",
       "        ...,\n",
       "        [  0.,   3.,   8., ...,  19.,  21.,   1.],\n",
       "        [158.,  12.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 15.,   0.,   0., ...,   1.,   9.,   8.]], dtype=float32),\n",
       " array([[ 4.,  3.,  3., ...,  2.,  0.,  0.],\n",
       "        [39., 15.,  7., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  7.],\n",
       "        ...,\n",
       "        [47.,  8.,  1., ...,  1.,  0.,  0.],\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  1.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[33.,  8.,  1., ...,  8.,  8.,  2.],\n",
       "        [ 2.,  6., 14., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  1.,  3.],\n",
       "        ...,\n",
       "        [ 8., 25., 30., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  4.,  9., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  2., 12., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 21.,  50.,  54., ...,   0.,   0.,   0.],\n",
       "        [ 38., 105.,  48., ...,   0.,   3.,  42.],\n",
       "        [  6.,   0.,   0., ...,  12.,   5.,   7.],\n",
       "        ...,\n",
       "        [  3.,  18.,   1., ...,   0.,   2.,  45.],\n",
       "        [ 12., 174.,  75., ...,   0.,   0.,  11.],\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   3.]], dtype=float32),\n",
       " array([[ 0.,  0.,  1., ..., 34., 46.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  4.],\n",
       "        [ 0.,  1.,  0., ...,  0.,  0.,  5.],\n",
       "        ...,\n",
       "        [ 1.,  2., 25., ...,  0.,  0., 11.],\n",
       "        [13.,  3.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0., 70., 77., ..., 15.,  2.,  0.]], dtype=float32),\n",
       " array([[145.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  51.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 11.,  93., 152., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,  15., 133., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,  27.,  89., ...,   0.,   0.,   0.],\n",
       "        [  1.,   9., 132., ...,   0.,   1.,   9.],\n",
       "        [ 34.,   9.,  34., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,   3.,   0.,   6.],\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   3.]], dtype=float32),\n",
       " array([[  0.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  14.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0., 132.,  34.],\n",
       "        ...,\n",
       "        [  2.,   6.,  35., ...,   1.,   1.,   1.],\n",
       "        [ 46., 116., 141., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   5.]], dtype=float32),\n",
       " array([[20., 15., 46., ...,  0.,  1.,  4.],\n",
       "        [ 0.,  2., 55., ...,  9., 87., 48.],\n",
       "        [10., 13., 11., ...,  1.,  2., 14.],\n",
       "        ...,\n",
       "        [10.,  3.,  0., ...,  1.,  1., 16.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  1., 29.]], dtype=float32),\n",
       " array([[  1.,   4.,   3., ...,   0.,   0.,   0.],\n",
       "        [148.,  32.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 12.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   2.,   3.],\n",
       "        [ 70., 124.,   4., ...,  15.,  33.,   2.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   3.,   2.,  11.],\n",
       "        [  0.,   0.,   0., ...,  14.,   0.,   0.],\n",
       "        [  6.,   0.,   0., ...,   0.,   1.,   1.],\n",
       "        ...,\n",
       "        [  4.,  17.,  32., ...,  10.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   9.,   3.,  25.],\n",
       "        [158.,  77.,  46., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 6.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0., 33., 85., ...,  1.,  0.,  4.],\n",
       "        [ 2.,  2.,  5., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   4.,   1.,   6.],\n",
       "        [ 20., 166.,  14., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   4.,   2., ...,  68.,   0.,   0.],\n",
       "        [  0.,   0.,   1., ...,   3.,   3.,   4.],\n",
       "        [  0.,   0.,   0., ...,   2.,   2.,   6.]], dtype=float32),\n",
       " array([[  8.,  71., 113., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  23.,  41.,  66.],\n",
       "        [  1.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   5.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0., 151.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        [ 41.,  72., 123., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   4., ...,   2.,  10.,  50.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   3.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   8.,  10.,   0.],\n",
       "        [  1.,   5.,   4., ...,  34.,   1.,  16.]], dtype=float32),\n",
       " array([[ 26., 123.,  27., ...,   0.,   0.,   6.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   6.],\n",
       "        [ 17.,   4.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  2.,   1.,   1., ...,   0.,   0.,  10.],\n",
       "        [  0.,   0.,   2., ...,   1.,   0.,   2.],\n",
       "        [  0.,   0.,   1., ...,  12.,   2.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1.,   4.,  50.],\n",
       "        [ 17.,   3.,  16., ...,   0.,   0.,   0.],\n",
       "        [ 22.,  15.,  30., ...,   0.,   0.,   6.],\n",
       "        ...,\n",
       "        [ 37.,  13.,   4., ...,   9.,   6.,  15.],\n",
       "        [ 37.,  19.,   5., ...,   3.,   1.,   1.],\n",
       "        [107., 121.,   4., ...,   2.,   1.,  11.]], dtype=float32),\n",
       " array([[ 73.,  91.,  24., ...,   4.,   0.,   0.],\n",
       "        [ 59., 123.,  14., ...,   0.,   0.,   0.],\n",
       "        [  8.,   9.,   7., ...,   4.,  16.,  15.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   4.,  14.,  13.],\n",
       "        [ 40.,  51., 123., ...,   0.,   0.,   0.],\n",
       "        [ 15.,   0.,   1., ...,  25.,   0.,   0.]], dtype=float32),\n",
       " array([[  3.,  19., 139., ...,   0.,   0.,   0.],\n",
       "        [  1.,  30., 129., ...,   0.,   0.,   0.],\n",
       "        [ 21.,  23., 147., ...,  28.,  65.,  14.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ..., 134.,  12.,  13.],\n",
       "        [ 10.,  15., 124., ...,  28.,  44.,  47.],\n",
       "        [ 14., 133.,  24., ...,   0.,   0.,  38.]], dtype=float32),\n",
       " array([[ 16.,  31.,  56., ...,   7.,  54.,   5.],\n",
       "        [103.,  13.,   1., ...,  39.,   6.,   0.],\n",
       "        [ 48.,  26.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 74.,  23.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[ 3.,  0.,  0., ...,  0.,  1., 22.],\n",
       "        [76., 69., 20., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  2., 19., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [13., 18.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  3., 24.],\n",
       "        [18., 28., 31., ...,  6.,  0.,  0.]], dtype=float32),\n",
       " array([[ 23.,  13.,  14., ...,  34., 128.,  49.],\n",
       "        [  3.,  17.,   7., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  11.,   3.,  19.],\n",
       "        ...,\n",
       "        [ 18.,  22.,  20., ...,   0.,   1.,   3.],\n",
       "        [134.,  27.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   6.,   7., ...,   7.,   0.,   0.]], dtype=float32),\n",
       " array([[ 1.,  3., 13., ..., 68.,  8.,  3.],\n",
       "        [58., 96., 59., ..., 16., 58.,  9.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  6.,  4.],\n",
       "        ...,\n",
       "        [ 4.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [19.,  0.,  0., ..., 12.,  3.,  1.],\n",
       "        [ 0.,  1.,  4., ...,  9., 61., 19.]], dtype=float32),\n",
       " array([[  3.,   4.,  40., ...,   2.,   0.,   0.],\n",
       "        [  4.,   2.,   1., ...,  11.,  84.,  17.],\n",
       "        [ 19.,   6.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  7.,  15.,   7., ...,   8.,  36.,  11.],\n",
       "        [127.,  96.,   8., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,  13.,   7.]], dtype=float32),\n",
       " array([[ 12.,  44.,  44., ...,   0.,   0.,   0.],\n",
       "        [  2.,   1.,   0., ...,  92.,  30.,  19.],\n",
       "        [  3.,   2.,  31., ...,   8.,  12.,  21.],\n",
       "        ...,\n",
       "        [  1.,  26.,  48., ...,   0.,   0.,   0.],\n",
       "        [  8.,   0.,   0., ...,  13.,  21.,  18.],\n",
       "        [  0.,   0.,   0., ..., 133.,  21.,  33.]], dtype=float32),\n",
       " array([[  7.,   1.,   5., ...,   0.,   0.,   0.],\n",
       "        [  4.,   4.,   0., ...,   9.,   1.,   2.],\n",
       "        [  5.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 56.,  25.,  10., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0., 125., 108., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 7.,  0.,  0., ...,  5., 20., 19.],\n",
       "        [ 0.,  0.,  0., ..., 83., 36., 30.],\n",
       "        [ 1.,  8., 71., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 37., 23.,  2.],\n",
       "        [38.,  5.,  5., ...,  0.,  1.,  3.],\n",
       "        [ 0.,  0.,  0., ..., 30., 13.,  8.]], dtype=float32),\n",
       " array([[  3.,  91.,  66., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,  38.,  14.,  16.],\n",
       "        [115., 117.,  11., ...,   0.,   3.,  34.],\n",
       "        ...,\n",
       "        [ 57.,  24.,  24., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   3., ...,  18.,   2.,   4.],\n",
       "        [118., 105.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 1.,  3.,  5., ..., 23.,  5., 36.],\n",
       "        [17., 11.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  7., 70., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [22., 44., 96., ..., 60.,  7., 25.],\n",
       "        [ 0.,  1.,  8., ...,  0.,  0.,  0.],\n",
       "        [ 8.,  3.,  0., ...,  7.,  6., 11.]], dtype=float32),\n",
       " array([[32.,  9., 10., ..., 67., 71.,  8.],\n",
       "        [26., 45., 10., ...,  5., 36., 53.],\n",
       "        [43., 76., 62., ...,  5., 19., 29.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  5., ...,  8.,  2.,  3.],\n",
       "        [29., 11.,  3., ...,  0., 15., 67.],\n",
       "        [37., 86., 46., ...,  8.,  4., 31.]], dtype=float32),\n",
       " array([[ 15.,  21.,  12., ...,  10.,   5.,   0.],\n",
       "        [ 37.,  39.,   2., ...,  16.,   4.,   4.],\n",
       "        [  4.,   3.,   1., ...,  29.,   1.,   4.],\n",
       "        ...,\n",
       "        [ 23.,  88.,  19., ...,   3.,   7., 113.],\n",
       "        [ 26.,   6.,   1., ...,   2.,  20.,  57.],\n",
       "        [  0.,   0.,   2., ...,  71.,   9.,   1.]], dtype=float32),\n",
       " array([[ 12., 127.,  76., ...,   0.,   0.,   3.],\n",
       "        [  3.,   0.,   0., ...,  12.,  40.,  18.],\n",
       "        [ 88.,   9.,   5., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 12.,  15., 125., ...,   0.,   0.,   0.],\n",
       "        [136.,   8.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 48.,  28.,  16., ...,   0.,   4.,  26.]], dtype=float32),\n",
       " array([[  5.,   2.,   3., ...,   7.,  17.,  31.],\n",
       "        [131.,  59.,   6., ...,   5.,  62.,   8.],\n",
       "        [  0.,   0.,   0., ...,  62.,  20.,   6.],\n",
       "        ...,\n",
       "        [ 19.,  19.,  21., ...,   3.,   0.,   0.],\n",
       "        [ 99., 128.,  44., ...,   0.,   6.,  33.],\n",
       "        [ 31., 135.,  45., ...,   0.,   1.,   0.]], dtype=float32),\n",
       " array([[ 36., 117.,  55., ...,  58.,  28.,  10.],\n",
       "        [ 18.,  25.,  66., ...,   0.,   0.,   0.],\n",
       "        [ 16.,  38.,  15., ...,   5.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   1.,   1., ...,   0.,   1.,   8.],\n",
       "        [ 14.,  86., 104., ...,   2.,  10.,  17.],\n",
       "        [ 19.,  37.,  34., ...,  17.,   1.,   0.]], dtype=float32),\n",
       " array([[ 44.,  20.,  25., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,  19.,  59.],\n",
       "        [ 14.,  18.,   3., ...,   2.,   2.,   9.],\n",
       "        ...,\n",
       "        [ 56.,   8.,   8., ...,  48.,  21.,  20.],\n",
       "        [  0.,   0.,   0., ...,  21.,  43., 128.],\n",
       "        [  5.,  11.,  79., ...,   1.,   3.,  28.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  17.,  40.,  39.],\n",
       "        [  0.,   0.,   8., ...,  24.,   6.,  39.],\n",
       "        [  2.,   0.,  14., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 80.,  18.,   0., ...,   6.,   3.,  12.],\n",
       "        [  3.,   7.,  59., ...,   0.,   0.,   0.],\n",
       "        [  2.,  39., 125., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  82.,   7.,  15.],\n",
       "        [  0.,   0.,   0., ...,  26.,  23.,  17.],\n",
       "        [  2.,   8.,  75., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  14.,   3.,  22.],\n",
       "        [  0.,   1.,   1., ...,   5.,   8.,  10.],\n",
       "        [ 18., 121.,  46., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 10.,  15.,   1., ...,  16.,  36.,  88.],\n",
       "        [  0.,   0.,   0., ...,  32.,  47.,  23.],\n",
       "        [  0.,   0.,   0., ..., 116.,  24.,  27.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  66., 145.,  21.],\n",
       "        [ 30.,   8.,   1., ...,   7.,   2.,   8.],\n",
       "        [ 25., 138.,  14., ...,   1.,   0.,   4.]], dtype=float32),\n",
       " array([[ 24., 122.,  99., ...,   0.,   0.,   0.],\n",
       "        [  8.,  54.,  68., ...,   1.,   4.,   2.],\n",
       "        [  0.,   0.,  11., ...,  13.,  30.,  17.],\n",
       "        ...,\n",
       "        [ 44.,  21.,   6., ...,   0.,   0.,   0.],\n",
       "        [ 80.,  20.,   6., ...,   0.,   3.,  19.],\n",
       "        [ 33.,  24.,   9., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 3.,  2.,  4., ...,  0.,  0.,  0.],\n",
       "        [99., 16.,  8., ..., 88., 57., 16.],\n",
       "        [27.,  5.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [10.,  2.,  1., ...,  4.,  1.,  1.],\n",
       "        [ 6., 10., 46., ...,  0.,  0.,  8.],\n",
       "        [55., 28.,  5., ...,  6., 18., 33.]], dtype=float32),\n",
       " array([[  0.,   0.,  10., ..., 117.,  49.,  10.],\n",
       "        [  4.,  32., 129., ...,   7.,   3.,  14.],\n",
       "        [  5.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,  22.,  45.,  39.],\n",
       "        [  1.,   0.,  19., ...,   0.,   0.,   0.],\n",
       "        [  5.,   4.,   1., ...,   7.,   2.,   3.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  40.,   0.,   2.],\n",
       "        [ 29.,  35.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,  51.,   1.,   0.],\n",
       "        ...,\n",
       "        [ 24.,  74., 102., ...,   0.,   0.,   0.],\n",
       "        [ 17.,  85.,  51., ...,   0.,   0.,   0.],\n",
       "        [ 87.,  30.,  24., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 14.,   0.,   0., ...,  71.,  47.,   5.],\n",
       "        [  4.,   1.,   0., ...,   0.,   1.,   4.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 70.,  59.,  25., ...,   5.,   0.,   0.],\n",
       "        [ 19.,   2.,  26., ...,   0.,   0.,   0.],\n",
       "        [125., 125.,   5., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[22.,  0.,  1., ..., 23., 68., 25.],\n",
       "        [ 1.,  0.,  0., ..., 54., 35.,  1.],\n",
       "        [43., 65., 70., ...,  7.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  6.,  8., ...,  1.,  0.,  0.],\n",
       "        [ 2.,  4.,  0., ..., 55., 14., 21.],\n",
       "        [ 0.,  0.,  1., ...,  8., 36., 39.]], dtype=float32),\n",
       " array([[ 31.,  33.,  58., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,   6.,  13.],\n",
       "        [ 13.,  59., 109., ...,   7.,   3.,   6.],\n",
       "        ...,\n",
       "        [ 13.,  29.,  23., ...,   0.,   0.,   0.],\n",
       "        [ 17.,  56.,  53., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  31.,   8.,  11.]], dtype=float32),\n",
       " array([[  0.,   0.,   5., ...,   5.,   4.,  10.],\n",
       "        [ 11.,  23., 107., ...,   0.,   0.,   0.],\n",
       "        [121.,   5.,   1., ..., 110.,   6.,   3.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   8.,  88., 120.],\n",
       "        [  6.,   6.,  99., ...,   0.,   0.,   0.],\n",
       "        [ 13.,  26., 118., ...,   0.,   1.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 33.,  4.,  4.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  1., 14.],\n",
       "        [49., 15., 61., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 3.,  4., 25., ...,  7., 11., 21.],\n",
       "        [ 1.,  2., 10., ...,  2.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 33.,  2.,  4.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  10.,   2.,  63.],\n",
       "        [  0.,   0.,   0., ...,   7.,   9.,  10.],\n",
       "        [ 32.,  28.,  22., ...,   0.,   0.,   3.],\n",
       "        ...,\n",
       "        [ 15., 111., 132., ...,   0.,   0.,   0.],\n",
       "        [  3.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  61.,  22.,  10.]], dtype=float32),\n",
       " array([[ 47.,  68.,  11., ...,   3.,   1.,   2.],\n",
       "        [  0.,   0.,   1., ...,   0.,   2.,   7.],\n",
       "        [121.,  71.,   6., ...,  14.,   9.,  27.],\n",
       "        ...,\n",
       "        [ 14.,  41.,  35., ...,   1.,   0.,   0.],\n",
       "        [ 53., 131.,  86., ...,   0.,   0.,   0.],\n",
       "        [ 44.,  34.,  53., ...,  16.,  11.,  10.]], dtype=float32),\n",
       " array([[ 2., 16.,  6., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  1., 20., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  1., 50.],\n",
       "        ...,\n",
       "        [43.,  1.,  3., ...,  0.,  0.,  0.],\n",
       "        [45.,  2.,  2., ...,  0.,  0.,  0.],\n",
       "        [64., 63., 44., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  3.,  16.,  34., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  26.,  35.,  40.],\n",
       "        [  4.,  17.,  63., ...,   0.,   0.,  18.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   9., 115.,  39.],\n",
       "        [ 29.,  21.,  44., ...,  17.,   6.,  22.],\n",
       "        [  0.,   3.,  53., ...,  27.,   5.,   2.]], dtype=float32),\n",
       " array([[  1.,   1.,  23., ...,   0.,   0.,   0.],\n",
       "        [ 39.,  15.,  21., ...,   0.,   0.,   0.],\n",
       "        [  7.,   0.,   2., ...,   4.,   1.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  22.,  57.,  24.],\n",
       "        [  3.,   0.,  14., ...,   1.,   0.,   0.],\n",
       "        [  2.,  61., 126., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   8.,  26., ...,   1.,   0.,   1.],\n",
       "        [ 51.,   0.,   2., ...,   1.,   1.,   7.],\n",
       "        [ 64.,  62.,  37., ...,  16.,  14.,  19.],\n",
       "        ...,\n",
       "        [ 18.,   4.,  24., ...,   3.,   1.,   4.],\n",
       "        [ 11.,  37., 137., ...,  15.,   9.,   0.],\n",
       "        [  0.,   0.,   0., ...,  19.,  16.,   3.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 19.,  6.,  2.],\n",
       "        [ 1.,  1., 20., ...,  0.,  0.,  0.],\n",
       "        [13., 53., 23., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  4.,  3.,  8.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  5.,  4.],\n",
       "        [31.,  1., 28., ..., 20.,  0.,  1.]], dtype=float32),\n",
       " array([[ 15.,  28.,   9., ...,  16.,  10.,  25.],\n",
       "        [  0.,   0.,   0., ...,   3.,   2.,   5.],\n",
       "        [  1.,   1.,   3., ...,  13.,   2.,  15.],\n",
       "        ...,\n",
       "        [113.,   4.,   1., ...,   0.,   0.,   0.],\n",
       "        [131., 101.,   7., ...,   0.,   0.,   0.],\n",
       "        [ 26.,   6.,  18., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 2.,  1.,  2., ...,  0., 22., 44.],\n",
       "        [ 1.,  0.,  0., ..., 19., 30., 26.],\n",
       "        [ 0.,  0.,  0., ..., 15., 35., 66.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  3.,  8., 13.],\n",
       "        [ 0.,  1.,  9., ..., 12., 29., 19.],\n",
       "        [ 0.,  0.,  0., ..., 34., 28., 21.]], dtype=float32),\n",
       " array([[118.,  18.,   5., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  16.,  19.,  36.],\n",
       "        [ 14.,  20.,   8., ...,  12.,   0.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,   5.,   8.,  20.],\n",
       "        [  2.,   2.,  23., ...,   0.,   0.,   0.],\n",
       "        [  5.,   7.,  23., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  5.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 35.,  50.,  32., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  15.,   3.,   0.],\n",
       "        ...,\n",
       "        [118.,  45.,   4., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  19.],\n",
       "        [  3.,   0.,   0., ...,   2.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   2.,   3., ...,   6.,   8.,  10.],\n",
       "        [  4.,  15.,  53., ...,   7.,  84.,  62.],\n",
       "        [ 96.,  78.,   2., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [  5.,  83., 141., ...,   0.,   0.,   0.],\n",
       "        [  3.,   9.,   5., ...,   0.,   0.,   0.],\n",
       "        [ 37.,  92., 133., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 71., 129.,  11., ...,   0.,   0.,   0.],\n",
       "        [ 95.,  66.,  88., ...,   0.,   0.,   0.],\n",
       "        [ 26.,  28.,   8., ...,  36.,  14.,   0.],\n",
       "        ...,\n",
       "        [  3.,  38.,  85., ...,   1.,   0.,   0.],\n",
       "        [ 19.,  36.,   1., ...,   3.,   9.,  12.],\n",
       "        [  2.,  13.,  90., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   1., ...,  33.,  71.,  10.],\n",
       "        [  4.,  18., 112., ...,   4.,   6.,   1.],\n",
       "        ...,\n",
       "        [ 90.,  30.,   0., ...,   0.,   0.,   0.],\n",
       "        [103., 111.,  61., ...,   0.,   0.,   0.],\n",
       "        [  2.,  18.,  16., ...,  22.,  30.,   8.]], dtype=float32),\n",
       " array([[ 33., 136.,  69., ...,   0.,   1.,   0.],\n",
       "        [  0.,   0.,   8., ...,  76.,  39.,  19.],\n",
       "        [  7.,  17.,  18., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  25.,  29.,  19.],\n",
       "        [ 37., 133.,   8., ...,   4.,   5.,  13.],\n",
       "        [  0.,   0.,   9., ...,  21.,   1.,   4.]], dtype=float32),\n",
       " array([[  3.,  62.,  81., ...,   0.,   0.,   0.],\n",
       "        [  6.,   9.,  57., ...,  22.,   3.,  11.],\n",
       "        [ 16.,  15.,  56., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,   0.,   0., ...,  25.,  22.,  25.],\n",
       "        [ 63., 120.,  40., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   0., ...,  14.,   5.,   1.]], dtype=float32),\n",
       " array([[ 2.,  5., 44., ...,  4.,  6., 55.],\n",
       "        [46.,  9.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  5.,  7.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 10., 31., 58.],\n",
       "        [ 8., 71., 71., ...,  0.,  0., 13.],\n",
       "        [ 4.,  2.,  2., ..., 24., 14., 43.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,  12.,  75.],\n",
       "        [  0.,   0.,   1., ...,   3.,   2.,   5.],\n",
       "        [  0.,   0.,   0., ...,  17.,  68., 145.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  36.,  38.,  58.],\n",
       "        [  2.,  85., 106., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[16.,  1.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 13., 65., 45.],\n",
       "        [ 0.,  0.,  0., ..., 27., 23., 98.],\n",
       "        ...,\n",
       "        [ 0.,  1.,  0., ..., 53., 11.,  5.],\n",
       "        [ 3.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  7.,  8., ..., 54., 63., 11.]], dtype=float32),\n",
       " array([[ 25.,  71.,  31., ...,  17.,  18., 104.],\n",
       "        [  0.,   0.,   0., ...,  34.,   7.,   2.],\n",
       "        [  8.,   7.,   3., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  9.,  16.,  24., ...,   0.,   2.,   4.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   2.]], dtype=float32),\n",
       " array([[12.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 7.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  0.,  5., ...,  2.,  1.,  2.],\n",
       "        ...,\n",
       "        [14.,  1.,  0., ...,  6.,  2.,  1.],\n",
       "        [34., 15.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  2., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 41., 10.,  8.],\n",
       "        [33., 50., 12., ..., 15.,  6.,  0.],\n",
       "        [ 0.,  0.,  4., ...,  0., 20., 52.],\n",
       "        ...,\n",
       "        [ 0.,  2.,  1., ...,  5.,  9., 89.],\n",
       "        [ 6.,  1.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 79., 18., 13.]], dtype=float32),\n",
       " array([[  6.,   4.,   0., ...,  21.,  28.,  34.],\n",
       "        [ 10.,  10.,  68., ...,   0.,   0.,   0.],\n",
       "        [ 20.,  43.,   8., ...,   0.,   0.,  10.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  28.,   9.,  17.],\n",
       "        [ 17., 106.,  58., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  25.,   9.,  57.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ..., 109.,   6.,   0.],\n",
       "        [  4.,   0.,   0., ...,  11.,   5.,   2.],\n",
       "        [  0.,   0.,   7., ...,  31.,   7.,   7.],\n",
       "        ...,\n",
       "        [ 37.,  21.,  19., ...,   0.,   0.,   0.],\n",
       "        [130., 130.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,   3.,   1.]], dtype=float32),\n",
       " array([[  0.,  44.,  74., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  42.,  74.,  64.],\n",
       "        [ 42.,  56.,  20., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 49.,  29.,  28., ...,   0.,   1.,   1.],\n",
       "        [ 16.,  86.,   9., ...,   9.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,  23.,  84., 122.]], dtype=float32),\n",
       " array([[  9.,  12.,  34., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   3.],\n",
       "        [ 73., 123.,  28., ...,   1.,   2.,  27.],\n",
       "        ...,\n",
       "        [  0.,   3.,   8., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,  20.,   9.,   6.],\n",
       "        [ 39., 128.,  35., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[  5.,   2.,  16., ...,   0.,   0.,   0.],\n",
       "        [ 15.,   0.,   0., ...,  21.,   2.,   0.],\n",
       "        [  6.,   4.,   1., ...,  51.,  15.,  12.],\n",
       "        ...,\n",
       "        [  1.,  36.,  66., ...,   0.,   0.,   0.],\n",
       "        [ 41., 131., 131., ...,   0.,   0.,   0.],\n",
       "        [ 84.,   7.,  34., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  4.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 16.,   2.,   4., ...,  13.,  15.,  34.],\n",
       "        [ 13.,  11.,   1., ...,  21.,  33.,  65.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1.,  14.,  55.],\n",
       "        [  1.,   0.,   6., ...,   0.,   0.,   0.],\n",
       "        [ 39., 127., 104., ...,   0.,   1.,   2.]], dtype=float32),\n",
       " array([[ 31., 113.,  43., ...,   0.,   0.,  11.],\n",
       "        [  0.,   0.,   0., ...,   5.,   7.,  25.],\n",
       "        [ 10.,  10.,   1., ...,  26.,  19.,  44.],\n",
       "        ...,\n",
       "        [ 32.,  16.,   9., ...,   0.,   0.,   0.],\n",
       "        [ 73.,  24.,  28., ...,   1.,   1.,   7.],\n",
       "        [ 53.,   5.,   7., ...,  91.,  18.,   5.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   4.,   7.],\n",
       "        [  0.,   0.,   0., ...,   1.,   1.,   4.],\n",
       "        [ 19.,  28.,  11., ...,   0.,   1.,   0.],\n",
       "        ...,\n",
       "        [ 36., 144.,  51., ...,   0.,   0.,   0.],\n",
       "        [  7.,  22., 120., ...,  76.,  38.,  15.],\n",
       "        [ 28., 119.,  95., ...,  53.,   4.,   1.]], dtype=float32),\n",
       " array([[ 7.,  5.,  1., ..., 29., 43., 69.],\n",
       "        [ 2.,  0.,  0., ...,  3.,  1.,  0.],\n",
       "        [44., 41., 26., ...,  6.,  9.,  8.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  1., ..., 18., 26., 53.],\n",
       "        [28., 24.,  3., ...,  1.,  3.,  3.],\n",
       "        [29., 38., 34., ...,  0.,  0.,  2.]], dtype=float32),\n",
       " array([[  2.,   6., 132., ...,   6.,  37.,   3.],\n",
       "        [ 38.,  28.,  28., ...,   3.,   3.,   5.],\n",
       "        [  1.,   0.,   0., ...,  33.,  23.,   2.],\n",
       "        ...,\n",
       "        [  8.,   6.,   0., ...,   0.,  10.,  36.],\n",
       "        [ 23.,  44.,  77., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   6.]], dtype=float32),\n",
       " array([[  2.,   0.,   2., ...,   0.,   0.,  14.],\n",
       "        [ 22.,   6.,   9., ...,   0.,   0.,  38.],\n",
       "        [  4.,  11.,   9., ...,  12.,  59.,  92.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  17.,   3.,   4.],\n",
       "        [  0.,   0.,   4., ...,  46.,  58.,  30.],\n",
       "        [121.,  42.,   7., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   1., ...,  48.,  11.,  10.],\n",
       "        [  0.,   0.,   0., ...,  31., 104.,  34.],\n",
       "        [  0.,   1.,   0., ...,  15.,  14.,   2.],\n",
       "        ...,\n",
       "        [  1.,   0.,   2., ...,   9.,   4.,   4.],\n",
       "        [  0.,   0.,   0., ...,   4.,   5.,   2.],\n",
       "        [  0.,  18.,  29., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  1.,  3.,  1.],\n",
       "        [ 1., 15., 45., ...,  0.,  1., 79.],\n",
       "        [ 0.,  0.,  0., ..., 56., 34., 34.],\n",
       "        ...,\n",
       "        [41.,  4.,  5., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  3., 52.],\n",
       "        [ 5.,  2.,  6., ...,  1.,  0.,  1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 34., 63.,  9.],\n",
       "        [ 0.,  2., 27., ...,  5.,  0.,  3.],\n",
       "        ...,\n",
       "        [ 7.,  5., 16., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 53., 43.,  6.],\n",
       "        [ 1.,  1.,  2., ...,  9.,  3., 35.]], dtype=float32),\n",
       " array([[ 45., 134.,  15., ...,   8.,   3.,   0.],\n",
       "        [  8.,  49.,  59., ...,   0.,   0.,   0.],\n",
       "        [  8.,   5.,  19., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 15.,  41.,  32., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   1.],\n",
       "        [  0.,   0.,   0., ...,   5.,   2.,   1.]], dtype=float32),\n",
       " array([[ 58.,  14.,   0., ...,   0.,   0.,   0.],\n",
       "        [118.,  40.,  11., ...,   2.,   2.,  14.],\n",
       "        [  0.,   0.,   0., ...,  20.,   7.,  20.],\n",
       "        ...,\n",
       "        [ 33.,  87.,  25., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,   6.,   4.],\n",
       "        [157.,  48.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  47.,   5.,   1.],\n",
       "        [  6.,   1.,   8., ...,   0.,   0.,   0.],\n",
       "        [  1.,   1.,   0., ...,   5.,  49., 140.],\n",
       "        ...,\n",
       "        [  0.,  17.,  53., ...,   0.,   9.,  41.],\n",
       "        [  4.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 12., 142.,  33., ...,   0.,   1.,   0.]], dtype=float32),\n",
       " array([[  5.,   3.,  10., ...,   0.,   0.,   0.],\n",
       "        [  1.,   9., 127., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  64.,  13.,  13.],\n",
       "        ...,\n",
       "        [ 68.,   6.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 38.,  33.,  31., ...,   1.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,   3.,   3.,   7.]], dtype=float32),\n",
       " array([[25., 64., 95., ..., 21., 24., 34.],\n",
       "        [ 1.,  4., 43., ..., 86., 13.,  1.],\n",
       "        [14., 25., 16., ..., 24., 68., 23.],\n",
       "        ...,\n",
       "        [ 0.,  6., 67., ..., 10.,  6., 15.],\n",
       "        [ 0.,  1.,  5., ...,  9., 18., 90.],\n",
       "        [15., 19., 36., ...,  3., 11., 41.]], dtype=float32),\n",
       " array([[ 19.,  10.,  22., ...,  68.,  29.,   9.],\n",
       "        [  4.,   0.,   1., ...,  82., 131.,  47.],\n",
       "        [  0.,   1.,   1., ...,   5.,   8.,  10.],\n",
       "        ...,\n",
       "        [  4.,  36.,  57., ...,  25., 134., 134.],\n",
       "        [  0.,   0.,   0., ...,   3.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ..., 107.,  10.,   4.]], dtype=float32),\n",
       " array([[  9.,   6.,  20., ...,   0.,  14.,  90.],\n",
       "        [  1.,   0.,   6., ...,   1.,   3.,  40.],\n",
       "        [  0.,   4., 120., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 15.,  14.,  20., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  24.,  37.,  51.],\n",
       "        [ 23.,   0.,   1., ...,   7.,  20.,  32.]], dtype=float32),\n",
       " array([[ 5.,  3.,  0., ...,  5.,  2.,  4.],\n",
       "        [54., 39.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 6., 99., 68., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  6., ...,  1.,  0.,  5.],\n",
       "        [ 0.,  2., 53., ...,  0.,  0.,  0.],\n",
       "        [22.,  7., 51., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[15.,  1.,  4., ...,  0.,  0.,  0.],\n",
       "        [20., 21., 23., ..., 14.,  0.,  0.],\n",
       "        [22., 21., 13., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 3.,  6.,  1., ..., 20.,  8., 10.],\n",
       "        [11., 28., 88., ...,  0.,  0.,  0.],\n",
       "        [31., 68., 66., ...,  0.,  0.,  1.]], dtype=float32),\n",
       " array([[  9.,   6.,  36., ...,   2.,   0.,   0.],\n",
       "        [ 44., 122.,  44., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  33.,  38.,  29.],\n",
       "        ...,\n",
       "        [  6.,   7.,   0., ...,  32.,  30.,  28.],\n",
       "        [  0.,   1.,   2., ...,  36.,   3.,   0.],\n",
       "        [ 22.,   4.,  17., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 30., 128., 132., ...,   0.,   0.,   0.],\n",
       "        [ 22.,  35.,  17., ...,   0.,   0.,   0.],\n",
       "        [ 48.,  29.,  59., ...,   6.,  36.,  38.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   6.,   3.,  81.],\n",
       "        [  3.,  44.,  67., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  12.,   7.,   6.]], dtype=float32),\n",
       " array([[27., 33., 48., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 13., 18.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  5.,  9.],\n",
       "        ...,\n",
       "        [ 2.,  0.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 11.,  1., 17.],\n",
       "        [10., 10., 12., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 5.,  4., 13., ..., 24.,  8., 13.],\n",
       "        [ 1.,  1., 14., ...,  2.,  4.,  8.],\n",
       "        [ 0., 18., 98., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [55.,  4.,  1., ..., 17.,  1.,  0.],\n",
       "        [31., 16.,  8., ...,  2., 18., 56.],\n",
       "        [23., 28., 62., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[128.,  28.,   0., ...,   7.,  16.,  83.],\n",
       "        [ 24.,   8.,   0., ...,  34.,  14.,   5.],\n",
       "        [  2.,  19.,  19., ...,   2.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 10.,   4.,   2., ...,  12.,  21.,  24.],\n",
       "        [  0.,   0.,   0., ...,   3.,  37.,  88.],\n",
       "        [ 27.,  68., 131., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  6.,   2.,   0., ...,   9.,   2.,  14.],\n",
       "        [ 51.,  16.,   2., ...,   6.,   4.,   5.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  82., 108.,  19.],\n",
       "        [  3., 149., 103., ...,   0.,   0.,   0.],\n",
       "        [ 17.,   5.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 63.,  40.,  11., ...,   0.,   0.,   0.],\n",
       "        [  2.,  28., 132., ...,   0.,   0.,   0.],\n",
       "        [120.,  25.,   9., ...,   8.,   1.,   0.],\n",
       "        ...,\n",
       "        [  5., 151., 151., ...,   0.,   0.,   0.],\n",
       "        [  0.,   2.,   6., ...,   2.,   4.,   2.],\n",
       "        [ 32.,   0.,   0., ...,  17.,   0.,   0.]], dtype=float32),\n",
       " array([[164.,  12.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 53.,   4.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 14.,   4.,   0., ...,   0.,   3.,   1.],\n",
       "        ...,\n",
       "        [ 73.,   6.,   0., ...,   8.,   9.,  38.],\n",
       "        [  6.,   1.,   0., ...,   2.,   0.,   0.],\n",
       "        [ 83.,   2.,   0., ...,   1.,   0.,   3.]], dtype=float32),\n",
       " array([[  4.,   0.,   0., ...,   2.,   7.,   6.],\n",
       "        [  2.,   4.,  16., ...,   9.,   1.,  13.],\n",
       "        [ 33.,  20.,  14., ...,   5.,  11.,  41.],\n",
       "        ...,\n",
       "        [110.,   1.,   0., ...,   0.,   1.,  18.],\n",
       "        [  0.,   0.,   0., ...,   7.,   0.,   1.],\n",
       "        [ 54.,  17.,   9., ...,   1.,   0.,   4.]], dtype=float32),\n",
       " array([[132., 132.,  10., ...,   0.,   0.,   0.],\n",
       "        [ 41.,  14.,   6., ...,   0.,   0.,   0.],\n",
       "        [  9.,   0.,   0., ...,   1.,   2.,  10.],\n",
       "        ...,\n",
       "        [  3.,   2.,   1., ...,   0.,   0.,  22.],\n",
       "        [  0.,   0.,   0., ...,  19.,  49.,   7.],\n",
       "        [ 30.,  10.,   5., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[58., 24., 12., ...,  1.,  1.,  2.],\n",
       "        [63., 25., 13., ...,  4.,  4.,  8.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [10., 40., 38., ...,  2.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  2.,  0.,  8.],\n",
       "        [24.,  1.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 4.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        [15.,  3.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [14.,  1., 11., ...,  0.,  0., 25.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  1.,  9.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   2.,  59., ...,   0.,   8.,  14.],\n",
       "        [  0.,   0.,   0., ...,  32.,   1.,   1.],\n",
       "        [  0.,   0.,   0., ..., 152.,  47.,  13.],\n",
       "        ...,\n",
       "        [ 90.,  10.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 41.,   8.,   4., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  16.,   0.,   2.]], dtype=float32),\n",
       " array([[  6.,  13.,  12., ...,   0.,   0.,   0.],\n",
       "        [ 11.,  15.,   8., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   6.,  20., 100.],\n",
       "        ...,\n",
       "        [ 93.,  44.,   1., ...,   0.,   0.,   0.],\n",
       "        [  2.,   3.,  54., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  22.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   1.,   0., ...,   3.,   0.,   9.],\n",
       "        [ 36.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 31.,   7.,   2., ...,   1.,   0.,   2.],\n",
       "        ...,\n",
       "        [ 60., 131.,   7., ...,   1.,   0.,   0.],\n",
       "        [ 27.,  17.,   1., ...,  82.,  12.,  32.],\n",
       "        [  4.,   0.,   0., ...,  27.,   7.,  41.]], dtype=float32),\n",
       " array([[18., 16., 15., ...,  1.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  1.,  0.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [ 2.,  1.,  0., ..., 60.,  5.,  8.],\n",
       "        [90., 52.,  4., ...,  1.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  4.]], dtype=float32),\n",
       " array([[ 1.,  2.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 8., 76., 71., ...,  0.,  0.,  0.],\n",
       "        [31., 31., 21., ...,  0.,  2., 14.],\n",
       "        ...,\n",
       "        [52., 32., 10., ...,  0.,  0.,  3.],\n",
       "        [30., 16., 27., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  9.,  1.,  1.]], dtype=float32),\n",
       " array([[ 8., 60., 34., ...,  8., 31., 87.],\n",
       "        [47., 12.,  3., ...,  0.,  0.,  0.],\n",
       "        [62., 27.,  3., ...,  1.,  2.,  6.],\n",
       "        ...,\n",
       "        [ 8., 15., 52., ..., 64., 53.,  4.],\n",
       "        [21., 38., 19., ...,  3.,  5.,  6.],\n",
       "        [ 0.,  2.,  4., ..., 33., 13.,  2.]], dtype=float32),\n",
       " array([[ 93., 121.,   6., ...,   2.,   2.,   7.],\n",
       "        [  4.,   9.,  19., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,  11.],\n",
       "        ...,\n",
       "        [  0.,   7.,   5., ...,  73.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   5.],\n",
       "        [  0.,   0.,   0., ...,  11.,   0.,   0.]], dtype=float32),\n",
       " array([[45.,  8.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  8.,  1.,  4.],\n",
       "        [ 0.,  0.,  0., ..., 36.,  1.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 12.,  2., 17.],\n",
       "        [ 0.,  0.,  0., ..., 33.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  0., 20.]], dtype=float32),\n",
       " array([[  0.,   2.,  19., ...,  54.,   7.,   0.],\n",
       "        [  6.,   0.,   2., ...,   9.,  13.,  33.],\n",
       "        [ 21.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 63.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [120., 148.,   8., ...,   7.,  11.,   3.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,  11.]], dtype=float32),\n",
       " array([[  0.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [  2.,  31.,   4., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [  7.,   1.,   0., ...,   8.,   2.,  12.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [140.,   3.,   0., ...,   1.,   0.,   2.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  23.,  26.,  18.],\n",
       "        [  0.,   0.,   0., ...,   4.,   0.,   5.],\n",
       "        [  0.,   0.,   0., ...,   0.,   4., 140.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   5.,   0.,   0.],\n",
       "        [ 50.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [  9.,  94., 123., ...,   3.,  41.,  33.]], dtype=float32),\n",
       " array([[10., 21., 51., ...,  0.,  0.,  0.],\n",
       "        [42., 74., 44., ...,  0.,  0.,  0.],\n",
       "        [24.,  3.,  1., ...,  4.,  2.,  0.],\n",
       "        ...,\n",
       "        [37.,  0.,  0., ..., 25.,  2.,  1.],\n",
       "        [18., 22.,  1., ...,  3.,  0.,  8.],\n",
       "        [ 7.,  6.,  4., ...,  1.,  3.,  4.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 39., 13.,  0.],\n",
       "        [47.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [29., 46., 35., ...,  0.,  0.,  4.],\n",
       "        ...,\n",
       "        [50.,  2.,  0., ...,  1.,  0.,  0.],\n",
       "        [59., 10., 10., ...,  0.,  0.,  0.],\n",
       "        [10.,  2.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 13.,  14.,   5., ...,   0.,   0.,   0.],\n",
       "        [ 65.,   4.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   6.],\n",
       "        ...,\n",
       "        [  3.,   0.,   3., ...,   0.,   0.,   0.],\n",
       "        [ 22., 125.,  63., ...,   0.,   0.,   0.],\n",
       "        [ 32.,  10.,  14., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[30.,  2.,  0., ...,  0.,  0.,  0.],\n",
       "        [90., 19.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  0.,  6.],\n",
       "        ...,\n",
       "        [17., 26., 20., ..., 30., 27., 33.],\n",
       "        [ 2.,  1., 68., ...,  1.,  2.,  4.],\n",
       "        [65., 20.,  6., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 17., 135.,  78., ...,   0.,  23.,  11.],\n",
       "        [  0.,  18.,  16., ...,   1.,   4.,  13.],\n",
       "        [  0.,   1.,   1., ...,   9.,  15.,  16.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   3.],\n",
       "        [  0.,   0.,   1., ...,   2.,   4.,  14.]], dtype=float32),\n",
       " array([[ 15.,  25.,  84., ...,  43.,   7.,  12.],\n",
       "        [  6.,   2.,   2., ...,  71.,  23.,   5.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   6.],\n",
       "        ...,\n",
       "        [ 35.,  43.,  32., ...,   0.,   0.,   1.],\n",
       "        [ 28.,  32.,  13., ...,   4.,   0.,   0.],\n",
       "        [ 60., 117.,  36., ...,   0.,   0.,  10.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [132.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  3.,  88., 137., ...,   1.,   1.,   0.],\n",
       "        ...,\n",
       "        [  5.,   5.,   7., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  14.,   2.,   1.],\n",
       "        [ 70.,   6.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[127.,   3.,   1., ...,   0.,   0.,   0.],\n",
       "        [133.,   4.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 26.,   3.,   0., ...,   6.,   3.,   6.],\n",
       "        ...,\n",
       "        [  8.,  29., 155., ...,   0.,   2.,   8.],\n",
       "        [  0.,   0.,   0., ...,   0.,   2.,  10.],\n",
       "        [  2.,   0.,   0., ...,   1.,   7.,  38.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   4.,   0.,   0.],\n",
       "        [ 16.,   9.,   0., ...,  10.,   5.,   1.],\n",
       "        [110.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   5.,  72., ...,  33.,  42.,   1.],\n",
       "        [  1.,   0.,   0., ...,   1.,   3.,   6.],\n",
       "        [ 69.,  49.,  30., ...,   5.,   1.,   4.]], dtype=float32),\n",
       " array([[  0.,   1.,  15., ...,   0.,   0.,   0.],\n",
       "        [ 14.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 12.,  52.,   2., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [  9.,   8.,   0., ...,  12.,   1.,  13.],\n",
       "        [  1., 142., 140., ...,   7.,   2.,   0.],\n",
       "        [  1.,   9.,   7., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  6.,   2.,   7., ...,   0.,   1.,   0.],\n",
       "        [  1.,   0.,   0., ...,   4.,   0.,   0.],\n",
       "        [  0.,   0.,  12., ...,   9.,   5.,  31.],\n",
       "        ...,\n",
       "        [  2.,   2.,   2., ...,   3.,   0.,   2.],\n",
       "        [ 10.,  40.,  20., ...,   0.,   0.,   3.],\n",
       "        [ 26., 139.,  76., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[142.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   2.,  13.],\n",
       "        [  0.,   0.,   0., ...,   5.,   3.,  15.],\n",
       "        ...,\n",
       "        [132.,   4.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 48.,   4.,   0., ...,   0.,   0.,   0.],\n",
       "        [  3.,   3.,   0., ...,   0.,   0.,  17.]], dtype=float32),\n",
       " array([[ 12.,   4.,   0., ..., 105.,   9.,   0.],\n",
       "        [  4.,   5.,   4., ...,  12.,   4.,  26.],\n",
       "        [  9.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [  3.,   8.,  12., ...,  47.,  42.,  25.],\n",
       "        [ 13.,   1.,   1., ...,   2.,  16.,  46.],\n",
       "        [137.,  15.,   1., ...,  67.,  25.,  19.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   8., 118.,  36.],\n",
       "        [  2.,   0.,   0., ...,  51.,   4.,   4.],\n",
       "        [ 11.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,  14.,   0.,   6.],\n",
       "        [ 81.,  17.,  11., ...,   9.,  77.,  26.],\n",
       "        [  1.,  62., 122., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 31.,  31.,  20., ...,   0.,   0.,   0.],\n",
       "        [  1.,  66., 125., ...,   0.,   0.,   0.],\n",
       "        [ 65.,  11.,  23., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   2.,  15.,   5.],\n",
       "        [ 37.,  11.,   4., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  40.,  77.,  55.]], dtype=float32),\n",
       " array([[ 2.,  1., 17., ..., 29., 81., 64.],\n",
       "        [ 0.,  0., 16., ..., 25., 13., 21.],\n",
       "        [ 8.,  7.,  6., ...,  0.,  1.,  0.],\n",
       "        ...,\n",
       "        [ 4., 82., 33., ...,  5.,  2., 22.],\n",
       "        [65.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  2., 24.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  4.,  2.,  6.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  1., 12.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  3.,  0.,  6.],\n",
       "        [65., 36.,  7., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 96.,  9.,  4.]], dtype=float32),\n",
       " array([[ 57., 118.,  13., ...,  18.,   3.,  11.],\n",
       "        [ 23.,  13.,  40., ...,  16.,   3.,  13.],\n",
       "        [  3.,   0.,   1., ...,   2.,   1.,   4.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  65.,   3.,   2.],\n",
       "        [  6.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [  1.,   1.,   0., ...,   1.,  19., 122.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   1.,   7.],\n",
       "        [  0.,   0.,   0., ...,   9.,   3.,  27.],\n",
       "        [  1.,   1.,   1., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [  4.,   1.,   3., ...,  12.,  71.,  86.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [170.,  11.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 28.,   8.,   0., ...,   0.,   0.,   0.],\n",
       "        [138.,  20.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   0.,   7.],\n",
       "        ...,\n",
       "        [108.,  20.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   3.,  10.],\n",
       "        [  0.,   1.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   0.,   0., ...,  13.,   2.,   0.],\n",
       "        [ 27.,   1.,   0., ...,   0.,   0.,   2.],\n",
       "        [  9.,   1.,   0., ...,   0.,  37.,   6.],\n",
       "        ...,\n",
       "        [ 35., 148.,  47., ...,   4.,   0.,   0.],\n",
       "        [  1.,  79.,  67., ...,   0.,   0.,   0.],\n",
       "        [  1.,  24.,  57., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   1.,   3., ...,   9.,  24.,  12.],\n",
       "        [  0.,   0.,   0., ...,   6.,  21.,  24.],\n",
       "        [ 40., 125., 129., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,   1.,  40., ...,   1.,  17.,   2.],\n",
       "        [  0.,   0.,   0., ...,  10.,   6.,   1.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2.,   1.,   1.],\n",
       "        [  2.,   5.,  54., ...,   5.,   4.,   0.],\n",
       "        [  7.,   2.,   5., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,  90.,  86.,   8.],\n",
       "        [ 82.,  81.,  67., ...,   0.,   0.,   2.],\n",
       "        [119., 119.,   2., ...,   7.,   4.,  42.]], dtype=float32),\n",
       " array([[118.,  41.,  12., ...,   0.,   0.,   0.],\n",
       "        [ 16.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 26.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        [ 41.,  35., 101., ...,   0.,   0.,   0.],\n",
       "        [ 88.,   3.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[20.,  0.,  0., ...,  6.,  1.,  1.],\n",
       "        [ 3.,  3., 21., ..., 23.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  1., 26.],\n",
       "        ...,\n",
       "        [58., 60., 14., ...,  3.,  6.,  5.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  1.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  9.,  0.,  6.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   4.,   1.,  16.],\n",
       "        [123.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 10.,   1.,   1., ...,   4.,   1.,   0.],\n",
       "        [  1.,  18.,  28., ...,  10.,  12.,  30.],\n",
       "        [  8.,   4.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  6.,   7.,   3., ...,   1.,   0.,  19.],\n",
       "        [ 61.,  37.,   9., ...,   2.,   5.,  15.],\n",
       "        [157.,   4.,   1., ...,   3.,  10.,  24.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,  14.,   5.,  14.],\n",
       "        [ 60.,  13.,   6., ...,   0.,   0.,   0.],\n",
       "        [ 83.,  24.,   1., ...,   7.,   0.,   0.]], dtype=float32),\n",
       " array([[  8.,   3.,  10., ...,   0.,   0.,   0.],\n",
       "        [  7.,   1.,   0., ...,  50., 113.,  32.],\n",
       "        [  0.,   0.,   1., ...,  33.,  18.,   2.],\n",
       "        ...,\n",
       "        [ 35.,  65.,  11., ...,   2.,   0.,   8.],\n",
       "        [168.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 95.,  20.,   0., ...,  56.,   1.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  21.,  30.,  52.],\n",
       "        [  0.,   2.,   1., ...,   0.,   0.,   4.],\n",
       "        [ 26.,   3.,   0., ...,  15., 144.,  30.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ..., 127.,  69.,  23.],\n",
       "        [  5.,   0.,   1., ...,  16.,  19.,  23.],\n",
       "        [  0.,   0.,   0., ...,  62.,  48.,  21.]], dtype=float32),\n",
       " array([[ 20.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   4.,  80.],\n",
       "        [  4.,   2.,   0., ...,  99., 107.,  20.],\n",
       "        ...,\n",
       "        [  0.,  47., 120., ...,   0.,   0.,   0.],\n",
       "        [  7.,  20.,  32., ...,   0.,  20.,  36.],\n",
       "        [ 16.,  43.,  83., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   1.,   0., ...,   0.,   0.,   2.],\n",
       "        [  8., 122., 130., ...,  36.,   0.,   0.],\n",
       "        [ 11., 122., 129., ...,  22.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,   7.,  29., ...,   0.,   2.,   7.],\n",
       "        [ 89.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 75.,  22.,   1., ...,   1.,   1.,   0.]], dtype=float32),\n",
       " array([[ 19.,  22.,  35., ...,  31.,  62.,  35.],\n",
       "        [ 18.,  59.,  59., ...,  34.,  39.,  53.],\n",
       "        [  1.,   0.,   0., ...,   1.,   0.,   2.],\n",
       "        ...,\n",
       "        [  8.,   3.,   6., ...,  15.,  18.,   8.],\n",
       "        [  0.,   0.,   0., ...,  10.,   0.,   3.],\n",
       "        [  0., 136., 136., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 9.,  4., 61., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 13.,  3.,  4.],\n",
       "        [10.,  3.,  2., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 2., 14.,  9., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  9.,  9., 42.]], dtype=float32),\n",
       " array([[104.,  17.,   2., ...,   0.,   0.,   0.],\n",
       "        [133.,   1.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 19., 129.,  77., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  28.],\n",
       "        [ 53.,   0.,   0., ...,   1.,   3.,  16.]], dtype=float32),\n",
       " array([[ 1.,  4.,  9., ...,  0.,  0.,  0.],\n",
       "        [20.,  2.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1., 17., 59.],\n",
       "        ...,\n",
       "        [22., 10.,  0., ...,  4.,  0.,  0.],\n",
       "        [ 0.,  8., 12., ..., 39., 42.,  0.],\n",
       "        [32., 13.,  8., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 89., 72., 94.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 92.],\n",
       "        [23.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [21., 12., 14., ...,  1.,  1.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  2.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  7.]], dtype=float32),\n",
       " array([[ 20.,   0.,   0., ...,   2.,   1.,  15.],\n",
       "        [ 34.,   0.,   0., ...,   3.,   0.,  11.],\n",
       "        [ 83.,  13.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 15.,   4.,   7., ...,   0.,   0.,   0.],\n",
       "        [ 47., 108.,  69., ...,   5.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  3.,  2., 30.],\n",
       "        [ 0.,  0.,  0., ..., 11.,  0.,  1.],\n",
       "        [ 1.,  2.,  0., ..., 14.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 3.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 29.,  4.,  0.],\n",
       "        [88., 18.,  2., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   8.,   0.,   4.],\n",
       "        [ 64.,   5.,   8., ...,   0.,   0.,   0.],\n",
       "        [ 93.,  49.,   1., ...,  93.,   1.,   0.],\n",
       "        ...,\n",
       "        [  3.,   7.,  31., ...,  24.,  92.,   3.],\n",
       "        [117.,   8.,  12., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   1.,  20.]], dtype=float32),\n",
       " array([[37.,  7.,  1., ..., 11.,  0.,  3.],\n",
       "        [51.,  4.,  1., ...,  0.,  0.,  0.],\n",
       "        [48.,  7.,  0., ...,  2.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        [35., 12.,  1., ...,  1.,  3.,  2.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  2.,  1., 23.],\n",
       "        [ 5.,  2.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [16.,  0.,  0., ..., 39., 10.,  7.],\n",
       "        [ 9.,  0.,  0., ...,  2.,  8., 20.],\n",
       "        [ 9., 10., 32., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 2., 12., 29., ...,  4.,  1., 72.],\n",
       "        [ 0.,  0.,  0., ..., 31., 29., 39.],\n",
       "        [ 0.,  0.,  0., ...,  0., 13., 59.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  6., 16., 16.],\n",
       "        [86., 34., 11., ...,  2.,  1.,  0.],\n",
       "        [ 9.,  7.,  7., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 39.,  16.,  10., ...,   1.,   1.,   0.],\n",
       "        [  1.,   0.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 14.,  27.,   5., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,   1.,  62.],\n",
       "        [  0.,   0.,   0., ...,   3.,   1.,  19.],\n",
       "        [121., 110.,   4., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   3.,   2.,   2.],\n",
       "        [  0.,   0.,   0., ...,   4.,   0.,   3.],\n",
       "        [ 13.,   7.,   0., ...,   2.,  29., 101.],\n",
       "        ...,\n",
       "        [ 25.,   0.,   0., ...,  35.,   1.,   0.],\n",
       "        [ 59.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 19., 170.,  87., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 33.,  87.,  27., ...,   1.,   0.,   0.],\n",
       "        [  0.,   6.,   0., ...,   7.,  18.,   1.],\n",
       "        [ 47.,  94.,  14., ...,   2.,   5.,   3.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   5.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   9.],\n",
       "        [ 19.,   4.,   0., ...,   0.,  26., 133.]], dtype=float32),\n",
       " array([[ 3.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 41.],\n",
       "        [ 5.,  1.,  0., ...,  1.,  1., 21.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  8.,  3.,  7.],\n",
       "        [28., 20.,  6., ...,  0.,  0.,  0.],\n",
       "        [12., 46., 62., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 93.,  37.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 30.,   0.,   0., ...,   8.,   0.,   2.],\n",
       "        [  8.,   4.,  14., ...,   2.,   0.,  10.],\n",
       "        ...,\n",
       "        [ 42.,   2.,   1., ...,   3.,   0.,   1.],\n",
       "        [ 42.,   8.,   1., ...,   3.,   0.,  17.],\n",
       "        [128.,  34.,   4., ...,   0.,   2.,  16.]], dtype=float32),\n",
       " array([[48., 28., 21., ...,  5.,  4.,  8.],\n",
       "        [ 0.,  3.,  7., ..., 56., 12.,  1.],\n",
       "        [88., 66., 57., ..., 26., 32., 13.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  5.,  4.,  6.],\n",
       "        [ 4.,  3.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 4.,  0.,  1., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[11.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [17.,  4.,  0., ...,  0.,  0.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 7., 13., 25., ..., 10.,  1.,  3.],\n",
       "        [ 0.,  0.,  0., ..., 21., 34.,  8.],\n",
       "        [ 0.,  1., 60., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   2.,  24., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,  12.,  31.],\n",
       "        [  0.,   0.,   0., ...,  18.,  60., 131.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  6.,  36.,  34., ...,   4.,   6.,   8.],\n",
       "        [ 97., 151.,  11., ...,   1.,   0.,   1.]], dtype=float32),\n",
       " array([[ 13.,   3.,  77., ...,   0.,   0.,   0.],\n",
       "        [142.,  25.,   1., ...,   0.,   0.,   0.],\n",
       "        [113.,  12.,   9., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 17.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 74.,   5.,   0., ...,   3.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   1.,   4.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1.,   0.,   7.],\n",
       "        [  9.,   7.,  45., ...,   0.,   0.,   0.],\n",
       "        [ 28.,  55.,  20., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [129.,  64.,  17., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 42.,  11.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  19.,   0.,   3.],\n",
       "        [ 23.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  72.,   9.,  27.],\n",
       "        ...,\n",
       "        [  1., 139., 124., ...,   2.,   4.,  11.],\n",
       "        [  0.,   0.,   0., ...,   5.,   3.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   2.]], dtype=float32),\n",
       " array([[28.,  7.,  5., ...,  0.,  0.,  0.],\n",
       "        [96.,  1.,  3., ...,  1.,  2., 10.],\n",
       "        [40., 12., 51., ...,  2.,  4., 16.],\n",
       "        ...,\n",
       "        [ 8., 11.,  3., ...,  3.,  2., 20.],\n",
       "        [25.,  5.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1.,  6., ...,  0.,  0., 25.]], dtype=float32),\n",
       " array([[ 47.,  10.,   7., ...,   0.,   0.,   0.],\n",
       "        [  2.,   0.,   0., ...,   0.,   0.,   4.],\n",
       "        [ 20.,   0.,   0., ...,   1.,   1.,   6.],\n",
       "        ...,\n",
       "        [ 10.,  20.,  15., ...,   0.,   0.,   0.],\n",
       "        [  4.,   9.,   8., ...,   0.,   0.,   0.],\n",
       "        [114.,  14.,   3., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[144.,  37.,  15., ...,   3.,   7.,   5.],\n",
       "        [  5.,   2.,   2., ...,   0.,   0.,  11.],\n",
       "        [ 77.,  34.,   3., ..., 124.,  14.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,   0.,   6.,  39.],\n",
       "        [  3.,  31., 125., ...,   0.,   0.,  38.]], dtype=float32),\n",
       " array([[ 3., 10.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 1., 11., 34., ..., 77.,  6.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  1.,  0.],\n",
       "        ...,\n",
       "        [51.,  8.,  0., ..., 11.,  1.,  0.],\n",
       "        [ 1.,  0.,  0., ..., 15.,  8.,  4.],\n",
       "        [ 0.,  0.,  0., ..., 11.,  0.,  1.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ...,  4.,  0.,  0.],\n",
       "        [83.,  2.,  1., ...,  3., 25., 29.],\n",
       "        [19.,  1.,  2., ...,  0.,  0., 13.],\n",
       "        ...,\n",
       "        [11.,  5., 13., ...,  4.,  0.,  0.],\n",
       "        [11.,  4.,  1., ...,  4., 10., 50.],\n",
       "        [ 2.,  5.,  2., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  6.,  6., 43.],\n",
       "        [39., 17., 30., ...,  3.,  2.,  5.],\n",
       "        [16., 13., 22., ..., 10., 14., 41.],\n",
       "        ...,\n",
       "        [26., 59.,  6., ..., 21.,  0.,  1.],\n",
       "        [12.,  2.,  1., ...,  7.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  0.,  2.]], dtype=float32),\n",
       " array([[  5.,   5.,  47., ...,  45.,  66., 134.],\n",
       "        [  0.,  83., 126., ...,   0.,   0.,   0.],\n",
       "        [ 49., 133.,  15., ...,   1.,   2.,   2.],\n",
       "        ...,\n",
       "        [ 38.,   5.,   4., ...,   4.,   0.,   3.],\n",
       "        [  0.,   0.,  12., ...,  11.,  10.,  10.],\n",
       "        [  0.,   1.,   0., ...,  15.,  36.,  86.]], dtype=float32),\n",
       " array([[ 31.,  33.,  25., ...,   1.,   8.,  13.],\n",
       "        [ 32.,   0.,   4., ...,  24.,  14.,  47.],\n",
       "        [  6.,  21.,   8., ...,   1.,  85.,  18.],\n",
       "        ...,\n",
       "        [ 11., 118.,  76., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   4.,   1.,   6.],\n",
       "        [ 30.,  36.,  40., ..., 102.,   7.,   1.]], dtype=float32),\n",
       " array([[  9.,   1.,   1., ...,  14.,   7.,  26.],\n",
       "        [ 95.,  81.,  20., ...,   0.,   0.,   0.],\n",
       "        [ 27.,  75.,  11., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   2.,  12., ...,   3.,   0.,   1.],\n",
       "        [108.,  15.,   0., ...,   8.,   0.,   0.],\n",
       "        [ 22.,  19.,   2., ...,   0.,   0.,   4.]], dtype=float32),\n",
       " array([[13.,  9., 29., ...,  0.,  1., 35.],\n",
       "        [88., 37., 20., ...,  4.,  6., 22.],\n",
       "        [69., 70., 14., ...,  0.,  9., 69.],\n",
       "        ...,\n",
       "        [ 0., 13., 30., ...,  0.,  0.,  4.],\n",
       "        [50.,  8.,  1., ...,  0.,  0., 19.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  2.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  2.,   1.,   0., ...,   0.,   1.,   3.],\n",
       "        ...,\n",
       "        [ 32.,  10.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 90.,  37.,   6., ...,   0.,   0.,   0.],\n",
       "        [  0.,  54., 110., ...,   3.,   0.,   0.]], dtype=float32),\n",
       " array([[53., 31.,  1., ...,  0.,  0.,  0.],\n",
       "        [27., 92., 18., ...,  0.,  0.,  0.],\n",
       "        [16.,  1.,  0., ...,  3.,  1.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  6., 17., ...,  4.,  2.,  6.],\n",
       "        [ 0.,  0.,  1., ...,  7.,  0.,  5.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  1.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   2.,   2.],\n",
       "        [ 14.,  71., 141., ...,   2.,   4.,  46.],\n",
       "        [ 32.,   1.,   0., ...,   0.,  12.,  61.],\n",
       "        ...,\n",
       "        [ 12.,  22.,   4., ...,   0.,   1.,   1.],\n",
       "        [ 30.,  23.,  21., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  23.,  20.,   3.]], dtype=float32),\n",
       " array([[30.,  1.,  0., ...,  3.,  1.,  5.],\n",
       "        [ 4., 17., 76., ...,  0.,  2., 11.],\n",
       "        [ 0.,  0., 12., ..., 16.,  2.,  2.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 62.,  5., 27.],\n",
       "        [20., 15., 40., ...,  0.,  0.,  0.],\n",
       "        [ 6., 11.,  2., ..., 75.,  5.,  2.]], dtype=float32),\n",
       " array([[ 35.,   4.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 23.,   9.,   8., ...,   0.,  12., 123.],\n",
       "        [  5.,   6.,   6., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,   2.,   8., ...,   7.,   0.,   0.],\n",
       "        [ 91.,  40.,   4., ...,   2.,  13.,   7.],\n",
       "        [ 31.,   7.,   1., ...,   0.,   4.,  27.]], dtype=float32),\n",
       " array([[  0.,   0.,   7., ...,  15.,   0.,   0.],\n",
       "        [ 68., 139.,  18., ...,  23.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,  41.,   3.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  34., 142.,  91.],\n",
       "        [ 45., 121.,  27., ...,   1.,   4.,  20.],\n",
       "        [ 83.,  24.,  49., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 2.,  1.,  0., ...,  1.,  9., 19.],\n",
       "        [ 1.,  0.,  0., ...,  2., 10., 13.],\n",
       "        [ 1.,  1.,  0., ...,  0.,  0., 19.],\n",
       "        ...,\n",
       "        [19., 19.,  3., ..., 10., 47., 34.],\n",
       "        [ 1.,  0.,  0., ...,  1.,  3., 49.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 43.,   3.,   4., ...,  21.,  34.,  54.],\n",
       "        [ 20., 112., 126., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  13.,   2.,   0.],\n",
       "        ...,\n",
       "        [ 51.,  34.,  26., ...,  13.,   7.,   7.],\n",
       "        [  2.,   0.,  18., ...,  37.,  59.,  83.],\n",
       "        [  6.,   8.,   4., ...,  13.,   2.,   2.]], dtype=float32),\n",
       " array([[24., 21., 21., ...,  0.,  0.,  0.],\n",
       "        [13., 48., 30., ..., 59., 31., 31.],\n",
       "        [14.,  6., 12., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [64., 55., 37., ...,  2.,  1.,  5.],\n",
       "        [ 0.,  0.,  0., ..., 19., 11., 13.],\n",
       "        [73., 19., 14., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[13., 23.,  7., ..., 49., 38.,  7.],\n",
       "        [ 2.,  4., 16., ...,  0.,  0.,  0.],\n",
       "        [ 6.,  6., 38., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  2., 26., ...,  1.,  1., 18.],\n",
       "        [ 5.,  1., 14., ..., 34., 21.,  7.],\n",
       "        [27., 25.,  3., ...,  0.,  8., 76.]], dtype=float32),\n",
       " array([[ 10.,  59.,  86., ...,   0.,   0.,   2.],\n",
       "        [  2.,  47., 108., ...,   0.,   0.,   2.],\n",
       "        [ 85.,  19.,   2., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [118.,  52.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 92.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [ 26.,  45.,  42., ...,   2.,  10.,  65.]], dtype=float32),\n",
       " array([[ 7.,  3.,  3., ...,  0.,  0.,  0.],\n",
       "        [22., 12.,  3., ...,  1.,  0.,  0.],\n",
       "        [ 7.,  0.,  0., ..., 56.,  0.,  0.],\n",
       "        ...,\n",
       "        [18., 30., 24., ..., 11.,  2.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 12., 33., 24.],\n",
       "        [ 1.,  5.,  6., ...,  2.,  1.,  2.]], dtype=float32),\n",
       " array([[  5.,   0.,   0., ...,  17.,  63.,  30.],\n",
       "        [  0.,   0.,   0., ...,   0.,   2.,  13.],\n",
       "        [  5.,  59., 113., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  3.,   1.,   6., ...,   0.,   0.,   0.],\n",
       "        [  2.,   1.,   0., ...,   1.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   5.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   8.,   7.,  70.],\n",
       "        [  4.,  22.,  36., ...,   0.,   0.,  11.],\n",
       "        [ 17.,   9.,  10., ...,   4.,   0.,   4.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ..., 120., 133.,   4.],\n",
       "        [  2., 136., 136., ...,   0.,   0.,   0.],\n",
       "        [  2.,  87.,  73., ...,  24.,  21.,   0.]], dtype=float32),\n",
       " array([[ 43.,   6.,   0., ...,   1.,   2.,   7.],\n",
       "        [  4.,  28.,  15., ...,   7.,  56.,  88.],\n",
       "        [  8.,   7.,  32., ...,  14.,  16.,  16.],\n",
       "        ...,\n",
       "        [104., 124.,  10., ...,   0.,   0.,   0.],\n",
       "        [119.,  20.,   0., ...,  48.,  36.,  40.],\n",
       "        [  1.,  14.,  58., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 14.,  79.,  73., ...,  64.,  40.,   2.],\n",
       "        [  4.,  14., 102., ...,   0.,   0.,   0.],\n",
       "        [  1.,   1.,   2., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  7.,   0.,   0., ...,   0.,  31.,  84.],\n",
       "        [  0.,   1.,   7., ...,   3.,   0.,   0.],\n",
       "        [  1.,   5.,  29., ...,   0.,   0.,  32.]], dtype=float32),\n",
       " array([[  0.,   1.,   8., ...,  12.,   2.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 12., 126., 110., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   4.,   3., ...,   0.,   0.,  20.],\n",
       "        [  0.,   0.,   0., ...,  39., 106.,  34.],\n",
       "        [ 14.,  46., 113., ...,   1.,   2.,   1.]], dtype=float32),\n",
       " array([[  3.,   4.,  25., ...,   4.,   1.,   2.],\n",
       "        [ 69.,  27.,  31., ...,  14.,   7.,   4.],\n",
       "        [ 25.,   9.,   7., ...,   5.,  19., 101.],\n",
       "        ...,\n",
       "        [ 47.,  75.,  12., ...,   0.,   0.,   0.],\n",
       "        [ 38.,  15.,  89., ...,   1.,   7.,  21.],\n",
       "        [ 43., 100.,  11., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 2.,  3., 24., ..., 75., 94.,  1.],\n",
       "        [26., 32., 13., ...,  4., 15., 55.],\n",
       "        [ 0., 13., 94., ..., 10., 20., 14.],\n",
       "        ...,\n",
       "        [84., 21.,  1., ...,  8.,  5.,  6.],\n",
       "        [ 3.,  2.,  1., ...,  1.,  0.,  4.],\n",
       "        [95., 88.,  2., ...,  8., 78.,  1.]], dtype=float32),\n",
       " array([[139.,  64.,  11., ...,   1.,   1.,   1.],\n",
       "        [131.,  26.,  25., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  38.,  25.,   5.],\n",
       "        ...,\n",
       "        [ 11.,   4.,   3., ...,   0.,  19.,  27.],\n",
       "        [  0.,   0.,   0., ...,   5.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,  60.,  74., ...,  17.,  17.,  39.],\n",
       "        [  9.,  60.,  73., ...,  20.,   4.,   4.],\n",
       "        [ 23.,  46., 137., ...,   9.,  14.,   3.],\n",
       "        ...,\n",
       "        [  5.,   2.,  12., ...,   2.,   0.,   0.],\n",
       "        [ 11.,   6.,   0., ...,   4.,   0.,   3.],\n",
       "        [  0.,   5.,  70., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 9.,  2.,  0., ..., 33.,  8., 10.],\n",
       "        [ 6.,  9.,  8., ...,  7.,  0.,  0.],\n",
       "        [72.,  4.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [20., 58., 58., ...,  0.,  0.,  1.],\n",
       "        [46., 18.,  8., ...,  0.,  0.,  0.],\n",
       "        [68., 17.,  4., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 1.,  1.,  0., ..., 26., 11.,  0.],\n",
       "        [ 5.,  1.,  0., ...,  2.,  2.,  4.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  4.,  0.],\n",
       "        ...,\n",
       "        [27.,  1.,  0., ...,  1.,  5.,  9.],\n",
       "        [ 0.,  0.,  0., ..., 23., 26.,  4.],\n",
       "        [27.,  9., 43., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[116.,  48.,  13., ...,   0.,   0.,   2.],\n",
       "        [  9.,   7.,   0., ...,  40.,  74.,  15.],\n",
       "        [ 13.,  12.,  14., ...,  18.,   7.,   5.],\n",
       "        ...,\n",
       "        [ 16.,  14.,   1., ..., 115., 120.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   3.,   6.],\n",
       "        [ 13.,  24.,  84., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  7.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 10.,   0.,   0., ...,   3.,   0.,   0.],\n",
       "        [  1.,   1.,   2., ...,   8.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 79.,  22.,   6., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   4., 102.],\n",
       "        [ 72., 141.,  18., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  11.,   1.,   0.],\n",
       "        [  1.,   1.,  97., ...,   1.,  49.,  24.],\n",
       "        [  0.,   4.,  35., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 91.,  16.,   0., ...,   2.,   2.,   1.],\n",
       "        [  0.,   0.,  11., ...,  23.,  79.,   4.],\n",
       "        [  9., 163.,  86., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  9., 15.],\n",
       "        [ 1.,  6., 37., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  2.,  1., ..., 39.,  4.,  2.],\n",
       "        ...,\n",
       "        [10., 20., 60., ...,  1.,  0.,  0.],\n",
       "        [ 8., 12., 22., ...,  3.,  0.,  0.],\n",
       "        [ 5.,  3.,  3., ..., 13., 11.,  8.]], dtype=float32),\n",
       " array([[109., 143.,   8., ...,  15.,   3.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   3.,   3.],\n",
       "        [ 21.,  20.,  15., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 12.,  60.,  54., ...,   1.,   0.,   0.],\n",
       "        [ 27.,   4.,   0., ...,   0.,   0.,   3.],\n",
       "        [ 86.,  17.,  37., ...,   1.,   0.,   1.]], dtype=float32),\n",
       " array([[ 57., 124.,  38., ...,   0.,   0.,   0.],\n",
       "        [ 18.,  30., 120., ...,   1.,  35., 120.],\n",
       "        [  3.,   1.,  66., ...,  25.,  88.,  91.],\n",
       "        ...,\n",
       "        [  0.,   1.,   0., ...,   0.,   7.,  75.],\n",
       "        [ 62.,  56.,   2., ...,   6.,   9.,  21.],\n",
       "        [ 19.,  11.,   4., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  1.,  11.,  96., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   4.,  10.],\n",
       "        [ 63.,  16.,   0., ...,   2., 125.,  59.],\n",
       "        ...,\n",
       "        [  5., 117.,  95., ...,   0.,   0.,   5.],\n",
       "        [ 54.,  44.,   2., ...,   2.,  11.,  34.],\n",
       "        [ 19.,  23.,   2., ...,   5.,   5.,   3.]], dtype=float32),\n",
       " array([[ 2.,  3., 49., ..., 33., 83.,  9.],\n",
       "        [ 0.,  4.,  2., ...,  0.,  2.,  9.],\n",
       "        [12.,  1.,  0., ..., 62., 26., 20.],\n",
       "        ...,\n",
       "        [29.,  4.,  0., ..., 14.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 44., 30., 17.],\n",
       "        [25.,  8.,  8., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 3.,  3.,  1., ...,  6., 14.,  5.],\n",
       "        [ 0.,  0.,  0., ...,  1., 12., 42.],\n",
       "        [ 0.,  0.,  0., ..., 38.,  1.,  4.],\n",
       "        ...,\n",
       "        [ 1.,  1.,  3., ..., 17., 20.,  4.],\n",
       "        [ 7., 30., 38., ..., 28., 30., 17.],\n",
       "        [10.,  4., 25., ...,  3.,  0.,  1.]], dtype=float32),\n",
       " array([[29., 45.,  6., ...,  0.,  0.,  0.],\n",
       "        [ 7., 14.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  5., 18., ...,  2.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 9., 47., 90., ...,  0.,  0.,  0.],\n",
       "        [19., 31.,  0., ..., 19.,  0.,  0.],\n",
       "        [25., 20., 56., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[142., 151.,  18., ...,   0.,   2.,   3.],\n",
       "        [ 10., 106.,  21., ...,   1.,   1.,   3.],\n",
       "        [  6.,  33.,  11., ...,  26.,   3.,   7.],\n",
       "        ...,\n",
       "        [131.,  17.,   9., ...,   0.,   0.,   0.],\n",
       "        [  2.,   1.,   0., ...,   0.,   2.,   2.],\n",
       "        [  9.,  17.,  11., ...,   3.,   9.,   5.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  7., 17., 30.],\n",
       "        [ 2., 20., 14., ...,  0.,  0.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 27.],\n",
       "        ...,\n",
       "        [57.,  0.,  0., ..., 24., 10., 20.],\n",
       "        [84., 32.,  0., ...,  3.,  1.,  7.],\n",
       "        [44., 16.,  4., ...,  0.,  0.,  1.]], dtype=float32),\n",
       " array([[41., 74., 22., ...,  0.,  0.,  0.],\n",
       "        [13., 30., 44., ...,  0.,  0.,  0.],\n",
       "        [37.,  9.,  0., ..., 22.,  2.,  0.],\n",
       "        ...,\n",
       "        [ 1.,  5., 34., ...,  7.,  1.,  1.],\n",
       "        [ 5.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  6., 29., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 59., 22.,  7.],\n",
       "        [ 0.,  0.,  0., ..., 13.,  2.,  3.],\n",
       "        [ 0.,  0.,  0., ..., 22., 28., 26.],\n",
       "        ...,\n",
       "        [23., 10.,  4., ..., 25.,  0.,  0.],\n",
       "        [61., 14.,  0., ...,  3., 11., 43.],\n",
       "        [40., 67., 22., ...,  1.,  3.,  2.]], dtype=float32),\n",
       " array([[ 45., 133.,  52., ...,   0.,   0.,  17.],\n",
       "        [ 17.,  67.,  99., ...,   3.,   8.,  25.],\n",
       "        [ 35.,   1.,   3., ...,   0.,   2.,  20.],\n",
       "        ...,\n",
       "        [  7.,  15.,   7., ...,   0.,   1.,   0.],\n",
       "        [  1.,   9.,   4., ..., 112.,  54.,  30.],\n",
       "        [ 39., 111.,  78., ...,   4.,   1.,   1.]], dtype=float32),\n",
       " array([[  0.,  49., 127., ...,   1.,   1.,   9.],\n",
       "        [  9.,  34.,  99., ...,  19.,   0.,   0.],\n",
       "        [ 11.,  30.,  52., ...,  17.,   5.,  11.],\n",
       "        ...,\n",
       "        [ 22.,  27.,   0., ...,  36.,  58.,   8.],\n",
       "        [  1.,   8., 110., ...,   7.,  39.,  27.],\n",
       "        [  4.,   9.,   0., ...,   1.,   1.,   0.]], dtype=float32),\n",
       " array([[  2.,  21., 139., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   3.,  23.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  36.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  36.,   6.,   2.],\n",
       "        [ 11.,  26.,  20., ...,   0.,   0.,   0.],\n",
       "        [ 32.,  47.,  37., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2.,   9.,  68.],\n",
       "        [  0.,   0.,   0., ..., 112.,  37.,  58.],\n",
       "        [  0.,   0.,   0., ...,   3.,   5.,  45.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 25.,  50.,   7., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7.,  31.,  11.]], dtype=float32),\n",
       " array([[ 30.,   6.,   1., ...,   0.,   0., 114.],\n",
       "        [ 19.,  16.,   6., ...,   5., 116.,  62.],\n",
       "        [  2.,  54.,  37., ...,   4.,   5.,  12.],\n",
       "        ...,\n",
       "        [ 56.,  25.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 46.,  23.,  11., ...,   0.,   0.,   0.],\n",
       "        [ 16.,   1.,   2., ...,   4.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 11., 11.,  9.],\n",
       "        [ 1.,  0.,  0., ...,  1.,  2.,  0.],\n",
       "        [29., 95., 28., ..., 82., 29., 14.],\n",
       "        ...,\n",
       "        [46., 74., 13., ...,  0.,  7.,  8.],\n",
       "        [ 0.,  0.,  0., ...,  8., 38., 32.],\n",
       "        [39., 59., 16., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 89.,  28.,  15., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 130.,  55.,   6.],\n",
       "        ...,\n",
       "        [  3.,   1.,   0., ...,   0., 143., 143.],\n",
       "        [ 33.,  86.,  70., ...,   3.,   0.,   2.],\n",
       "        [  3.,  22., 136., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[65., 20.,  3., ...,  3.,  4., 37.],\n",
       "        [ 3., 19., 33., ..., 20., 36., 38.],\n",
       "        [ 2., 16., 93., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [31.,  0.,  0., ...,  0.,  6.,  4.],\n",
       "        [47.,  8.,  0., ...,  0.,  3., 13.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   2.,   2., ...,   4.,   1.,   1.],\n",
       "        [  3.,   2.,   1., ...,   1.,   0.,   4.],\n",
       "        [ 15.,   1.,   0., ...,   0.,   1.,   3.],\n",
       "        ...,\n",
       "        [  3.,  21.,   7., ...,   1.,   1.,   2.],\n",
       "        [ 28., 125.,  31., ...,  20.,  16.,  18.],\n",
       "        [  4.,   0.,   0., ...,  27.,   6.,   3.]], dtype=float32),\n",
       " array([[ 3.,  1.,  3., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  0.],\n",
       "        [21.,  5.,  6., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  7., 10., ...,  5., 24., 32.],\n",
       "        [ 2., 32., 20., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  1.,   9.,   9., ...,   2.,   0.,  20.],\n",
       "        [  2.,   2.,   3., ...,   0.,   0.,   0.],\n",
       "        [  4.,   5.,  35., ...,  80.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,   1.,   7.],\n",
       "        [ 29.,  13.,   5., ...,  13.,  24.,   1.],\n",
       "        [  0.,   0.,   0., ..., 132.,  38.,  13.]], dtype=float32),\n",
       " array([[ 0.,  0.,  4., ...,  0.,  1.,  3.],\n",
       "        [39., 13., 14., ..., 64., 12., 10.],\n",
       "        [77.,  2.,  2., ...,  3.,  2.,  4.],\n",
       "        ...,\n",
       "        [ 9.,  3.,  3., ...,  4.,  1., 53.],\n",
       "        [ 0.,  0.,  3., ...,  9., 22., 19.],\n",
       "        [16., 40., 55., ...,  1.,  8., 29.]], dtype=float32),\n",
       " array([[ 0.,  2.,  1., ...,  3.,  2., 11.],\n",
       "        [85., 53.,  4., ...,  0.,  0.,  0.],\n",
       "        [54., 42.,  4., ...,  2.,  4., 46.],\n",
       "        ...,\n",
       "        [ 0.,  1., 16., ...,  8.,  7.,  3.],\n",
       "        [ 0.,  5.,  8., ...,  3.,  2., 23.],\n",
       "        [36., 76., 35., ...,  3., 52., 88.]], dtype=float32),\n",
       " array([[  6.,   2.,   1., ...,   2.,   1.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  5.,   6.,   4., ...,   4.,   3.,   1.],\n",
       "        ...,\n",
       "        [  1.,  20.,  45., ...,   3.,  96., 112.],\n",
       "        [  0.,   1.,   1., ...,   3.,   0.,   3.],\n",
       "        [ 29.,  30.,  19., ...,   6.,   2.,  25.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [18., 36., 25., ..., 70., 33.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  5., 21.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  7.],\n",
       "        [ 1.,  9., 12., ..., 22., 29., 16.],\n",
       "        [ 0.,  0.,  6., ...,  0.,  0.,  6.]], dtype=float32),\n",
       " array([[12.,  2.,  2., ...,  0.,  0.,  1.],\n",
       "        [53.,  3.,  0., ..., 28., 32., 10.],\n",
       "        [59., 32.,  1., ...,  1.,  6., 13.],\n",
       "        ...,\n",
       "        [79., 13.,  1., ..., 25., 51., 34.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  0.,  0.]], dtype=float32),\n",
       " array([[ 56.,  15.,   0., ...,   3.,   4.,  19.],\n",
       "        [  1.,  52.,  59., ...,   0.,   0.,   0.],\n",
       "        [ 27.,  30.,   1., ...,   8.,   6.,  27.],\n",
       "        ...,\n",
       "        [  2.,   1.,   7., ...,   0.,   0.,   0.],\n",
       "        [ 29.,  66., 103., ...,   0.,   0.,   0.],\n",
       "        [  1.,   2.,   1., ...,  29.,  25.,  31.]], dtype=float32),\n",
       " array([[ 13.,   3.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 46.,  50.,  58., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   9., 134., 134.],\n",
       "        ...,\n",
       "        [ 15.,  15.,  13., ...,   1.,   2.,  10.],\n",
       "        [ 50., 101.,  17., ...,   6.,   1.,   0.],\n",
       "        [ 13.,  43.,  55., ...,   0.,   0.,   7.]], dtype=float32),\n",
       " array([[113., 109.,   9., ...,   2.,  20.,  80.],\n",
       "        [  1.,   7.,  16., ...,   0.,   0.,   2.],\n",
       "        [  1.,   0.,  28., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 67., 123.,  20., ...,   3.,   4.,  33.],\n",
       "        [ 14.,   7.,   4., ...,   0.,   1.,   6.],\n",
       "        [ 53.,   2.,   1., ...,   0.,   0.,  11.]], dtype=float32),\n",
       " array([[  2.,  46.,  82., ...,   3.,   0.,   0.],\n",
       "        [ 84.,  38.,   5., ...,  24.,   8.,  43.],\n",
       "        [ 10.,  36.,  43., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  9.,   9.,   2., ...,   0.,   1.,   6.],\n",
       "        [110.,  75.,  33., ...,  10.,   3.,   5.],\n",
       "        [ 16.,  22.,  54., ...,  37.,  18.,   8.]], dtype=float32),\n",
       " array([[ 8., 10., 25., ...,  0.,  0.,  5.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [14.,  1.,  1., ...,  4.,  0.,  0.],\n",
       "        ...,\n",
       "        [14.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [15.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 16.,  27.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 24.,  20.,   3., ...,   5.,   2.,   1.],\n",
       "        [  2.,  43.,  45., ...,  37.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   5.,  12., ...,   0.,   1.,   6.],\n",
       "        [  0.,   1.,  31., ...,   4.,   0.,   0.],\n",
       "        [  0.,   3., 137., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[19., 40.,  0., ...,  1.,  1.,  3.],\n",
       "        [ 0.,  0.,  0., ...,  4.,  1.,  2.],\n",
       "        [25.,  3.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [24., 25.,  6., ...,  2.,  1., 25.],\n",
       "        [21.,  0.,  0., ...,  4.,  0.,  0.],\n",
       "        [60., 58.,  1., ..., 32.,  0.,  1.]], dtype=float32),\n",
       " array([[  1.,   0.,  20., ...,   0.,   1.,   6.],\n",
       "        [  0.,   2.,  10., ...,  20.,  14.,   8.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   5.],\n",
       "        ...,\n",
       "        [ 14.,   3.,   5., ...,   0.,   0.,   0.],\n",
       "        [103.,  33.,   1., ...,   0.,   0.,   0.],\n",
       "        [  6.,  12.,  34., ...,   0.,   0.,   3.]], dtype=float32),\n",
       " array([[  9.,  29.,  32., ...,   0.,   0.,   0.],\n",
       "        [ 34.,  45.,  51., ...,  63.,  34.,  48.],\n",
       "        [120.,  28.,   2., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [139., 139.,  23., ...,   3.,   4.,  41.],\n",
       "        [  1.,   1.,   4., ...,   1.,   0.,   0.],\n",
       "        [ 17.,  11.,   6., ...,  12.,   1.,   1.]], dtype=float32),\n",
       " array([[ 50.,  20.,   1., ...,  15.,   0.,   0.],\n",
       "        [  7.,   2.,   1., ...,   0.,   0.,   1.],\n",
       "        [ 46.,  21.,   3., ...,  13.,   1.,   0.],\n",
       "        ...,\n",
       "        [ 25.,  44.,  51., ...,   4.,   6.,  14.],\n",
       "        [  0.,   0.,   0., ...,   6.,   2.,   1.],\n",
       "        [ 49., 113.,   7., ...,   2.,   6.,   3.]], dtype=float32),\n",
       " array([[ 15.,   9.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   0.,   2.],\n",
       "        [  3.,   1.,   1., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 13.,  28.,  19., ...,   1.,   2., 121.],\n",
       "        [  1.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 57., 28., 21.],\n",
       "        [75., 26.,  3., ...,  0.,  0.,  0.],\n",
       "        [44., 24.,  7., ...,  1.,  0.,  1.],\n",
       "        ...,\n",
       "        [22., 55., 39., ...,  0.,  3., 12.],\n",
       "        [ 4.,  2.,  3., ...,  0.,  0.,  7.],\n",
       "        [14., 40., 36., ...,  1.,  5., 10.]], dtype=float32),\n",
       " array([[ 46.,   2.,   0., ...,  17., 129.,  31.],\n",
       "        [  7.,  28.,  86., ...,   0.,   0.,   0.],\n",
       "        [  9.,  20.,   3., ...,   2.,   0.,   0.],\n",
       "        ...,\n",
       "        [106.,   5.,   0., ...,   0.,   1.,   9.],\n",
       "        [  0.,   0.,   1., ...,   1.,   0.,   0.],\n",
       "        [ 11.,  29.,  42., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  2.,  2.,  9.],\n",
       "        [ 1.,  1.,  0., ..., 11.,  6.,  1.],\n",
       "        [33.,  7.,  0., ...,  1.,  8., 91.],\n",
       "        ...,\n",
       "        [10.,  5.,  0., ...,  1.,  0.,  7.],\n",
       "        [ 2.,  1.,  1., ...,  3.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 59., 21.,  2.]], dtype=float32),\n",
       " array([[ 0.,  0.,  1., ...,  0.,  0.,  3.],\n",
       "        [13., 23., 31., ..., 28., 39., 15.],\n",
       "        [17., 22.,  4., ..., 15., 20., 64.],\n",
       "        ...,\n",
       "        [59., 70., 21., ...,  4.,  1.,  3.],\n",
       "        [ 5.,  2.,  2., ...,  6.,  1.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  56.,  15.,  19.],\n",
       "        [  0.,   0.,   0., ...,  33.,  74.,  20.],\n",
       "        [ 35.,   1.,   1., ...,  26.,   1.,   3.],\n",
       "        ...,\n",
       "        [124.,  68.,  18., ...,   0.,   0.,   0.],\n",
       "        [  3.,   0.,   2., ...,   0.,   0.,   1.],\n",
       "        [  5.,  57., 129., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  3.,   5.,   8., ...,  52.,   2.,   6.],\n",
       "        [ 44.,   0.,   1., ...,   5.,   7.,   3.],\n",
       "        [ 19.,  13., 152., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 21.,  15.,   4., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,  15.,   8.,  23.],\n",
       "        [  9.,  10.,  10., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   2.,   1., ...,   0.,   0.,   0.],\n",
       "        [  9.,  19.,   4., ...,   0.,   0.,   1.],\n",
       "        [  0.,  48., 138., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,  48.,  23., ...,   1.,   1.,   7.],\n",
       "        [ 25.,   7.,   5., ...,  38.,  72.,   8.],\n",
       "        [  0.,   0.,   0., ...,  17.,  15.,  18.]], dtype=float32),\n",
       " array([[ 94.,  13.,  11., ...,   4.,   0.,   0.],\n",
       "        [  1.,  45., 138., ...,   2.,   3.,   7.],\n",
       "        [  4.,   5.,   9., ...,   0.,   4.,   6.],\n",
       "        ...,\n",
       "        [ 44., 122.,  64., ...,   1.,   2.,   9.],\n",
       "        [  8.,  30.,  35., ...,  33.,  14.,  10.],\n",
       "        [ 12.,  37.,  30., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[ 15.,   0.,   0., ...,   8.,   2.,   3.],\n",
       "        [  9.,   0.,   0., ...,  15.,   3.,  16.],\n",
       "        [128.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 16.,  10.,  16., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  48.,  47.,   8.],\n",
       "        [ 22.,   9.,   4., ...,   1.,   0.,   2.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   9.,   1.,   1.],\n",
       "        [  0.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   3.,   3., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 69.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 46.,  12.,   0., ...,  16.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,  63., 150.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   9.],\n",
       "        [ 22.,   5.,   0., ...,   0.,   0.,   0.],\n",
       "        [  7.,  37.,  58., ...,   2.,   6.,  31.],\n",
       "        ...,\n",
       "        [  0.,   1., 103., ...,   0.,   0.,   0.],\n",
       "        [ 10.,  37.,   7., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  11.,   0.,   0.],\n",
       "        [ 95.,  37.,  37., ...,   0.,   0.,   0.],\n",
       "        [134.,   2.,   2., ...,   5.,   0.,   0.],\n",
       "        ...,\n",
       "        [131.,  62.,   1., ...,  35.,   9.,   7.],\n",
       "        [ 74.,  73.,  30., ...,   1.,   1.,   4.],\n",
       "        [  1.,   1.,   1., ...,   6.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   0.,   1., ...,  10.,   5.,   2.],\n",
       "        [ 22., 126., 115., ...,   0.,   0.,   0.],\n",
       "        [  3.,  23.,  13., ...,   0.,   1.,  18.],\n",
       "        ...,\n",
       "        [ 40.,   2.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 54.,  80.,   5., ...,   3.,   6.,   7.],\n",
       "        [  3.,   1.,   0., ...,  65.,   2.,  15.]], dtype=float32),\n",
       " array([[  1.,  36., 138., ...,   0.,   0.,   0.],\n",
       "        [  7.,  20., 134., ...,   0.,   0.,   0.],\n",
       "        [  3.,   4.,   2., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   8.,  88., ...,   4.,   1.,   1.],\n",
       "        [  0.,  10., 115., ...,  11.,   5.,   1.],\n",
       "        [  2.,  15.,  96., ...,  44.,  32.,   6.]], dtype=float32),\n",
       " array([[27.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  2.,  8.],\n",
       "        [16., 23., 20., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  4., 50., 39.],\n",
       "        [12.,  8., 12., ...,  5.,  0.,  0.],\n",
       "        [ 0.,  0., 22., ..., 40.,  2.,  6.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 7., 13., 14., ...,  0.,  0.,  0.],\n",
       "        [13., 28., 27., ...,  0.,  0., 16.],\n",
       "        ...,\n",
       "        [69.,  0.,  0., ...,  3.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  8.,  1.,  5.],\n",
       "        [ 4.,  0.,  0., ...,  2., 28., 44.]], dtype=float32),\n",
       " array([[ 8.,  3.,  2., ...,  0.,  0.,  0.],\n",
       "        [96.,  6.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 24.,  0.,  2.],\n",
       "        ...,\n",
       "        [59.,  3.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  1.,  0., ...,  1.,  1.,  1.],\n",
       "        [52.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  32.,   4.,  18.],\n",
       "        [  0.,   0.,   0., ...,  42.,  38.,  29.],\n",
       "        [  1.,   9.,   5., ...,   0.,   0.,  23.],\n",
       "        ...,\n",
       "        [127.,  61.,  27., ...,   0.,   0.,   0.],\n",
       "        [  5.,   0.,   0., ...,   1.,  25., 119.],\n",
       "        [ 38.,   1.,   3., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 23.,   5.,   2., ...,   0.,   0.,   0.],\n",
       "        [  4.,   3.,   1., ...,  88.,  32.,   2.],\n",
       "        [ 13.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  5.,   0.,   0., ..., 128.,   1.,   3.],\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [  2.,   0.,   0., ...,  22.,  69.,   3.]], dtype=float32),\n",
       " array([[10.,  3.,  1., ...,  6.,  2.,  0.],\n",
       "        [68., 15.,  0., ...,  0.,  0.,  0.],\n",
       "        [15., 28., 21., ...,  3.,  0.,  4.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  8.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  0.,  0.],\n",
       "        [ 5.,  8.,  3., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  1.,   0.,   1., ...,   1.,   1.,   1.],\n",
       "        [  5.,  48., 138., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  5.,   4.,   3., ...,   0.,   0.,   0.],\n",
       "        [  1.,   2.,  24., ...,   6.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,  33.,   2.,   2.]], dtype=float32),\n",
       " array([[  0.,  13.,  91., ...,   0.,   1.,  38.],\n",
       "        [  6.,   6.,   9., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   6.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,  12.,   9.],\n",
       "        [  1.,  12., 144., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  24.,  36.,  24.],\n",
       "        [  1.,   1.,   1., ...,  12.,   1.,   0.],\n",
       "        [  1.,   6.,   4., ...,   5.,   9.,  26.],\n",
       "        ...,\n",
       "        [ 41.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 23.,   1.,   0., ...,  21.,  30.,  13.],\n",
       "        [  2., 151.,  32., ...,   1.,   3.,   5.]], dtype=float32),\n",
       " array([[17.,  0.,  0., ..., 20.,  5.,  3.],\n",
       "        [12.,  5.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  7., 20., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [21.,  0.,  0., ...,  4., 25., 37.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  8., ..., 63.,  5.,  0.]], dtype=float32),\n",
       " array([[73., 11.,  0., ..., 36., 28., 70.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2.,  4.,  3.],\n",
       "        ...,\n",
       "        [46.,  0.,  0., ...,  3.,  1.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 94., 47.,  7.],\n",
       "        [ 0.,  0.,  0., ..., 26., 49., 26.]], dtype=float32),\n",
       " array([[  0.,   8.,  50., ...,   0.,  43.,  29.],\n",
       "        [ 56., 142., 142., ...,   6.,   2.,   1.],\n",
       "        [  0.,   0.,   0., ...,  50.,   1.,   1.],\n",
       "        ...,\n",
       "        [  8.,  11.,  68., ...,   0.,   0.,   0.],\n",
       "        [ 16.,  81.,  25., ...,   0.,   0.,   0.],\n",
       "        [ 56.,  54.,   4., ...,   0.,   3.,  12.]], dtype=float32),\n",
       " array([[135.,  78.,  27., ...,   0.,   0.,   0.],\n",
       "        [ 57.,   5.,   1., ...,   0.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   2.,  94.,  24.],\n",
       "        ...,\n",
       "        [ 49.,  12.,   0., ...,   9.,  10.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,  11.,  54.],\n",
       "        [ 21.,   7.,   1., ...,   9.,   4.,   0.]], dtype=float32),\n",
       " array([[ 62.,   0.,   0., ...,   6.,  11.,  13.],\n",
       "        [  0.,   4., 163., ...,   0.,   0.,  12.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1.,   4.,  55.],\n",
       "        [  0.,   0.,   0., ...,  10.,   1.,   3.],\n",
       "        [  0.,   0.,   0., ...,   0.,   4.,  21.]], dtype=float32),\n",
       " array([[85., 61.,  1., ...,  2.,  2., 13.],\n",
       "        [ 1.,  0.,  0., ..., 57.,  8.,  1.],\n",
       "        [ 1.,  0.,  0., ..., 61.,  1.,  1.],\n",
       "        ...,\n",
       "        [ 4.,  4.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 7.,  2.,  0., ...,  0.,  2.,  1.],\n",
       "        [ 2.,  7.,  2., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 22.,   6.,   1., ...,   0.,   0.,  56.],\n",
       "        [  5.,   4.,   3., ...,   5.,   6.,  60.],\n",
       "        ...,\n",
       "        [137.,  12.,   0., ...,   3.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   1.]], dtype=float32),\n",
       " array([[ 6.,  4.,  1., ..., 11.,  2.,  1.],\n",
       "        [ 0.,  3., 81., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ..., 11., 50., 34.],\n",
       "        ...,\n",
       "        [ 3.,  1.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 1.,  0.,  0., ...,  3.,  0.,  1.],\n",
       "        [ 1.,  0.,  0., ...,  4.,  9.,  0.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,  80.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 131.,  48.,   9.],\n",
       "        [ 77.,  43.,   2., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   8.,  10.,   3.],\n",
       "        [ 10.,   2.,   0., ...,   0.,   0.,   6.],\n",
       "        [ 57.,   3.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 33.,  36.,  13., ...,  25.,  38.,  16.],\n",
       "        [ 33.,   0.,   4., ..., 112.,  13.,   5.],\n",
       "        [  3.,  73.,  25., ...,   1.,   0.,   7.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  64.,  67.,  37.],\n",
       "        [146.,  15.,   0., ...,   0.,   0.,   0.],\n",
       "        [  2.,   2.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ..., 111.,  14.,   0.],\n",
       "        [  0.,   0.,   0., ...,  20.,   3.,   6.],\n",
       "        [  0.,   0.,   0., ...,  13.,   1.,   3.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  20.,  61.,  81.],\n",
       "        [ 14.,  21.,  79., ...,   0.,   0.,   0.],\n",
       "        [ 16.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 4.,  1.,  0., ..., 18., 14.,  8.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  2.,  5.],\n",
       "        [ 0.,  0.,  0., ..., 25., 18.,  7.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 88., 52., 51.],\n",
       "        [ 1.,  1.,  0., ..., 66.,  6.,  0.],\n",
       "        [ 2.,  0.,  0., ...,  2.,  8., 70.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  3.,  7., 26.],\n",
       "        [32., 23., 40., ...,  9., 12., 31.],\n",
       "        [ 2., 10., 11., ..., 11.,  4.,  7.],\n",
       "        ...,\n",
       "        [ 3.,  1.,  0., ...,  1.,  1.,  2.],\n",
       "        [ 0.,  0.,  3., ..., 68., 11.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 11., 15., 21.]], dtype=float32),\n",
       " array([[  1.,   0.,  20., ...,   2.,   1.,  17.],\n",
       "        [ 16.,   1.,  13., ...,   0.,   0.,  16.],\n",
       "        [ 79.,  66., 109., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  4.,   1.,   0., ...,   0.,   0.,   2.],\n",
       "        [ 18.,   2.,   2., ...,   0.,   0.,   0.],\n",
       "        [  4.,   1.,   0., ...,   0.,   0.,  45.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  9.,  1.,  0.],\n",
       "        [ 9.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [13.,  1.,  0., ...,  4.,  1.,  1.],\n",
       "        ...,\n",
       "        [ 6.,  2.,  0., ...,  6.,  2.,  0.],\n",
       "        [31.,  6.,  2., ...,  2.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 16.]], dtype=float32),\n",
       " array([[ 47.,  67.,  44., ...,   0.,   0.,   0.],\n",
       "        [  4.,  29.,  38., ...,   1.,   0.,   0.],\n",
       "        [121.,  18.,   4., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 49.,  63.,   8., ...,  21., 142.,  10.],\n",
       "        [  1.,   1.,   1., ...,  13.,   0.,   0.],\n",
       "        [ 15.,   0.,   0., ...,   0.,   1.,   1.]], dtype=float32),\n",
       " array([[ 5.,  9.,  8., ..., 19., 27.,  8.],\n",
       "        [88., 21., 33., ...,  5.,  3.,  4.],\n",
       "        [ 6., 45., 23., ..., 12.,  4.,  9.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  7., 17., 15.],\n",
       "        [ 0.,  0.,  0., ..., 22.,  7.,  0.],\n",
       "        [ 3.,  5., 12., ..., 51., 20.,  6.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   0.,   0.,   5.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   1., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [  1.,   2.,   9., ..., 125.,   4.,  13.],\n",
       "        [ 43.,   1.,   4., ...,  10.,   4.,  11.],\n",
       "        [  1.,   1.,   1., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[17.,  3.,  0., ...,  0.,  0.,  0.],\n",
       "        [90., 60.,  7., ...,  1., 11., 39.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [15.,  0.,  0., ...,  0.,  2.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  9.,  5.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.]], dtype=float32),\n",
       " array([[ 40.,  48.,  44., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  14.,   0.,   0.],\n",
       "        [  2.,   0.,   0., ...,  86.,   6.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   5., ...,   1.,   2.,  18.],\n",
       "        [  0.,   0.,   2., ...,   1.,   0.,   0.],\n",
       "        [ 59., 147.,  68., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 27.,  12.,   6., ...,  20.,  46.,  31.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   1.],\n",
       "        ...,\n",
       "        [  3.,  24., 104., ...,   0.,   0.,   0.],\n",
       "        [  3.,   2.,   1., ...,   2.,   1.,   1.],\n",
       "        [  0.,   0.,   0., ...,   3.,  12.,  13.]], dtype=float32),\n",
       " array([[92., 54.,  7., ...,  2.,  0.,  0.],\n",
       "        [ 1.,  7.,  0., ..., 19.,  8., 12.],\n",
       "        [ 2.,  1.,  0., ...,  9., 26., 31.],\n",
       "        ...,\n",
       "        [36.,  1., 10., ...,  5.,  4.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 12.,  4., 13.],\n",
       "        [18.,  6.,  5., ...,  0., 22., 29.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  3., ...,  0.,  8., 35.],\n",
       "        [ 5.,  4.,  1., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  1.,  4., 21.],\n",
       "        [17., 17., 20., ..., 10.,  5.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 21.,  5.,  1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  3.,  3.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 15., 44., 64.],\n",
       "        [ 0.,  0.,  0., ..., 97., 37.,  1.],\n",
       "        ...,\n",
       "        [ 2.,  1.,  2., ..., 18., 19.,  5.],\n",
       "        [ 2.,  2.,  2., ..., 97., 16.,  4.],\n",
       "        [14., 12.,  3., ...,  1.,  5.,  9.]], dtype=float32),\n",
       " array([[ 17.,   2.,   0., ...,   0.,  43., 131.],\n",
       "        [123., 139.,  26., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   8.,  13.],\n",
       "        ...,\n",
       "        [  2.,   1.,   7., ...,   0.,   0.,   0.],\n",
       "        [ 24.,   3.,   0., ...,  76., 121.,  24.],\n",
       "        [ 25.,  63., 116., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 22.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  75.,   3.,   1.],\n",
       "        [ 40.,  13.,   2., ...,   0.,  10.,   7.],\n",
       "        ...,\n",
       "        [121.,   0.,   0., ...,  82.,   2.,   4.],\n",
       "        [  1.,   0.,   0., ...,  30.,   0.,   1.],\n",
       "        [  2.,   2.,  12., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 50.,  15.,  12., ...,   6.,  61.,  95.],\n",
       "        [ 18.,  24.,  23., ...,  11.,   6.,  20.],\n",
       "        [ 45.,  22.,  10., ...,  39.,  68.,   3.],\n",
       "        ...,\n",
       "        [108.,   0.,   0., ...,  15.,   0.,   1.],\n",
       "        [ 75.,   4.,   0., ...,   8.,  16.,  12.],\n",
       "        [  0.,  17.,  33., ...,   8.,   8.,  27.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ..., 55., 18., 15.],\n",
       "        [15.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [30.,  0.,  0., ...,  0., 40., 14.],\n",
       "        ...,\n",
       "        [ 6.,  0.,  0., ..., 14., 19., 14.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  4.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  8.]], dtype=float32),\n",
       " array([[26.,  2.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  1.,  8., ...,  1.,  4., 13.],\n",
       "        [ 7.,  0.,  0., ...,  2., 27., 17.],\n",
       "        ...,\n",
       "        [ 5.,  2.,  0., ...,  0.,  2., 15.],\n",
       "        [16., 30.,  0., ...,  0., 20., 11.],\n",
       "        [ 0.,  1.,  4., ...,  1.,  6.,  7.]], dtype=float32),\n",
       " array([[ 18.,   2.,   1., ...,   0.,   0.,   0.],\n",
       "        [  8.,   4.,   0., ...,   1.,   2.,   2.],\n",
       "        [  0.,   0.,   0., ...,   2.,   3.,   6.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 11.,   9., 139., ...,   5.,  15.,   8.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,  21.]], dtype=float32),\n",
       " array([[  2., 132., 137., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 48.,  78.,   3., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  3.,   3.,   0., ...,   0.,   0.,  33.],\n",
       "        [  0.,   1.,   0., ...,  32.,   4.,  28.],\n",
       "        [ 69.,  33.,  10., ...,  11.,  17.,  17.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  37.,  15.,  16.],\n",
       "        [  6., 124., 124., ...,   0.,   0.,   0.],\n",
       "        [ 39.,   2.,   1., ...,   8.,  13.,   4.],\n",
       "        ...,\n",
       "        [  8.,   0.,   0., ...,  28.,  28.,  11.],\n",
       "        [  4.,   0.,   0., ...,   1.,   1.,   1.],\n",
       "        [  9., 150.,  47., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   2.,   2.,   2.],\n",
       "        [  1.,   1.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   4., ...,  17.,   1.,  17.],\n",
       "        ...,\n",
       "        [  2.,  33., 150., ...,   0.,   0.,   0.],\n",
       "        [  6.,  69., 180., ...,   0.,   0.,   0.],\n",
       "        [ 20.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  8.,   0.,   0., ..., 135.,  56.,   0.],\n",
       "        [  3.,  82., 118., ...,   0.,   0.,   0.],\n",
       "        [  4.,   1.,  86., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [  2.,   2.,   2., ...,   1.,   1.,  39.],\n",
       "        [  7.,  14.,  31., ...,  20.,   1.,   2.],\n",
       "        [  5.,  20.,  40., ...,  33.,  50.,  32.]], dtype=float32),\n",
       " array([[  8., 148.,  68., ...,   1.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,  14.,   8.,   3.],\n",
       "        [135., 103.,   4., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 20.,   0.,   0., ...,  11.,   2.,   0.],\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 13.,  10.,  60., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  92.,   1.,   0.],\n",
       "        [ 12.,  17.,   6., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  20.,  31.,  24.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 45.,   3.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 63., 120.,  71., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 33.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [127.,  22.,   4., ...,   6.,   6.,   0.],\n",
       "        [  2., 141., 141., ...,   1.,   2.,   1.],\n",
       "        ...,\n",
       "        [  3.,  17.,   2., ...,   0.,   0.,   0.],\n",
       "        [101.,  92.,   0., ...,  26.,   4.,   1.],\n",
       "        [  0.,   0.,   0., ...,   3.,  20.,   2.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,  16.,  65.],\n",
       "        [  0.,   0.,   0., ...,  44.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 11.,  56., 131., ...,   0.,   0.,   0.],\n",
       "        [  2.,  64., 157., ...,  12.,  18.,  24.],\n",
       "        [ 10.,  12.,  16., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  3.],\n",
       "        [ 5., 36., 10., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 8.,  7.,  9., ..., 15.,  3.,  8.],\n",
       "        [50., 10.,  1., ..., 17., 10.,  1.],\n",
       "        [69., 13.,  2., ..., 48.,  4.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,  32., ...,   0.,   0.,  44.],\n",
       "        [127.,  12.,   0., ...,   0.,   0.,   0.],\n",
       "        [  5.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.],\n",
       "        [ 16.,  74.,  23., ...,   2.,   2.,   1.],\n",
       "        [132.,  41.,   3., ...,   0.,   0.,   2.]], dtype=float32),\n",
       " array([[ 9.,  4.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [16.,  3., 11., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 27.,  8.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 33.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 12., 32., 27.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   6.,   5.,  79.],\n",
       "        [ 65.,  55.,  31., ...,   0.,   0.,   0.],\n",
       "        [ 21.,   6.,   2., ...,   0.,   0.,   4.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,  15.,  59.],\n",
       "        [  6.,  10.,   3., ..., 121.,  77.,  18.],\n",
       "        [  0.,   0.,   0., ...,   0., 108., 123.]], dtype=float32),\n",
       " array([[ 39., 135.,   8., ...,   7.,   1.,   1.],\n",
       "        [  0.,   1.,   3., ...,   0.,   0.,   0.],\n",
       "        [ 53.,  78.,   9., ...,  53.,  39.,   5.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,   7.,   7.],\n",
       "        [ 16.,  72., 134., ...,   5., 134.,  61.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   4., ...,  34.,  81., 135.],\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [  1.,   3.,  31., ...,   9.,   8.,  12.],\n",
       "        ...,\n",
       "        [  0.,   2.,   3., ...,   2.,  12.,  25.],\n",
       "        [  0.,   1.,   2., ...,   0.,   3.,  26.],\n",
       "        [  0.,   0.,   3., ...,   1.,  21.,  80.]], dtype=float32),\n",
       " array([[  0.,  31., 149., ...,   0.,   0.,   4.],\n",
       "        [  0.,   0.,   0., ...,  26.,  31.,   2.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   0.,   3., ...,   0.,   0.,   5.],\n",
       "        [118.,  10.,   0., ...,   1.,   2.,   4.],\n",
       "        [  9.,   0.,   0., ...,   1.,   1.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  42.,   1.,   3.],\n",
       "        [  0.,   0.,   0., ...,  22.,   3.,   3.],\n",
       "        [100.,   0.,   0., ...,   0.,  17.,  41.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   6.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,  17.,  22.,   1.],\n",
       "        [ 64.,  53.,   5., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  2., 16.,  5.],\n",
       "        [11., 14., 11., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 20., 23., 12.],\n",
       "        ...,\n",
       "        [ 0.,  1.,  1., ...,  0.,  4., 26.],\n",
       "        [36.,  1.,  3., ...,  5.,  0.,  5.],\n",
       "        [ 0.,  0., 11., ..., 34., 20.,  3.]], dtype=float32),\n",
       " array([[  1.,  77., 141., ...,   1.,  27.,  73.],\n",
       "        [ 45.,  51.,  29., ...,   7.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  15., 128.,  14.],\n",
       "        ...,\n",
       "        [ 26.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 58.,  14.,   4., ...,   7.,  14.,   2.],\n",
       "        [ 27.,  13.,  72., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 20.,   6.,  65., ...,   0.,   0.,   0.],\n",
       "        [  6.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 16.,  59., 123., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,   9.,  43.,   3.],\n",
       "        [  1.,   0.,   0., ...,  34.,   6.,  50.],\n",
       "        [  4.,  35.,  99., ...,  69., 114.,   9.]], dtype=float32),\n",
       " array([[  9.,   3.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,  10.,  26.],\n",
       "        ...,\n",
       "        [  1.,  38., 130., ...,   0.,   0.,   4.],\n",
       "        [  0.,  15.,  75., ...,   0.,   0.,   0.],\n",
       "        [  5.,  10.,  10., ...,   8.,   0.,   3.]], dtype=float32),\n",
       " array([[ 6.,  4.,  1., ...,  0.,  1.,  0.],\n",
       "        [67., 69.,  6., ...,  0.,  0.,  2.],\n",
       "        [ 2.,  0.,  0., ..., 73.,  7., 10.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  1., ...,  0.,  0.,  1.],\n",
       "        [53., 27.,  2., ...,  1.,  0.,  0.],\n",
       "        [ 3., 26.,  4., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 32.,   7.,   2., ...,   4.,   1.,   0.],\n",
       "        [ 13.,   5.,  10., ...,   0.,   0.,   0.],\n",
       "        [  1.,   1.,   2., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,   0.,   0., ..., 128.,   6.,   0.],\n",
       "        [134.,   3.,   1., ...,   1.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  5., ...,  0.,  0.,  0.],\n",
       "        [19.,  4.,  0., ...,  0.,  1.,  0.],\n",
       "        [ 1.,  4.,  6., ...,  7.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  5.,  5., ...,  2.,  0.,  6.],\n",
       "        [ 0.,  0.,  3., ...,  2.,  2.,  5.],\n",
       "        [14.,  3.,  0., ...,  4.,  5.,  7.]], dtype=float32),\n",
       " array([[ 55.,  22.,   8., ...,   0.,   0.,   0.],\n",
       "        [  7.,  12.,   1., ...,   1.,   1.,   0.],\n",
       "        [134.,  78.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 15.,   1.,   0., ...,   0.,   1.,  27.],\n",
       "        [  3.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  5.,   1.,   0., ...,  52.,  17.,  41.]], dtype=float32),\n",
       " array([[18., 17.,  1., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ..., 26.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 16.,  4.,  5.],\n",
       "        ...,\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 8.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  1.,  0., ...,  3.,  1.,  0.]], dtype=float32),\n",
       " array([[  4.,   1.,   0., ...,   8.,   0.,   0.],\n",
       "        [  0.,   9.,  70., ...,   0.,   0.,   0.],\n",
       "        [ 24.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 20.,   7.,  26., ...,   0.,   0.,   0.],\n",
       "        [126.,  50.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   2.,  45., ...,   0.,   2.,   1.],\n",
       "        [ 25., 169.,  39., ...,   0.,   0.,   0.],\n",
       "        [  1.,  31.,   1., ...,   1.,   0.,   1.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 31.,  23.,  27., ...,  13.,   1.,   0.],\n",
       "        [ 63.,   7.,  20., ...,   0.,   5.,   3.]], dtype=float32),\n",
       " array([[ 48.,   6.,   7., ...,   0.,   0.,   0.],\n",
       "        [  9.,   0.,   0., ...,  87.,  13.,   1.],\n",
       "        [  1.,   0.,   0., ...,   2.,   0.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [130.,  55.,   0., ..., 106.,  11.,   0.],\n",
       "        [ 69.,  85., 122., ...,  20.,   2.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 25., 97.,  1.],\n",
       "        [54.,  5., 18., ...,  0.,  0.,  0.],\n",
       "        [ 1., 21., 22., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 11., 11.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  4.,  6.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  2., 33.]], dtype=float32),\n",
       " array([[  0.,   0.,   3., ...,  10.,   4.,   4.],\n",
       "        [ 42.,   4.,   1., ...,   1.,   9.,   1.],\n",
       "        [ 19.,   0.,   0., ...,  18.,   5.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  8.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [122.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[11.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  4.,  8., ..., 21., 13.,  0.],\n",
       "        [80.,  1.,  5., ..., 39., 58.,  3.],\n",
       "        ...,\n",
       "        [13.,  1.,  0., ...,  0.,  1.,  6.],\n",
       "        [ 0.,  5., 13., ...,  0.,  1., 11.],\n",
       "        [11.,  1.,  0., ...,  2., 11.,  9.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  18.,  32.,   6.],\n",
       "        [  2.,  11.,  48., ...,   0.,   1.,   8.],\n",
       "        [126.,  18.,   4., ...,   0.,   1.,   1.],\n",
       "        ...,\n",
       "        [  6.,   1.,   0., ...,  15.,  70.,  52.],\n",
       "        [  0.,   0.,   0., ...,   3.,   5.,  26.],\n",
       "        [ 20.,  18.,  43., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  54.,  98.,   2.],\n",
       "        [  0.,   0.,   0., ...,  13.,   3.,   6.],\n",
       "        [  1.,   1.,   0., ...,  28.,   2.,   1.],\n",
       "        ...,\n",
       "        [ 17., 117.,  17., ...,   0.,   1.,   1.],\n",
       "        [ 60.,  88.,  19., ...,   0.,   0.,   0.],\n",
       "        [  0.,   4.,  18., ...,   5.,   8.,   6.]], dtype=float32),\n",
       " array([[  4.,   2.,   1., ...,   0.,   0.,   0.],\n",
       "        [126.,   6.,   0., ...,   0.,   4.,   6.],\n",
       "        [  4.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   3.,  63., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   3.],\n",
       "        [110.,   4.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  1.,  1., ..., 18.,  5., 36.],\n",
       "        [ 1.,  0.,  0., ..., 16.,  3.,  3.],\n",
       "        [ 0.,  0.,  0., ..., 16., 38.,  9.],\n",
       "        ...,\n",
       "        [10., 36., 74., ..., 67.,  5.,  4.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  3.,  0.],\n",
       "        [ 0.,  1.,  1., ..., 77.,  0.,  1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  2.,  3., 47.],\n",
       "        [ 0.,  0.,  0., ..., 55.,  8.,  0.],\n",
       "        [57.,  9., 13., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [10., 21., 35., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  4.,  0.,  2.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 15.,  6.,  4.],\n",
       "        [36., 79., 24., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 45., 86., 35.],\n",
       "        ...,\n",
       "        [ 0.,  2.,  0., ..., 20., 34., 12.],\n",
       "        [31., 33., 43., ...,  0.,  0.,  0.],\n",
       "        [22., 26.,  5., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[53., 12.,  3., ...,  4.,  6., 13.],\n",
       "        [ 0.,  0.,  0., ..., 84., 24., 38.],\n",
       "        [27., 12.,  7., ..., 46., 67., 10.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  8.,  0.,  3.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  3., 25.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  1., 28.]], dtype=float32),\n",
       " array([[ 16.,   3.,   3., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   4., ...,   0.,   0.,   0.],\n",
       "        [133.,  50.,   2., ...,   4.,  25.,  11.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,   1.,   1.,   0.],\n",
       "        [  0.,   0.,   0., ...,  28.,   5.,   3.],\n",
       "        [ 39.,   4.,   3., ...,   1.,   1.,   1.]], dtype=float32),\n",
       " array([[ 13.,   4.,   0., ...,  42.,  38.,   3.],\n",
       "        [  8., 148.,  68., ...,   1.,   1.,   0.],\n",
       "        [  0.,   4.,  24., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   4.,  26.,  33.],\n",
       "        [  4.,   4.,  21., ...,   0.,   0.,   0.],\n",
       "        [ 26.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  3.,   0.,   0., ...,  42.,   7.,   1.],\n",
       "        [ 18.,  24.,  37., ...,   0.,   5.,  49.],\n",
       "        [ 17.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 70.,  21.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 22., 126.,  12., ...,   0.,  11.,  12.],\n",
       "        [  3.,   0.,   0., ...,  21.,  11.,   8.]], dtype=float32),\n",
       " array([[ 76., 129.,  45., ...,   0.,   0.,   0.],\n",
       "        [ 12.,   0.,   0., ...,  20.,  17.,  44.],\n",
       "        [  0.,   0.,  78., ...,   3.,   9.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  29.,  48.,   6.],\n",
       "        [ 14.,  65.,  48., ...,   1.,   0.,   0.],\n",
       "        [141.,  22.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   5., 139., ...,   0.,   0.,   0.],\n",
       "        [ 39.,   8.,   3., ...,   0.,   0.,   1.],\n",
       "        [ 44.,   1.,   1., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 58.,   0.,   0., ...,   1.,   5.,  33.],\n",
       "        [ 95.,  38.,   1., ...,  20.,  11.,   7.],\n",
       "        [  8.,  21.,  44., ...,   1.,  11.,  24.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1., 113.,  25.],\n",
       "        [  2.,   0.,  11., ...,   0.,   0.,   0.],\n",
       "        [128.,   0.,   0., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  3.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 25.,   3.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 94., 103.,   8., ...,   0.,   0.,   0.],\n",
       "        [  4.,  25.,  65., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 133., 133.,  46.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  10.,   0.,   0.],\n",
       "        [  7.,   0.,   0., ...,   3.,   0.,   0.],\n",
       "        [ 28.,   8.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0., 13., ..., 35.,  6.,  8.],\n",
       "        [58.,  2.,  4., ...,  0.,  0.,  3.],\n",
       "        ...,\n",
       "        [41., 36.,  7., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  2., 16., ...,  0.,  0.,  0.],\n",
       "        [ 3.,  4., 19., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,  16.,   1.,  10.],\n",
       "        [  0.,   1.,  10., ...,   3.,   1.,   6.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,   2.,   2.],\n",
       "        [  4.,   0.,   0., ...,   9.,   3.,  19.],\n",
       "        [  0.,   0.,   0., ...,  11., 111.,  71.]], dtype=float32),\n",
       " array([[  0.,   0.,  73., ...,   0., 124., 124.],\n",
       "        [ 76.,  60.,   1., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   2., ...,   1.,  21.,  14.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  27.,  21.,  11.],\n",
       "        [ 30.,  31.,  41., ...,   0.,   0.,   0.],\n",
       "        [ 34.,   1.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,   6.,  42., ..., 113.,  72.,  89.],\n",
       "        [  0.,   0.,   0., ...,   8.,  30., 129.],\n",
       "        [ 34.,  23.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,  20.,  54., ...,   1.,   1.,  10.],\n",
       "        [108., 100.,  24., ...,   0.,   0.,   0.],\n",
       "        [ 98.,  77.,   0., ...,   0.,   0.,   3.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  4., 93., 44.],\n",
       "        [ 7.,  1.,  0., ...,  8.,  2.,  0.],\n",
       "        [40., 31.,  1., ..., 19.,  2.,  1.],\n",
       "        ...,\n",
       "        [ 4.,  0.,  0., ...,  0.,  0.,  5.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  7.,  9.],\n",
       "        [65., 11.,  5., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  8.,  17.,  35., ...,   3.,   3.,  17.],\n",
       "        [  7.,   1.,   0., ...,  26.,  82.,  47.],\n",
       "        [ 59.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  9.,  51.,  37., ...,   0.,   2., 128.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 21.,   8.,   6., ...,   0.,   1.,  58.]], dtype=float32),\n",
       " array([[  3.,  36.,  70., ...,   0.,   0.,   0.],\n",
       "        [ 18.,  36.,  45., ...,   0.,   0.,   2.],\n",
       "        [ 18.,  74.,  19., ...,  13.,  15.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 79.,  79.,  34., ..., 124., 108.,   7.],\n",
       "        [  2.,  18.,  56., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,  14.],\n",
       "        [ 13.,  24.,  21., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 16.,  40.,  10., ...,   4.,   2.,   1.],\n",
       "        [  0.,   2., 112., ...,   0.,   2.,  19.],\n",
       "        [  0.,   0.,   7., ...,  38., 136., 136.]], dtype=float32),\n",
       " array([[ 4.,  4., 16., ...,  0.,  0.,  1.],\n",
       "        [22., 10.,  1., ...,  0.,  0.,  0.],\n",
       "        [16.,  9.,  2., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 8.,  0.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [36., 35.,  0., ..., 32.,  0.,  0.]], dtype=float32),\n",
       " array([[  3.,   0.,   0., ...,  17.,  12.,  15.],\n",
       "        [ 60.,  25.,  24., ...,   1.,   0.,   0.],\n",
       "        [ 24.,  12.,  11., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [130.,  10.,   2., ...,  14.,  11.,  29.],\n",
       "        [ 51.,   0.,   0., ...,  43.,  50.,  60.],\n",
       "        [  5.,  41.,  92., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 21., 16.,  8.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [11.,  1.,  0., ..., 25., 15.,  8.],\n",
       "        ...,\n",
       "        [69., 23.,  3., ...,  0.,  0.,  0.],\n",
       "        [57., 14., 13., ...,  2.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  2., 11.]], dtype=float32),\n",
       " array([[ 35.,   2.,   3., ...,   0.,   5., 129.],\n",
       "        [  0.,   0.,   0., ...,  31.,   9.,   2.],\n",
       "        [ 86.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,  34.,   7.,  50.],\n",
       "        [ 42.,  91.,  35., ...,  26.,   2.,   0.],\n",
       "        [ 69.,  87.,  16., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ..., 10.,  0.,  2.],\n",
       "        [ 0.,  3.,  9., ...,  0.,  0.,  0.],\n",
       "        [30.,  0.,  0., ..., 31.,  0.,  0.],\n",
       "        ...,\n",
       "        [13.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [27., 18.,  1., ...,  1.,  0.,  0.],\n",
       "        [12.,  5.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 11.,  20.,   7., ...,   0.,   0.,   0.],\n",
       "        [ 26.,  33.,   1., ...,   2.,  32.,  46.],\n",
       "        [103.,  11.,   1., ...,  96.,  30.,   0.],\n",
       "        ...,\n",
       "        [  6.,  14.,  16., ...,   1.,   1.,  12.],\n",
       "        [  0.,   0.,   1., ...,   3.,   8.,   6.],\n",
       "        [  8.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   1.,   3.,  34.],\n",
       "        [  0.,   0.,   0., ..., 127., 127.,   4.],\n",
       "        [  4.,   4.,   9., ...,   0.,   1.,   1.],\n",
       "        ...,\n",
       "        [ 59., 158.,  23., ...,   0.,  25.,  76.],\n",
       "        [  0.,   0.,   9., ...,   1.,  22.,  36.],\n",
       "        [  1.,  81., 157., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,  45.,  86., ...,   0.,   3.,   7.],\n",
       "        [ 24.,  76.,  82., ...,   1.,   0.,   1.],\n",
       "        [103.,  38.,   2., ...,   6.,   0.,   3.],\n",
       "        ...,\n",
       "        [  0.,  71.,  58., ...,   5.,   8.,   1.],\n",
       "        [  1.,  11.,   9., ...,   0.,   5.,   6.],\n",
       "        [  0.,   0.,  45., ...,   0.,   2.,  61.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ..., 113.,  80.,  36.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   1.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  23.,   1.,   0.],\n",
       "        [ 36.,   5.,   1., ...,   0.,   0.,   3.],\n",
       "        [  6.,   2.,   0., ...,  26.,  95.,  59.]], dtype=float32),\n",
       " array([[ 68.,   4.,   1., ...,   1.,   2.,   0.],\n",
       "        [132.,  39.,   0., ...,   5.,   6.,  11.],\n",
       "        [ 36.,  59.,  28., ...,   0.,   0.,   4.],\n",
       "        ...,\n",
       "        [121.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   1.,   0., ...,   0.,   0.,   2.],\n",
       "        [ 82.,  62.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  3.,  1., ...,  0.,  0.,  1.],\n",
       "        [41., 13.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [13., 99., 14., ..., 61., 86., 20.],\n",
       "        [30., 14.,  1., ...,  1.,  0.,  1.],\n",
       "        [ 1.,  2.,  0., ...,  2.,  0.,  3.]], dtype=float32),\n",
       " array([[ 0.,  1.,  2., ...,  2.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  9.,  3.,  7.],\n",
       "        [ 0.,  0.,  0., ..., 18.,  1.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 14.,  2.,  6.],\n",
       "        [10.,  8.,  2., ...,  2.,  2.,  0.],\n",
       "        [ 3.,  5., 26., ...,  6.,  2., 39.]], dtype=float32),\n",
       " array([[30., 32., 26., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  4., 18., 12.],\n",
       "        [21., 17.,  0., ...,  2., 13.,  7.],\n",
       "        ...,\n",
       "        [24.,  0.,  0., ...,  1.,  0.,  0.],\n",
       "        [21., 25., 63., ...,  0., 25., 18.],\n",
       "        [ 9., 12.,  7., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  2.,   0.,   0., ...,   3.,   0.,   0.],\n",
       "        [  1.,   2.,   6., ...,   1.,   0.,   3.],\n",
       "        [  1.,   1., 148., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,  13., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   4.,  11.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   8.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   2.,   1.,   3.],\n",
       "        [ 16.,   3.,   1., ...,  99.,   3.,  18.],\n",
       "        [  0.,  63., 148., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 77.,   1.,   0., ...,   0.,   0.,   1.],\n",
       "        [  2.,  61., 147., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  16.,  53.,   1.]], dtype=float32),\n",
       " array([[  9.,   0.,   0., ...,  64.,  17.,   1.],\n",
       "        [  0.,   0.,   0., ...,   1.,   1.,   1.],\n",
       "        [  1.,   1.,   0., ...,   3.,   6.,  34.],\n",
       "        ...,\n",
       "        [  6.,   0.,   0., ...,   0.,   0.,  39.],\n",
       "        [ 17.,   0.,   0., ...,  14.,   5.,  13.],\n",
       "        [136.,   9.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   2.,  11., ...,   0.,   0.,   0.],\n",
       "        [ 33.,  12.,  21., ...,   0.,   0.,   0.],\n",
       "        [  2., 111., 141., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 13.,   5.,   0., ...,  43.,  62.,  29.],\n",
       "        [ 38., 144.,  22., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   0.,   2.,   4.]], dtype=float32),\n",
       " array([[  3.,   0.,   0., ...,   1., 137.,  10.],\n",
       "        [  9.,   0.,   0., ...,  60., 154., 103.],\n",
       "        [ 68.,   5.,   6., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [ 86., 147.,   0., ...,   2.,   0.,   3.],\n",
       "        [  5.,  41.,  81., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[140.,  24.,   0., ...,   2.,   3.,   4.],\n",
       "        [  0.,   5.,  52., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,  14., ...,   0.,   1.,  13.],\n",
       "        ...,\n",
       "        [  8.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 13.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 18.,   7.,   3., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  6.,   4.,   4., ...,   0.,   0.,   0.],\n",
       "        [  5.,   3.,   9., ...,   0.,   0.,  71.],\n",
       "        [ 81.,  43.,   7., ...,   0.,   0.,   2.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  23.],\n",
       "        [  1.,   1.,   0., ...,  11.,  56.,  50.],\n",
       "        [ 17., 130.,  55., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2.,  81.,  73.],\n",
       "        [ 40.,  12.,   1., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   8.,  43., 130.],\n",
       "        ...,\n",
       "        [ 10.,   3.,  51., ...,   0.,   0.,   2.],\n",
       "        [  5.,  11.,   6., ...,   1.,   0.,   3.],\n",
       "        [  1.,   0.,   0., ...,   6.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0., 10., 84., ...,  5.,  0.,  0.],\n",
       "        [76., 15.,  1., ...,  3.,  0.,  0.],\n",
       "        [30.,  5.,  0., ...,  1.,  0.,  1.],\n",
       "        ...,\n",
       "        [12., 24., 28., ...,  4.,  0.,  0.],\n",
       "        [ 3.,  1.,  0., ...,  1.,  0., 11.],\n",
       "        [ 0.,  0.,  0., ..., 40.,  2.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 69., 20.,  4.],\n",
       "        [ 0.,  0.,  0., ..., 15., 14., 12.],\n",
       "        [53.,  1.,  0., ...,  0.,  0.,  2.],\n",
       "        ...,\n",
       "        [18.,  0.,  0., ...,  0.,  0.,  5.],\n",
       "        [ 1.,  0.,  0., ...,  4.,  7., 12.],\n",
       "        [69., 22.,  6., ..., 16.,  2.,  0.]], dtype=float32),\n",
       " array([[  1.,   8., 137., ...,   0.,   0.,   0.],\n",
       "        [ 11.,   2.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7.,   0.,   2.],\n",
       "        ...,\n",
       "        [  2.,   3., 135., ...,   1.,   1.,  23.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   2.],\n",
       "        [  2.,  14.,  35., ...,  15.,  52.,   9.]], dtype=float32),\n",
       " array([[ 30.,  30.,  52., ...,   0.,   0.,   0.],\n",
       "        [  0., 106., 148., ...,   0.,   0.,   0.],\n",
       "        [ 17.,  11., 129., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  2.,   4.,  30., ...,   0.,   0.,  10.],\n",
       "        [  0.,  20.,  30., ...,  11.,   3.,  16.],\n",
       "        [  4.,  10.,  15., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 36.,   5.,   7., ...,   0.,   0.,   0.],\n",
       "        [ 22.,  10.,  23., ...,   0.,   0.,   0.],\n",
       "        [ 28.,  60.,  60., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,  40., 114., ...,   0.,   0.,   0.],\n",
       "        [ 44.,  20.,  63., ...,   0.,   0.,   0.],\n",
       "        [  0.,   3.,  13., ...,  21.,   5.,   0.]], dtype=float32),\n",
       " array([[12.,  0.,  2., ..., 17., 34., 63.],\n",
       "        [ 3.,  1.,  0., ...,  0.,  0.,  0.],\n",
       "        [76., 30.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0., 69., 80., ...,  6.,  5., 20.],\n",
       "        [ 2.,  0.,  0., ..., 15.,  0.,  1.],\n",
       "        [ 0.,  2., 11., ...,  1.,  2.,  9.]], dtype=float32),\n",
       " array([[ 48., 103.,  71., ...,   0.,   0.,   0.],\n",
       "        [ 22.,  17.,   3., ...,   1.,   0.,   0.],\n",
       "        [ 13.,  11.,  27., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 46.,   6.,   0., ...,   1.,   0.,   0.],\n",
       "        [  9.,   1.,   0., ...,  36.,  12.,   0.],\n",
       "        [  0.,   0.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  1.,   1.,   0., ...,  20.,   2.,  42.],\n",
       "        [  1.,   0.,   0., ...,  11.,   0.,   2.],\n",
       "        [ 11.,  13., 123., ...,   8.,   0.,   3.],\n",
       "        ...,\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 10.,   0.,   0., ...,   0.,   0.,  31.],\n",
       "        [ 84., 121.,   1., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  33.,  10.,   3.],\n",
       "        [ 18.,   2.,   0., ...,   5.,   2.,   2.],\n",
       "        [  5.,   0.,   0., ...,   8.,   2.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ..., 107., 144.,  19.],\n",
       "        [  0.,   0.,   0., ..., 153., 153.,  37.],\n",
       "        [  2.,  16.,  24., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  5.,  35.,  45., ...,   0.,   0.,   0.],\n",
       "        [  0.,  63., 142., ...,   0.,   0.,   0.],\n",
       "        [  0.,  18.,  46., ...,  72.,  28.,   4.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   4.,   7.,   4.],\n",
       "        [  6.,   2.,   0., ...,  24.,   3.,  23.],\n",
       "        [ 78.,  38.,   3., ...,   2.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 83.,  7.,  1.],\n",
       "        [ 2.,  1.,  4., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 13.],\n",
       "        ...,\n",
       "        [10.,  4.,  0., ..., 12.,  4.,  0.],\n",
       "        [ 6.,  2.,  2., ...,  4., 10., 12.],\n",
       "        [ 2.,  1., 43., ...,  0.,  2.,  0.]], dtype=float32),\n",
       " array([[ 8.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 81.],\n",
       "        [ 2.,  1.,  0., ...,  5.,  2., 16.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  5.,  1., 19.],\n",
       "        [63., 11.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 40.,  1.,  2.]], dtype=float32),\n",
       " array([[ 0.,  2., 36., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  2., 66., 38.],\n",
       "        [31., 48., 29., ...,  1.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ..., 40.,  2.,  4.],\n",
       "        [ 0.,  0.,  0., ..., 16.,  0.,  1.],\n",
       "        [63.,  9.,  2., ...,  0.,  0.,  1.]], dtype=float32),\n",
       " array([[ 11.,  50., 137., ...,  21.,  23.,   7.],\n",
       "        [  0.,  10.,  53., ...,  22.,   0.,   0.],\n",
       "        [  5.,   3.,   2., ...,   2.,  11.,  21.],\n",
       "        ...,\n",
       "        [ 25.,  15.,  43., ...,   1.,   0.,   8.],\n",
       "        [  0.,   0.,   0., ...,   3.,   4.,   9.],\n",
       "        [ 34., 104.,  10., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[27.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [84., 15.,  2., ..., 21.,  1.,  8.],\n",
       "        [ 7.,  1.,  0., ...,  2.,  0.,  0.],\n",
       "        ...,\n",
       "        [36.,  0.,  0., ...,  0.,  5., 16.],\n",
       "        [ 2.,  0.,  0., ...,  2.,  0.,  0.],\n",
       "        [26.,  4.,  0., ...,  1.,  0.,  1.]], dtype=float32),\n",
       " array([[  1.,   1.,   9., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   4.,  21.,  19.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   6.],\n",
       "        ...,\n",
       "        [ 13., 173.,  75., ...,   0.,   0.,   0.],\n",
       "        [ 26.,   0.,   0., ...,  19.,   0.,   2.],\n",
       "        [ 51., 171.,  18., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 52.,  24.,  94., ...,   0.,   0.,   0.],\n",
       "        [ 67., 121.,  11., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 12.,  20.,  38., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 123., 123.,  36.],\n",
       "        [  0.,   0.,   0., ...,  15.,  53., 100.]], dtype=float32),\n",
       " array([[  0.,   1., 133., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1., 138.,  24.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 23.,   6.,   0., ...,   2.,   0.,   8.],\n",
       "        [  3.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  2., 163., 123., ...,   0.,   0.,   0.],\n",
       "        [  4.,  93.,  98., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   2.,   1.,   1.],\n",
       "        ...,\n",
       "        [ 89.,  23.,   2., ...,  26.,   7.,  38.],\n",
       "        [ 81., 131.,   9., ...,  13.,   0.,   2.],\n",
       "        [ 37.,   0.,   0., ...,   0.,   0.,   3.]], dtype=float32),\n",
       " array([[  9.,  36.,  29., ...,   3.,   0.,   0.],\n",
       "        [  6.,   0.,   0., ...,   1.,   3.,  27.],\n",
       "        [  0.,   1.,  18., ...,   0.,  35.,  16.],\n",
       "        ...,\n",
       "        [ 36., 133.,  71., ...,   3.,   0.,   1.],\n",
       "        [  9.,   6.,  11., ...,  25.,  19.,   7.],\n",
       "        [ 53.,  14.,   1., ...,   4.,   0.,   0.]], dtype=float32),\n",
       " array([[ 26., 122.,  77., ...,   9.,   0.,   0.],\n",
       "        [113., 138.,  10., ...,   5.,   6.,   0.],\n",
       "        [ 80.,  62.,   1., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 12.,  56., 143., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   9.,   3.,  85.],\n",
       "        [ 64.,  32.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 30.,  19.,  29., ...,   1.,   0.,   3.],\n",
       "        [  0.,   0.,   0., ...,   0.,   2.,  11.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [136.,  32.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 39.,   5.,   4., ...,  45.,  74.,  38.],\n",
       "        [  0.,   6.,  19., ...,   3.,   2.,   3.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ..., 14.,  1.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  9., 17., 26.],\n",
       "        [ 0.,  4., 23., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  1., ...,  1., 23., 25.],\n",
       "        [16.,  7., 24., ...,  0.,  0.,  0.],\n",
       "        [ 4.,  0.,  0., ...,  1.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  1.,  1.,  4.],\n",
       "        [ 1.,  1.,  0., ..., 15.,  4.,  3.],\n",
       "        [ 0.,  0., 12., ...,  0.,  0.,  1.],\n",
       "        ...,\n",
       "        [ 4.,  0.,  0., ..., 13., 17., 50.],\n",
       "        [ 0.,  0.,  0., ...,  8.,  2., 16.],\n",
       "        [ 3.,  1., 35., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ..., 28., 68.,  9.],\n",
       "        [17., 26.,  6., ...,  2.,  0.,  1.],\n",
       "        [ 1.,  7., 29., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 9.,  2.,  1., ...,  0.,  0.,  1.],\n",
       "        [ 2.,  0.,  0., ..., 11., 10.,  9.],\n",
       "        [ 4., 18., 35., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[43.,  2.,  2., ...,  5.,  5.,  2.],\n",
       "        [47.,  3.,  0., ...,  0.,  0.,  0.],\n",
       "        [19.,  9., 11., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 2., 22., 62., ...,  0.,  0., 11.],\n",
       "        [ 0.,  7., 80., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 15.,  6.,  1.]], dtype=float32),\n",
       " array([[  0.,   0.,  11., ...,   1.,   9.,  12.],\n",
       "        [  0.,   0.,  15., ...,   1.,   0.,  23.],\n",
       "        [ 10.,  48.,  88., ...,   1.,   0.,  16.],\n",
       "        ...,\n",
       "        [  2.,   0.,   0., ...,   3.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,  12.,  19.],\n",
       "        [ 68., 115.,   0., ...,   1.,   0.,   0.]], dtype=float32),\n",
       " array([[ 1.,  0.,  0., ...,  0.,  2.,  9.],\n",
       "        [ 0.,  5., 13., ..., 33., 35., 79.],\n",
       "        [45., 15., 12., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [13., 26., 10., ...,  0.,  0.,  0.],\n",
       "        [78.,  3.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0., 31., ..., 10.,  6.,  6.]], dtype=float32),\n",
       " array([[25.,  3.,  1., ..., 17.,  1.,  2.],\n",
       "        [11., 52., 80., ...,  0., 10., 13.],\n",
       "        [12., 25.,  8., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0., 45., 70., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  1.,  3., 12.]], dtype=float32),\n",
       " array([[  4.,  65.,  74., ...,   8.,  22.,  84.],\n",
       "        [ 67.,  10.,   7., ...,   0.,   0.,   0.],\n",
       "        [  1.,   4.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 66.,  78., 120., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,  13., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,   7.,  28., ...,   0.,   0.,   0.],\n",
       "        [129.,  37.,  27., ...,   0.,   0.,   0.],\n",
       "        [  6.,   1.,   5., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 19.,  16.,   2., ...,   3.,   9.,   6.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ..., 137.,  58.,   0.]], dtype=float32),\n",
       " array([[ 2.,  0.,  0., ..., 52., 33., 12.],\n",
       "        [ 0.,  0.,  0., ...,  5.,  7., 66.],\n",
       "        [ 2.,  1.,  2., ...,  1.,  4., 10.],\n",
       "        ...,\n",
       "        [69.,  6.,  0., ...,  0.,  0., 10.],\n",
       "        [ 9.,  0.,  0., ...,  1.,  5., 12.],\n",
       "        [11.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   0.,   6.,  28.],\n",
       "        [ 37.,   6.,  50., ...,   0.,   0.,   0.],\n",
       "        [126.,  48.,   0., ...,  21.,   0.,   1.],\n",
       "        ...,\n",
       "        [  1.,  23., 136., ...,   6.,  11.,   0.],\n",
       "        [ 61.,   7.,   2., ...,   0.,   0.,   0.],\n",
       "        [162., 162.,   1., ...,   0.,   0., 109.]], dtype=float32),\n",
       " array([[ 0.,  1., 47., ...,  0.,  0.,  0.],\n",
       "        [64.,  1.,  1., ...,  2.,  0.,  0.],\n",
       "        [ 2., 46., 28., ...,  1.,  1., 54.],\n",
       "        ...,\n",
       "        [29., 58., 67., ...,  0.,  1., 29.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  1.,  0.],\n",
       "        [ 2.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  5., 17., ...,  0.,  1.,  1.],\n",
       "        [ 0.,  3., 23., ...,  0., 10., 81.],\n",
       "        [12.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  2.,  1.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 14.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  3.,  4.,  8.]], dtype=float32),\n",
       " array([[ 18.,   5.,   8., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ..., 165.,  40.,   2.],\n",
       "        [ 20.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  6.,  71.,  46., ...,   0.,   0.,   0.],\n",
       "        [ 10.,   1.,   0., ...,  74.,   6.,   0.],\n",
       "        [  1.,   0.,   0., ...,   8.,  43.,  10.]], dtype=float32),\n",
       " array([[  0.,   1.,   9., ...,   0.,   0.,   4.],\n",
       "        [ 42.,  25.,   1., ...,   0.,   0.,   0.],\n",
       "        [ 29.,  12.,   2., ...,   0.,   3.,   5.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   8.],\n",
       "        [  6., 136., 143., ...,   1.,   2.,   4.],\n",
       "        [ 65.,  27.,   2., ...,   9.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,   8.,  34., ...,   0.,   5.,   2.],\n",
       "        [  4.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 42.,  18.,   0., ...,   3.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 13., 125.,  31., ...,   4.,   4.,   7.],\n",
       "        [ 70.,   1.,   1., ...,   1.,   0.,   0.],\n",
       "        [  8.,  59.,  36., ...,   4.,   0.,   1.]], dtype=float32),\n",
       " array([[ 21.,   8.,  14., ...,   0.,   0.,   0.],\n",
       "        [  7.,   6.,   8., ...,   0.,   0.,   0.],\n",
       "        [  1.,   2.,   1., ...,  31.,   2.,   3.],\n",
       "        ...,\n",
       "        [ 26.,   4.,   1., ...,   0.,   0.,   0.],\n",
       "        [  1., 102., 136., ...,   0.,   0.,   0.],\n",
       "        [159.,  48.,   8., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 7.,  8.,  3., ..., 18., 13., 16.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  4.],\n",
       "        [10.,  0.,  0., ...,  5.,  1., 25.],\n",
       "        ...,\n",
       "        [ 9., 32., 38., ...,  0.,  0.,  0.],\n",
       "        [37.,  2.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  4.]], dtype=float32),\n",
       " array([[ 10.,   4.,   3., ...,   0.,   0.,   0.],\n",
       "        [  1.,  24., 135., ...,   0.,   0.,   0.],\n",
       "        [  1.,   2.,   1., ...,  19.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 27.,  61.,  79., ...,   0.,   0.,   6.],\n",
       "        [ 38.,   1.,   4., ...,   0.,   0.,   0.],\n",
       "        [ 25.,  28.,  14., ...,   1.,   7.,  29.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  2.],\n",
       "        [ 0.,  0.,  0., ...,  3., 18.,  7.],\n",
       "        [ 0.,  0.,  7., ..., 46., 82., 27.],\n",
       "        ...,\n",
       "        [17.,  0.,  2., ...,  0.,  0., 11.],\n",
       "        [ 0.,  0., 11., ...,  0.,  0.,  2.],\n",
       "        [ 0.,  0.,  3., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 22.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  94.,   0.,   0.],\n",
       "        [  0.,   0.,  60., ...,   2.,  23., 124.],\n",
       "        ...,\n",
       "        [  0.,   0.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 61., 140.,   7., ..., 107.,  13.,   3.],\n",
       "        [  0.,   1.,   5., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0., 20., ...,  5.,  7.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 11.,  2., 31.],\n",
       "        [ 6.,  1.,  7., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 1.,  0.,  4., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 33.,  3.,  1.],\n",
       "        [49., 14.,  7., ..., 11., 36., 40.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  1.,  3., 11.],\n",
       "        [ 4., 20., 87., ...,  0.,  0.,  2.],\n",
       "        [ 0.,  0.,  0., ..., 70., 20.,  0.],\n",
       "        ...,\n",
       "        [37., 36., 15., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  7., 28.],\n",
       "        [ 0.,  0.,  0., ..., 30.,  5.,  4.]], dtype=float32),\n",
       " array([[ 4., 84., 98., ...,  1.,  0.,  0.],\n",
       "        [ 7., 10., 16., ..., 14.,  6.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  0., 15., 44.],\n",
       "        ...,\n",
       "        [ 4.,  5., 11., ...,  1., 22.,  6.],\n",
       "        [ 0.,  0., 10., ...,  0.,  0.,  5.],\n",
       "        [13., 11.,  0., ...,  1.,  1.,  1.]], dtype=float32),\n",
       " array([[  1.,   0.,   0., ...,   5.,   4.,   1.],\n",
       "        [ 28.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  7.,  17.,   0., ...,  96.,  18.,   2.],\n",
       "        ...,\n",
       "        [ 53.,  42.,  18., ...,  59.,  83.,   7.],\n",
       "        [  4.,  22.,  19., ...,  53.,  30.,   9.],\n",
       "        [103.,  13.,   0., ...,   0.,   0.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [ 62.,   2.,   0., ...,   0.,   0.,   2.],\n",
       "        [113.,  32.,  44., ...,   1.,   2.,  32.],\n",
       "        ...,\n",
       "        [  0.,   0.,   1., ...,   2.,   5.,  15.],\n",
       "        [ 57.,  16.,  38., ...,   1.,   0.,   1.],\n",
       "        [125.,  78.,   2., ...,  22.,  19.,   7.]], dtype=float32),\n",
       " array([[92., 56.,  6., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  5.],\n",
       "        [ 0.,  5., 74., ..., 15.,  2., 13.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  1.,  1.,  4.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,  15.,  45., ...,   3.,  11.,  15.],\n",
       "        [ 25.,  23.,  38., ...,   2.,   2.,   0.],\n",
       "        [  0.,   0.,   0., ...,   9.,  77.,  32.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  45.,  52.,  16.],\n",
       "        [  1.,   2.,  10., ...,   6.,   4.,   5.],\n",
       "        [  4.,   0.,   0., ...,   8.,   2., 138.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ..., 133., 102.,   0.],\n",
       "        [143., 148.,  20., ...,   1.,   1.,   1.],\n",
       "        [  4., 105.,  90., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  12.,   0.,   0.],\n",
       "        [ 73.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  16.,   2.,   0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  70.,  49.,   5.],\n",
       "        [ 24.,  42.,   6., ...,  33.,  13.,  10.],\n",
       "        [  0.,   0.,   3., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [130.,  26.,   2., ...,   0.,   0.,   0.],\n",
       "        [ 43.,  53.,  30., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   6., ...,  45., 135.,  19.]], dtype=float32),\n",
       " array([[ 11.,  87.,  25., ...,   0.,   0.,   0.],\n",
       "        [  6.,   7.,   0., ...,  25.,  33.,   5.],\n",
       "        [  1.,   3.,  12., ...,   6.,   0.,   2.],\n",
       "        ...,\n",
       "        [ 33.,  18.,   0., ...,  62., 119.,   1.],\n",
       "        [  0.,   8.,  44., ...,   0.,   0.,   0.],\n",
       "        [  0.,  31., 113., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 13.,  98., 166., ...,   5.,  30.,  17.],\n",
       "        [123.,  53.,   0., ...,   0.,   0.,  57.],\n",
       "        [  0.,   0.,   0., ...,  28.,  49.,   1.],\n",
       "        ...,\n",
       "        [ 44.,  14.,   8., ...,   0.,   0.,   0.],\n",
       "        [ 10.,   1.,   0., ...,  33., 130.,  11.],\n",
       "        [  4.,  18.,  38., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[  0.,  12.,  34., ...,  33.,   3.,   5.],\n",
       "        [ 10.,   1.,   0., ...,   7.,   1.,   6.],\n",
       "        [ 64.,   1.,   2., ...,   0.,   0.,   1.],\n",
       "        ...,\n",
       "        [  3.,  13.,   1., ...,   2.,  63.,  77.],\n",
       "        [  1.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 79., 159.,   3., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  1., ...,  8.,  9., 12.],\n",
       "        [ 3.,  6., 12., ...,  1.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ..., 26.,  3.,  2.],\n",
       "        ...,\n",
       "        [ 7.,  4.,  7., ...,  0.,  0.,  0.],\n",
       "        [11.,  0.,  0., ...,  5.,  2.,  1.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   3.,  10.,   6.],\n",
       "        [  7.,  62.,  65., ...,   0.,   0.,   0.],\n",
       "        [ 29.,  70.,  55., ...,   1.,   2.,   1.],\n",
       "        ...,\n",
       "        [  0.,  56.,  90., ...,   0.,   0.,  12.],\n",
       "        [  7.,  16., 141., ...,   0.,   0.,   0.],\n",
       "        [ 24.,  11.,  52., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 26.,  89.,   6., ...,   0.,   0.,  14.],\n",
       "        [ 44.,  12.,   0., ...,   0.,   0.,   4.],\n",
       "        [  2.,   1., 101., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 20.,  12.,  29., ...,  39.,   5.,   5.],\n",
       "        [  1.,  21., 128., ...,   0.,   0.,   0.],\n",
       "        [ 37.,   4.,   1., ...,  21.,  27.,  30.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  3.,  1., ..., 22., 10., 17.],\n",
       "        [78., 12.,  6., ...,  7., 17.,  1.],\n",
       "        ...,\n",
       "        [32., 61., 21., ...,  1.,  9., 26.],\n",
       "        [59., 64.,  8., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  1., ...,  0.,  0.,  1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   6.,  27.,  22.],\n",
       "        [  0.,   0.,   0., ...,   4.,   9.,  22.],\n",
       "        [ 39.,   8.,   6., ...,   2.,   3.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   1.],\n",
       "        [111., 129.,  12., ...,   0.,   0.,   0.],\n",
       "        [ 10.,   0.,   0., ...,  24.,  18.,  15.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  1.,  1.,  4.],\n",
       "        [ 0.,  2.,  1., ..., 29.,  1.,  2.],\n",
       "        [13.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [15.,  1.,  2., ...,  0.,  0.,  0.],\n",
       "        [ 4., 24., 40., ...,  1.,  1., 10.],\n",
       "        [ 0.,  0., 47., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  2.,   0.,   0., ...,  11.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   7.,   0.,   0.],\n",
       "        [ 14., 112.,  25., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  58.,  85.,  40.],\n",
       "        [  2.,   6.,  34., ...,   2.,   1.,   2.],\n",
       "        [  1.,   0.,   0., ...,  16.,  61.,  91.]], dtype=float32),\n",
       " array([[  1.,   0.,   2., ...,   0.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,   3.,   4.,   0.],\n",
       "        [  0.,   0.,   0., ...,  31.,  33.,  12.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   2.,   0.,   0.],\n",
       "        [  7.,  14.,  51., ...,   6.,   1.,   0.],\n",
       "        [  2., 113., 131., ...,   2.,   3.,  10.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  12.,   3.,   3.],\n",
       "        [  4.,   3.,  20., ...,   2.,   2.,   1.],\n",
       "        [ 11.,  17.,   5., ...,  28.,  13.,   2.],\n",
       "        ...,\n",
       "        [  4.,   6.,  11., ..., 123.,  53.,  23.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  7.,   1.,   0., ...,   0.,   0.,   8.]], dtype=float32),\n",
       " array([[ 37.,  63., 110., ...,   0.,   0.,   0.],\n",
       "        [  5.,   2.,   0., ...,  37.,   7.,   4.],\n",
       "        [  5.,   0.,   0., ...,  30.,  25.,   1.],\n",
       "        ...,\n",
       "        [  0.,   1.,  35., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   3., ...,   1.,   1.,   4.],\n",
       "        [  5.,   0.,  28., ...,   0.,   0.,   0.]], dtype=float32),\n",
       " array([[ 30.,  90.,  60., ...,   0.,   0.,   0.],\n",
       "        [ 68.,  28.,   7., ...,   0.,   0.,   0.],\n",
       "        [130., 140.,  20., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 22.,  17.,   3., ...,   4.,   9.,  10.],\n",
       "        [  8.,  11.,   3., ...,  25.,  91.,  30.],\n",
       "        [  0.,   0.,   0., ...,  19.,   2.,   4.]], dtype=float32),\n",
       " array([[  4.,   0.,   0., ...,  22.,   2.,   0.],\n",
       "        [ 13.,  38.,  79., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ..., 135.,  57.,   6.],\n",
       "        ...,\n",
       "        [  1.,   1.,   1., ...,   0.,   0.,   0.],\n",
       "        [  2.,   0.,   0., ...,   0.,   2., 142.],\n",
       "        [  0.,   0., 140., ...,   4.,   1.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 10.,  16.,   5., ...,   0.,   5.,  15.],\n",
       "        [  1., 160.,  49., ...,   0.,   6.,  35.],\n",
       "        ...,\n",
       "        [  2.,   1.,   0., ...,   3.,   9.,   8.],\n",
       "        [  1.,   1.,   1., ...,   2.,   1.,   1.],\n",
       "        [  0.,   1.,   3., ...,   4.,   9.,   1.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   7.,  43.,  48.],\n",
       "        [ 18.,  12.,   4., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   5.,   5.,   3.],\n",
       "        ...,\n",
       "        [  3.,   1.,   0., ..., 135.,   0.,   0.],\n",
       "        [ 52.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   3.]], dtype=float32),\n",
       " array([[  6.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   1.,   5.],\n",
       "        [ 81., 104.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  1.,   1.,  71., ...,   0.,   0.,   0.],\n",
       "        [  9.,   1.,   0., ...,   3.,   0.,   1.],\n",
       "        [ 14.,  36.,  60., ...,   0.,   0.,  15.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  88.,  81.,  46.],\n",
       "        [  0.,   0.,   0., ...,   9.,   6.,  13.],\n",
       "        [  0.,   0.,   0., ..., 110., 138.,   5.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   1.,   0.,   0.],\n",
       "        [  1.,   0.,   0., ...,   0.,   1.,   1.]], dtype=float32),\n",
       " array([[  0.,   8.,  42., ...,   0.,   0.,   1.],\n",
       "        [  0.,   0.,   0., ...,   2.,   7.,   1.],\n",
       "        [  0.,   0.,   0., ...,  22.,  19.,   5.],\n",
       "        ...,\n",
       "        [  0.,   1.,   0., ...,   8.,  10.,  25.],\n",
       "        [  1.,   1.,   0., ...,  52.,  30.,  10.],\n",
       "        [ 15.,   2.,   2., ...,   1.,   1., 116.]], dtype=float32),\n",
       " array([[ 34.,  42.,  11., ...,   0.,  12.,  10.],\n",
       "        [134.,  71.,  68., ...,   0.,   0.,   0.],\n",
       "        [  5.,   3.,   2., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,   0.,   0.,  16.],\n",
       "        [ 29.,   5.,   4., ...,  68.,  49.,   9.],\n",
       "        [  0.,   0.,   0., ...,   8.,   6.,   1.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [14.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 3.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [19.,  1.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  0.,  0., ..., 15., 11., 26.],\n",
       "        [ 2.,  2.,  2., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 5.,  0.,  0., ..., 86.,  1., 10.],\n",
       "        [41., 72., 46., ...,  0.,  0.,  0.],\n",
       "        [ 2.,  0.,  2., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 21.,   0.,   0., ...,   0.,   0.,   1.],\n",
       "        [  2.,   2.,   0., ...,   0.,  41., 140.],\n",
       "        [ 78.,  50.,   2., ...,   1.,   1.,   1.],\n",
       "        ...,\n",
       "        [  0.,   2.,  33., ...,  17.,   1.,   0.],\n",
       "        [  2.,  26.,  62., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  12.,  15.,  96.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,   2.,   4.,  61.],\n",
       "        [ 32.,   2.,   1., ...,  61.,  39.,  60.],\n",
       "        [  0.,   0.,   0., ..., 128.,  15.,   2.],\n",
       "        ...,\n",
       "        [  3.,   6.,  11., ...,   0.,   0.,   0.],\n",
       "        [  8.,  99.,  89., ...,   0.,   0.,   0.],\n",
       "        [173.,  29.,   4., ...,   1.,   1.,   0.]], dtype=float32),\n",
       " array([[ 43.,  31.,   3., ...,  10.,   5.,   5.],\n",
       "        [ 92.,  58.,  90., ...,  16.,   9.,   2.],\n",
       "        [  3.,   1.,   0., ...,  22.,  11.,   7.],\n",
       "        ...,\n",
       "        [  0.,  44., 127., ...,   0.,   0.,   4.],\n",
       "        [ 19.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   0.,   5.,  18.]], dtype=float32),\n",
       " array([[15., 12.,  3., ...,  1.,  0., 11.],\n",
       "        [ 0.,  1.,  1., ...,  0.,  0.,  7.],\n",
       "        [ 0.,  0.,  5., ...,  0.,  1.,  2.],\n",
       "        ...,\n",
       "        [32.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [11.,  9.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[10., 11., 16., ...,  0.,  0.,  0.],\n",
       "        [ 4.,  2.,  0., ..., 72.,  7.,  0.],\n",
       "        [ 0.,  2.,  2., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [12., 16., 58., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  0.,  0., ...,  9.,  3.,  0.],\n",
       "        [19.,  7.,  2., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 41.,   5.,   0., ..., 135.,  41.,  10.],\n",
       "        [  1.,   3.,   1., ...,   2.,   0.,   0.],\n",
       "        [  9.,   0.,   0., ...,   1.,   2.,   5.],\n",
       "        ...,\n",
       "        [  1.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 72.,   1.,   0., ...,  10.,  17.,  20.],\n",
       "        [  1.,   1.,   2., ...,  14.,   3.,   1.]], dtype=float32),\n",
       " array([[148.,  21.,   1., ...,   0.,   0.,   0.],\n",
       "        [  1.,   4.,   0., ...,  11.,  12.,   2.],\n",
       "        [  0.,   1.,   3., ...,   1.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 26.,  51.,  47., ...,   0.,   0.,   0.],\n",
       "        [  0.,   1.,   9., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  21.,  16.,   5.]], dtype=float32),\n",
       " array([[ 19.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [  9.,  46., 136., ...,   1.,   0.,   5.],\n",
       "        [102.,   4.,   0., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 21.,   0.,   0., ...,   1.,   0.,   2.],\n",
       "        [  0.,   0.,   0., ...,  54.,  64.,  32.],\n",
       "        [  2.,   0.,   0., ...,   0.,  11., 147.]], dtype=float32),\n",
       " array([[  0.,   0.,   0., ...,  12.,  53.,  54.],\n",
       "        [  3.,  13.,  47., ...,   0.,   0.,   2.],\n",
       "        [  3.,  13.,   7., ...,   0.,   0.,   0.],\n",
       "        ...,\n",
       "        [ 12.,   2.,   0., ..., 125.,  54.,   0.],\n",
       "        [ 11.,   1.,   0., ...,   4.,   0.,   0.],\n",
       "        [  0.,   0.,   4., ...,  30.,  10.,  17.]], dtype=float32),\n",
       " array([[ 3.,  0.,  0., ...,  0.,  1.,  1.],\n",
       "        [ 0.,  4.,  4., ...,  0.,  1.,  5.],\n",
       "        [ 4.,  4.,  3., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [90., 31.,  3., ...,  0.,  0.,  0.],\n",
       "        [27., 43., 14., ...,  0.,  0.,  1.],\n",
       "        [ 0.,  0.,  0., ...,  4., 11.,  3.]], dtype=float32),\n",
       " array([[ 39.,  72., 120., ...,   1.,   0.,   0.],\n",
       "        [  6.,  24., 111., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,  14., ...,   0.,   4.,   8.],\n",
       "        ...,\n",
       "        [ 10.,  69.,  49., ...,   0.,   0.,  33.],\n",
       "        [  1.,  63., 123., ...,   0.,   0.,   0.],\n",
       "        [  3., 100., 144., ...,   2.,   0.,   0.]], dtype=float32),\n",
       " array([[68.,  5.,  6., ...,  0.,  0.,  0.],\n",
       "        [13., 23.,  2., ..., 15.,  9.,  4.],\n",
       "        [32., 60., 40., ...,  0.,  1., 26.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0., 19.],\n",
       "        [ 1.,  1.,  0., ..., 21.,  0.,  0.],\n",
       "        [72., 53.,  4., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[ 10.,   0.,   0., ...,  94.,  46.,   7.],\n",
       "        [  0.,   2., 114., ...,   0.,   0.,   0.],\n",
       "        [  2.,   1.,   0., ...,   1.,  58.,  99.],\n",
       "        ...,\n",
       "        [  7.,   3.,  25., ...,  10.,   0.,   0.],\n",
       "        [ 12.,   1.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 21.,   1.,   0., ...,  55., 106.,  13.]], dtype=float32),\n",
       " array([[ 19.,   1.,   0., ...,   0.,   0.,   1.],\n",
       "        [  0.,   3.,  36., ...,   0.,   0.,   0.],\n",
       "        [  7., 110., 132., ...,   0.,   0.,   7.],\n",
       "        ...,\n",
       "        [ 13.,   0.,   0., ...,   0.,   0.,   0.],\n",
       "        [ 72.,  31.,  10., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,  86., 140.,  64.]], dtype=float32),\n",
       " array([[ 0.,  0.,  0., ...,  5.,  5., 20.],\n",
       "        [48., 16.,  1., ...,  0.,  0.,  0.],\n",
       "        [ 1.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "        ...,\n",
       "        [ 0.,  0.,  0., ...,  0.,  0.,  1.],\n",
       "        [ 0., 15., 81., ...,  0.,  0.,  0.],\n",
       "        [ 0.,  2., 12., ...,  0.,  0.,  0.]], dtype=float32),\n",
       " array([[  3.,   2.,  19., ...,   0.,   0.,   0.],\n",
       "        [122.,   6.,   0., ...,   0.,   0.,   0.],\n",
       "        [  0.,   0.,   0., ...,   4.,   8.,   1.],\n",
       "        ...,\n",
       "        [  0.,   0.,   0., ...,  24.,  34.,  33.],\n",
       "        [  0.,   0.,   0., ...,  10.,   8.,   1.],\n",
       "        [  0.,   1.,  28., ...,  14.,   7.,   0.]], dtype=float32),\n",
       " ...]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_descriptors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[  5.,   0.,   0., ...,   8.,   2.,  16.],\n",
       "       [ 52.,  15.,   2., ...,   3.,   0.,   0.],\n",
       "       [ 60.,   5.,   0., ...,   0.,   0.,   0.],\n",
       "       ...,\n",
       "       [  6.,  97., 105., ...,   0.,   2.,  33.],\n",
       "       [ 15., 104.,  70., ...,   0.,   2.,  16.],\n",
       "       [  1.,   0.,   0., ...,   7.,   1.,   5.]], dtype=float32)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "descriptors = np.vstack(train_descriptors)\n",
    "descriptors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of training samples: 1680\n",
      "Number of testing samples: 420\n",
      "Descriptors in first training image: 505\n"
     ]
    }
   ],
   "source": [
    "print(f\"Number of training samples: {len(X_train)}\")\n",
    "print(f\"Number of testing samples: {len(X_test)}\")\n",
    "print(f\"Descriptors in first training image: {len(train_descriptors[100]) if len(train_descriptors) > 0 else 0}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAz8AAASmCAYAAAAAmxVGAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOz9abRlWVXmD//mXGvvfc5tIjIiIZOk7xQUQUBsaJRehUQUBBVEaXRIoZSiOLRApdNSFJG0FEQLhSrFBlRgiKK0omIiIBb8AeUFpUuFJBsyMuLec/Zea835fpj7Xggy0RBpysrzjHFHxN33NLtds3vmM8XdnQ022GCDDTbYYIMNNthgg//HoZ/vHdhggw022GCDDTbYYIMNNvhcYBP8bLDBBhtssMEGG2ywwQbXCGyCnw022GCDDTbYYIMNNtjgGoFN8LPBBhtssMEGG2ywwQYbXCOwCX422GCDDTbYYIMNNthgg2sENsHPBhtssMEGG2ywwQYbbHCNwCb42WCDDTbYYIMNNthggw2uEdgEPxtssMEGG2ywwQYbbLDBNQKb4GeDDTbYYIMNNthggw02uEZgE/xcw/DGN76RBz/4wZx33nn0fc91rnMdHvSgB3HhhRf+uz7nKU95CiLyae3Dn//5nyMi/Pmf//mn9f4zxd3udjfudre7ndHrvuRLvuSzui+fb5w8eZIf+ZEf4Wu/9mu59rWvjYjwlKc85fO9WxtssME1HC94wQsQEd7ylrd8vnfls4r//b//N9/2bd/GLW5xC1SVG9/4xp/177w6O/2c5zyHF7zgBVd57YFd/v3f//1P67s+1XW89NJLucMd7sDOzg6vetWrPq3P/lzjP+LfvOtd7+IpT3kK73//+z+zO7XBZxSb4OcahF/6pV/izne+MxdddBE/93M/x6tf/Wp+/ud/nn/+53/mLne5C7/8y798xp/13d/93f/ugOkAt7/97bnwwgu5/e1v/2m9f4N/Py677DJ+7dd+jXEc+aZv+qbP9+5ssMEGG1yj8Ju/+Zu8853v5Cu+4iu42c1u9jn5zquz058q+Pls4KKLLuKrv/qr+ad/+ide/epXc+973/tz8r3/UfxH/Jt3vetdPPWpT90EP/+XI3++d2CDzw3e8IY38LjHPY773ve+vOQlLyHnj1/6b/u2b+MBD3gAP/ADP8Dtbnc77nznO3/Kz9nf32dra4vrX//6XP/61/+09uXIkSN81Vd91af13g0+PdzoRjfiYx/7GCLCpZdeyvOe97zP9y5tsMEGG1xj8Gd/9meoRr75fve7H+94xzs+69/5H7HT/1G85z3v4V73uhelFF7/+tdz61vf+vOyH58OPp/nbYPPDTaVn2sIfuZnfgYR4Vd+5VdOC3wAcs485znPQUR4+tOffrj9oPT71re+lQc96EEcO3bsMGN1dWXhcRx5/OMfz3Wucx22trb4mq/5Gv72b/+WG9/4xjziEY84fN3V0d4e8YhHsLOzw3vf+17ue9/7srOzww1ucAMe//jHM47jad/z1Kc+la/8yq/k+PHjHDlyhNvf/vb8+q//Ou7+GTpbICI89rGP5fnPfz63uMUtWC6X3OEOd+CNb3wj7s4znvEMbnKTm7Czs8M97nEP3vve9572/le96lV84zd+I9e//vVZLBbc/OY359GPfjSXXnrpVb7rZS97Gbe5zW0YhoGb3vSm/OIv/uLVnl935znPeQ63ve1tWS6XHDt2jAc96EH80z/90xkdz6dbxt9ggw02+FziwB78wz/8A1/3dV/H9vY255133qF9euMb38hd7nIXtre3+cIv/EL+1//6X6e9/5JLLuF7v/d7+eIv/mJ2dnY455xzuMc97sFf/uVfXuW7LrroIh70oAexu7vLWWedxbd/+7fz5je/GRG5SoXkLW95C/e///05fvw4i8WC293udrzoRS86o2M6CHz+vXB3zj33XL7v+77vcFtrjWPHjqGqXHzxxYfbf+EXfoGcM1dccQVwVTt94xvfmHe+8528/vWvP7QJn0y/K6XwYz/2Y1z3utflyJEj3Ote9+Ld7373v2uf/8//+T/c5S53IefMX/3VX10l8HnPe97DQx/6UM455xyGYeCLvuiLePazn33491OnTnHWWWfx6Ec/+iqf/f73v5+UEs94xjOAj9PtXvWqV/HIRz6S48ePs729zTd8wzdcrW38jd/4Db70S7+UxWLB8ePHecADHsDf//3fn/aaq7O/N77xjbnf/e7Hn/7pn3L729+e5XLJLW95S37jN37j8DUveMELePCDHwzA3e9+98NzfHAf/d3f/R33u9/9Do/7ute9Lueffz4XXXTRv+PsbvCZwCb4uQagtcbrXvc67nCHO3zKbMYNbnADvuzLvozXvva1tNZO+9sDH/hA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9584cYLHPe5xV6kWrddrXvOa1/CABzyAra2tq5zH9XrNG9/4RgBuetObcr/73Y/nPOc5h77Jb//2b3PZZZfx2Mc+9irfe3BtDnCnO92JG93oRrzuda8D4vysVqvTKPgQrJd73OMep1XQPhVue9vbcsMb3vDw98ViwRd+4Ree0bm5+c1vzrFjx/jRH/1Rnvvc5/Kud73r33zPBp89bIKfawCuda1rsbW1xfve975/9XXvf//72dra4vjx46dtP++88/7N77jssssAOPfcc0/bnnPm7LPPPqP93NraYrFYnLZtGAbW6/Xh729605v42q/9WgD+5//8n7zhDW/gzW9+Mz/2Yz8GwGq1OqPvOhN88nk4CFA+1faD/TQzvvZrv5Y//MM/5Ed+5Ed4zWtew5ve9KbDRf1gHz/2sY8d8rk/GZ+87eKLLz58bdd1p/288Y1vvNpeog022GCD/6y4OnvQ9/1V1t+D7Z9oJ37hF36BxzzmMXzlV34lf/AHf8Ab3/hG3vzmN/P1X//1p9mIyy677IzXX4Af/uEfvsr6+73f+70An9U1+EY3uhE3u9nNePWrX83+/j4XXnjhYfBz0UUX8e53v5tXv/rVLJdL7nSnO/2HvuuT7fUwDMCZ29af+Imf4ElPehK//du/zcMe9rDTAqDLLruMWiu/9Eu/dJXzeBDofuJ5/IEf+AHe8573HAZ4z372s7njHe94tUqx17nOda5224FvcvDv1fkz173udQ///q/h6nyZYRjO6NwcPXqU17/+9dz2trfliU98Ire61a247nWvy5Of/OTTqPAbfG6wUXu7BiClxN3vfnf+9E//lIsuuuhq+34uuugi/vZv/5b73Oc+pJRO+9uZNMofLAoXX3wx17ve9Q6311rPaFE5U/zu7/4uXdfx8pe//DTD+NKXvvQz9h3/UbzjHe/gbW97Gy94wQt4+MMffrj9k0URjh07hohcbb/ORz7ykdN+v9a1roWI8Jd/+ZeHxugTcXXbNthggw2uifit3/ot7na3u/Erv/Irp23/5N6Ks88+mze96U1Xef/Vrb8AT3jCE3jgAx94td95i1vc4j+yy/8mDnphX//612Nm3O1ud2N3d5frXve6vOpVr+LVr341X/3VX/1/hS146lOfiojw1Kc+FTPjhS98ITlnjh07RkqJ7/iO7zhNwOETcZOb3OTw//e4xz34ki/5En75l3+ZnZ0d3vrWt/Jbv/VbV/u+T75mB9tufvObAx/3UT784Q9f5XX/8i//cniNP5u49a1vze/+7u/i7rz97W/nBS94AU972tNYLpf8t//23z7r37/Bx7Gp/FxD8IQnPAF353u/93uvUopurfGYxzwGd+cJT3jCp/X5X/M1XwPA7/3e7522/fd///eptX56O301EBFyzqcFaKvVit/8zd/8jH3HfxQHweInG6Ff/dVfPe337e1t7nCHO/DSl76UaZoOt586dYqXv/zlp732fve7H+7OP//zP3OHO9zhKj//mWREN9hggw0+mxCRq6y/b3/7268yu+Wud70rJ0+e5BWveMVp23/3d3/3tN9vcYtb8AVf8AW87W1vu9r19w53uAO7u7ufnYOZca973YuLL76YCy64gK/6qq86/L573vOevOQlL+HNb37zGVHezrRS8R/FU57yFJ761Kfyohe9iIc+9KHUWtna2uLud787f/d3f8dtbnObqz2Pn1xd+f7v/37++I//mCc84Qmce+65h2pqn4wXvvCFp/3+13/913zgAx84HHR+xzvekeVyeZXg6aKLLuK1r30t97znPT8jx30mlTIR4Uu/9Et51rOexVlnncVb3/rWz8h3b3Dm2FR+riG4853vzAUXXMDjHvc47nKXu/DYxz6WG97whnzwgx/k2c9+Nn/zN3/DBRdc8GmXzG91q1vxkIc8hGc+85mklLjHPe7BO9/5Tp75zGdy9OjRT1vm85Nx/vnn8wu/8As89KEP5Xu+53u47LLL+Pmf//n/K7JdB7jlLW/JzW52M/7bf/tvuDvHjx/nj/7oj652uvXTnvY0zj//fL7u676OH/iBH6C1xjOe8Qx2dnYOFYsgrt/3fM/38MhHPpK3vOUtfM3XfA3b29t8+MMfPpQSfcxjHvOv7tcrXvEK9vb2DrOf73rXuw6ned/3vvdla2vrM3gWNthggw0+P7jf/e7HT/7kT/LkJz+Zu971rrz73e/maU97Gje5yU1OS8Y9/OEP51nPehYPe9jD+Kmf+ilufvOb84pXvII/+7M/A06Xp/7VX/1V7nOf+/B1X/d1POIRj+B617sel19+OX//93/PW9/6Vl784hf/q/v0rne967DP4yMf+Qj7+/uH6+8Xf/EX88Vf/MX/6vvvcY97ICK88pWvPFRFgwiKDhgGZxL8HFQf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3O9+9+Pzn//8l3h15phjjjm+euj54JOf/CSPfexjWVhY4MCBA1N+ev/7389FF13EwsIC9773vfkf/+N/7Pj+7bffznOf+1zud7/7sbi4yN69e7nkkkv427/921P2dfjwYZ761KeytLTE6uoqP/zDP8wHP/hBjDGnREiuvvpqvuu7vou1tTXquuaBD3wgb3zjG7/o+ezatWuH4dPjW7/1W6fHcFcQEfbt28e///f/frosxsiuXbuw1nLrrbdOl//ar/0a3nuOHTsGnMrT97jHPfjYxz7Ge9/7XowxGGO4xz3usWN/Xdfx4he/mIMHD7K8vMyll17Ktdde+0XPcRb/8A//wEUXXYT3nve9732nGD6f+tSneNrTnsbevXupqopv+IZv4NWvfvX0883NTVZXV3n2s599yravv/56nHP8yq/8CrCdbveOd7yDZz7zmaytrbGwsMCTnvSk03Lj7/7u7/KABzyAuq5ZW1vjyU9+Mp/4xCd2rHM6/r3HPe7BE5/4RP7yL/+SBz3oQQwGA+573/vyu7/7u9N1Xve61/F93/d9ADzqUY+aXuP+Ofrwhz/ME5/4xOl5Hzx4kMsuu+wL3v85vjqYGz93A8QYec973sNDHvKQu/RmnH322Tz4wQ/m3e9+9yk5yE95ylO44IIL+OM//mNe85rX3OV+nvnMZ3LFFVfwzGc+k7e+9a187/d+L09+8pOngviLoes6vuu7votHP/rRvPWtb+VZz3oWr3zlK/mlX/qlHetdf/31PPvZz+aNb3wjb3rTm3jKU57Cf/gP/4Gf+ZmfOaP9nCne9ra38du//dv84i/+In/4h3/IxsYGl112GS94wQv4u7/7O37913+d3/qt3+LjH/843/u937vD+Pr0pz/Nwx72MH7jN36Dt7/97bz0pS/l7//+77nooovoum663l/+5V/ylDCmaZ0AAQAASURBVKc8hfX1df7oj/6IX/7lX+YP//APTyFzgGc/+9k8//nP59JLL+Utb3kLV155JR/72Mf49m//9h0EeKY4fvw411xzDfe///2/vAs0xxxzzPFVQtd1POUpT+Gyyy7jrW99K49//ON54QtfyIte9CKe8Yxn8KxnPYs3v/nN3Oc+9+FHfuRHdtQv3nnnnQC87GUv48/+7M947Wtfy/nnn8/FF1+8w+m2tbXFox71KN7znvfwS7/0S7zxjW9k3759/MAP/MApx/Oe97yHhz/84Rw7dozXvOY1vPWtb+XCCy/kB37gB77sNLJ3v/vdeO+5973vfZfrGGO45JJLeOc73zlddvXVV3Ps2DHquuZd73rXdPk73/lOHvzgB7O6unrabb35zW/m/PPP54EPfCBXXXUVV111FW9+85t3rPOiF72Iz33uc/z2b/82v/Vbv8WnPvUpnvSkJ51xbdL73vc+Lr74Yvbu3cv73vc+zj///B2ff/zjH+dbvuVb+Md//Ede8YpX8La3vY3LLruM//gf/yOXX345oI65Zz3rWbz+9a/n+PHjO75/5ZVXUpYlz3rWs3Ys/9Ef/VGstfzBH/wBV1xxBR/4wAe4+OKLd+gfv/ALv8CP/uiPcv/73583velNvOpVr+KjH/0oD3vYw/jUpz71Rc/tIx/5CC94wQv4T//pP02dlj/6oz/K3/zN3wBw2WWX8fM///OAZlv01/iyyy5ja2uLxzzmMdx66628+tWv5h3veAdXXHEF55xzDhsbG2d0bef4CkLm+BePW265RQD5wR/8wS+43g/8wA8IILfeequIiLzsZS8TQF760peesm7/WY+PfexjAshP/uRP7ljvD//wDwWQZzzjGdNl73nPewSQ97znPdNlz3jGMwSQN77xjTu+/4QnPEHuc5/73OUxxxil6zr56Z/+aVlfX5eU0vSzRz7ykfLIRz7yC55zv97973//HcsA2b9/v2xubk6XveUtbxFALrzwwh37ueKKKwSQj370o6fdfkpJuq6Tz33ucwLIW9/61uln3/It3yJnn322NE0zXbaxsSHr6+s7ru9VV10lgLziFa/Yse3Pf/7zMhgM5Cd+4ie+6HmejB/+4R8W771cffXVX/J355hjjjm+Enjta18rgHzwgx+cLuv54E/+5E+my7qukz179ggg11xzzXT5kSNHxDkn/9//9//d5T5CCNJ1nTz60Y+WJz/5ydPlr371qwWQv/iLv9ix/rOf/WwB5LWvfe102X3ve1954AMfKF3X7Vj3iU98ohw4cEBijF/Sef/VX/2VWGvlP/2n//RF1/3t3/5tAeSGG24QEZGf/dmflfve977yXd/1XfLMZz5TRETatpWFhQV50YteNP3eyTwtInL/+9//tLzY8/ITnvCEHcvf+MY3CiBXXXXVFzzG/j4CsrKyIrfddttp13vsYx8rhw4dkuPH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XsqhQ4d4xzvewa5du76kc7r00ku59dZbueKKK3joQx863d+jH/1o3vzmN/PBD37wjFLezjRS8c/Fy1/+ci6//HLe+MY38rSnPY0QAsPhkEc96lF8+MMf5pu/+ZtPex1Pjq78x//4H/mzP/szXvjCF7Jv375pN7WT8frXv37H3//7f/9vPve5z00HnT/sYQ9jMBicYjwdPnyYd7/73Tz60Y/+ipz3mUTKjDE84AEP4JWvfCWrq6tcc801X5F9z3HmmEd+7iZ4+MMfzhVXXMHzn/98LrroIn78x3+cc845hxtuuIFXv/rV/P3f/z1XXHHFlx0yv//9788P/dAP8YpXvALnHJdccgkf+9jHeMUrXsHKygrWfmXs7Msuu4xf+7Vf42lPexr/9t/+W44cOcKv/uqv/l/h7epx3/vel3ve8578l//yXxAR1tbW+NM//dPTTrf+6Z/+aS677DIe+9jH8rznPY8YI7/yK7/C4uLitGMR6P37t//23/LMZz6Tq6++mu/4ju9gYWGBm2++edpK9DnPec5dHtMrXvEKXvrSl/K4xz2Oyy67bJqC12M+d2mOOeb4l4InPvGJ/MzP/Awve9nLeOQjH8m1117LT//0T3PeeeftcMY94xnP4JWvfCVPf/rT+dmf/VkuuOAC/uIv/oK/+qu/AtjBW7/5m7/J4x//eB772MfyIz/yI5x11lnceeedfOITn+Caa67hj//4j+/yeK699tqpYfJzP/dzfOpTn9rRXeye97wne/bs+YLndMkll2CM4e1vf/u0KxqoUdRnGJyJ8dNHH/7oj/6I888/n7quv2ozeF760pdireWnfuqnEBH+8A//kFe96lVcdNFFPOIRj+A5z3kO97jHPdjY2OC6667jT//0T08Zuv30pz+dF77whfzN3/wNL3nJS3bUx87i6quv5t/8m3/D933f9/H5z3+eF7/4xZx11lnTtMTV1VV+6qd+ihe96EX863/9r/mhH/ohjhw5wuWXX05d118xh+A3fuM3AvBbv/VbLC0tUdc15513HldddRVXXnkl3/M938P555+PiPCmN72JY8eO/T8z/PVfEubGz90I/+E//Ae+5Vu+hVe84hW84AUv4MiRI6ytrXHRRRfxvve9j4c97GH/rO2/9rWv5cCBA/zO7/wOr3zlK7nwwgt54xvfyOMe97i7bL35peKSSy7hd3/3d/mlX/olnvSkJ3HWWWfxYz/2Y+zdu5cf/dEf/Yrs45+Loij40z/9U573vOfx7Gc/G+89l156Ke985zt3FEuCDhr9kz/5E1760pfyAz/wA+zfv5/nPve53HTTTadEs37zN3+Thz70ofzmb/4mV155JSklDh48yMMf/vDpvIi7wp/+6Z8C2lr7L//yL0/5XL6CM5LmmGOOOb6eePGLX8xoNOJ3fud3+OVf/mXud7/78ZrXvIY3v/nNO5rDLCws8O53v5vnP//5/MRP/ATGGL7zO7+TK6+8kic84Qk7eOtRj3oUH/jAB/i5n/s5nv/853P06FHW19e53/3ud0qjn5Nx1VVXTdO/T25mA8qdJxfin4z19XUuvPDCaepcj/73/vMvhssvv5ybb76ZH/uxH2NjY4Nzzz2X66+//ot+78vFS17yEqy1vPjFLyalxBve8AauueYafuZnfoaXvOQl3HbbbayurnKve91rR4OLHoPBgCc96Un8/u//Pv/u3/27u9zP7/zO7/A//+f/5Ad/8AdpmoZHPepRvOpVr9pRI/bCF76QvXv38l//63/lj/7ojxgMBlx88cX8/M//PPe6172+Iud73nnnccUVV/CqV72Kiy++mBgjr33ta3nYwx7G6uoqv/zLv8xNN91EWZbc5z73OSU9fo6vDYzMtZ45vor43//7f/Pwhz+c17/+9TztaU/7eh/O/xPouo4LL7yQs846i7e//e1f78OZY4455rhb4ed//ud5yUtewg033HCXs/Hm+NqgbVvucY97cNFFF512oOzrXvc6nvnMZ/LBD36QhzzkIV+HI5zj/0XMIz9zfMXwjne8g6uuuooHP/jBDAYDPvKRj/CLv/iL3Ote97rLItE5dDjbYx7zGA4cOMAtt9zCa17zGj7xiU/wqle96ut9aHPMMccc/6Lx67/+64CmK3ddx7vf/W7+63/9rzz96U+fGz5fR9x+++1ce+21vPa1r+XWW2+dNwSY4yuKufEzx1cMy8vLvP3tb+eKK65gY2OD3bt38/jHP55f+IVfOKVl6Rzb2NjY4D//5//M7bffTlEUPOhBD+LP//zP/9nzGuaYY4455vjCGA6HvPKVr+T666+naRrOOeccfvInf5KXvOQlX+9Du1vjz/7sz3jmM5/JgQMHuPLKK0/b3nqOOb5czNPe5phjjjnmmGOOOeaYY467Beat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vTdv3syFF17Izp07v4/ZndAPgybKz8OAtNZcddVVnHXWWQ9qzTj22GN5/OMfz5VXXonWeux3L3jBCzj55JP527/9W9773vc+6HNe+tKXcskll/DSl76UT3/60/zcz/0cz3/+8yMj/l5UVRXPe97zePrTn86nP/1pXvayl/Hud7+b3/u93xv73Pbt23nVq17Fxz72MT7xiU/wghe8gP/yX/4L73znO4/qOUdLn/nMZ3j/+9/P7/7u7/KRj3yEpaUlLrzwQt7whjfwla98hT/90z/lfe97H7feeis/93M/N6Z83XnnnTzpSU/iz/7sz/j85z/P2972Nr72ta9x9tlnU1VV/Nw//dM/8YIXvIC1a9fy0Y9+lN///d/nIx/5yGFgDvCqV72K17/+9Zx//vl86lOf4rLLLuOWW27hyU9+8hgAfjcyxlDXNXv37uWyyy7jc5/7HG984xv//ZM1oQlNaEI/RKqqihe84AVceOGFfPrTn+bZz342F110EW9605t4yUtewste9jI++clPcuqpp/Irv/IrfP3rX4/fPXDgAABvf/vb+exnP8vll1/OiSeeyDnnnDNmdFtZWeHcc8/lqquu4vd+7/f42Mc+xsaNG/mFX/iFw8Zz1VVX8ZSnPIWFhQXe+9738ulPf5ozzjiDX/iFX/i+wsjqumZlZYWvfOUrvPWtb+Xss8/+rtEWQgjOO+88rrjiinjthhtuYGFhgTzP+eIXvxivX3HFFTz+8Y9nzZo1R7zXJz/5SU488UQe97jHcc0113DNNdfwyU9+cuwzb3rTm9ixYwfvf//7ed/73sftt9/Oc5/73MPkggejL3/5y5xzzjls2LCBL3/5y5x44oljv7/11lt5whOewL/927/xrne9i8985jNceOGF/Nqv/RoXX3wxAFNTU7zsZS/jr//6rzl06NDY9y+77DKyLONlL3vZ2PWXv/zlSCn58Ic/zCWXXMJ1113HOeecMyZ//M7v/A4vf/nLOe200/jEJz7BpZdeys0338yTnvQkbr/99u/5bjfddBNveMMb+K//9b9Go+XLX/5y/uVf/gWACy+8kN/+7d8G4D3veU+c4wsvvJCVlRWe8YxnsHv3bt7znvfwhS98gUsuuYTjjjuOpaWlo5rbCf0QyU7o/3jatWuXBewv/uIvftfP/cIv/IIF7O7du6211r797W+3gH3b29522GfD7wLdcsstFrBvfOMbxz73kY98xAL2JS95Sbx21VVXWcBeddVV8dpLXvISC9iPfexjY9+/4IIL7KmnnvqgY9Za26qq7Dve8Q67du1aa4yJv3va055mn/a0p33Xdw6fO+2008auAXbTpk12eXk5XvvUpz5lAXvGGWeMPeeSSy6xgL355puPeH9jjK2qyu7YscMC9tOf/nT83ROe8AR77LHH2qIo4rWlpSW7du3asfm95pprLGDf9a53jd373nvvtd1u1/76r//693xPa6191ateZQEL2CzL7GWXXXZU35vQhCY0oR8FXX755Raw119/fbwW8ODjH/94vFZVlV2/fr0F7I033hiv79+/3yql7P/z//w/D/qMuq5tVVX26U9/un3+858fr7/nPe+xgP3Hf/zHsc8HPnn55ZfHa4985CPt4x73OFtV1dhnn/Oc59hjjjnGaq2/57sGPh7+XHDBBXZxcfF7fu/973+/Bew999xjrbX2t37rt+wjH/lI+7znPc++9KUvtdZaW5al7ff79k1velP83mqcttba00477Yi4GHD5ggsuGLv+sY99zAL2mmuu+a5jDOsI2NnZWbtnz54jfu6Zz3ym3bp1qz106NDY9de+9rU2z3N74MABa621d955p5VS2ne/+93xM8Ph0K5duza+c/u57XW11tqvfOUrFrC/9Vu/Za219uDBg7bb7R72fvfcc4/tdDr2RS96Ubx2pHk7/vjjbZ7ndseOHWPjmZ+ft6961avitb/92789TL6x1tobbrjBAvZTn/rUEedlQg8tTTw/E4pkveditbv3537u577nd6+++moA/sN/+A9j11/4whcedViVEILnPve5Y9ce+9jHsmPHjrFrV155Jeeffz6zs7MopUjTlLe97W3s37+fPXv2HNWzjobOPfdc+v1+/PlRj3oUAM9+9rPH5ihcb49zz549/Of//J859thjSZKENE05/vjjAaKLfWVlhRtuuIGf/dmfJcuy+N2pqanD5uEzn/kMQghe/OIXU9d1/LNp0yZOP/30o66c96Y3vYnrr7+ez372s7zsZS/jta99LX/4h3/4fczKhCY0oQn96EkIwQUXXBB/TpKEk08+mWOOOYbHPe5x8fr8/DwbNmw4DCfe+973cuaZZ5LneeTBX/ziF8dCnK6++mqmp6d51rOeNfbdX/qlXxr7+Y477uBb3/oW//E//keAMR58wQUX8MADDxxVaNhP/MRPcP3113P11Vdz6aWX8o1vfINnPOMZDAaD7/q9888/HyB6f77whS/wjGc8g/PPPz9WULvmmmtYWVmJn/1B6XnPe97Yz4997GMBDpvf7/b9Q4cO8frXv/4wb9FoNOKLX/wiz3/+8+n1eofN42g04tprrwXgxBNP5DnPeQ6XXXZZlE0+/OEPs3//fl772tce9tywNoGe/OQnc/zxx3PVVVcBbn6Gw+FYCD64qJfzzjtvzIP2YHTGGWdw3HHHxZ/zPOcRj3jEUc3NySefzNzcHG984xt573vfy6233vo9vzOhHx1NlJ+HAa1bt45er8fdd9/9XT+3fft2er0e8/PzY9ePOeaY7/mM/fv3A7Bx48ax60mSsHbt2qMaZ6/XI8/zsWudTofRaBR/vu666/iZn/kZAP7iL/6Cr3zlK1x//fW8+c1vBmA4HB7Vs46GVs9DUFAe7HoYpzGGn/mZn+ETn/gEv/7rv84Xv/hFrrvuusjUwxgPHjwY47lX0+pru3fvjp9N03Tsz7XXXnvU5VKPO+44zjrrLC644AL+7M/+jFe+8pVcdNFF7N2796i+P6EJTWhCDwUdCQ+yLDuM/4brbZz4oz/6I1796lfzxCc+kY9//ONce+21XH/99TzrWc8aw4j9+/cfNf8F+G//7b8dxn9f85rXABwVD+73+5x11lk89alP5dd+7df45Cc/yde+9jX+/M///Lt+7/jjj+ekk07iiiuuYDAYcM0110TlZ+fOnXz729/miiuuoNvt8uQnP/l7juO70Wq87nQ6wNFj61vf+lbe9ra38eEPf5gXv/jFYwrQ/v37qeuaP/mTPzlsHoOi257H173uddx+++1RwXvPe97Dk570pCNWit20adMRrwXZJPx9JHlm8+bN8fffjY4ky3Q6naOam9nZWa6++mrOOOMM3vSmN3HaaaexefNm3v72t4+Fwk/ooaFJpvPDgJRSnHvuufzTP/0TO3fuPGLez86dO/n617/Os5/9bJRSY787mnr3gSns3r2bLVu2xOt1XR8VUzla+pu/+RvSNOUzn/nMGDB+6lOf+qE9499L//Zv/8ZNN93EBz/4QV7ykpfE66uLIszNzSGEOGK+zq5du8Z+XrduHUIIvvSlL0UwatORrh0N/eRP/iTvfe97ueuuu2Ly7YQmNKEJ/e9Mf/VXf8U555zDn/3Zn41dX51bsXbtWq677rrDvn8k/gtw0UUX8YIXvOCIzzz11FO/73GeddZZSCn5zne+8z0/G3Jhr776aowxnHPOOUxPT7N582a+8IUvcMUVV/DTP/3TPzAW/DDp4osvRgjBxRdfjDGGv/7rvyZJEubm5lBK8cu//MtjBRzadMIJJ8R/n3feeTzmMY/hT//0T5mamuLGG2980N50q9csXDv55JOBRkZ54IEHDvvc/fffH9f4R0k/8RM/wd/8zd9greXmm2/mgx/8IO94xzvodrv8xm/8xo/8+RNqaOL5eZjQRRddhLWW17zmNYe5orXWvPrVr8Zay0UXXfQD3f+pT30qAB/96EfHrv/d3/0ddV3/YIM+AgkhSJJkTEEbDod86EMf+qE9499LQVlcDUKrrXvBCvipT31qrM/D8vIyn/nMZ8Y++5znPAdrLffddx9nnXXWYX9+0DKiV111FVLKw5JSJzShCU3of1cSQhzGf2+++ebDerc87WlPY2lpiX/8x38cu/43f/M3Yz+feuqpnHLKKdx0001H5L9nnXUW09PT3/c4gyITBPTvRueffz67d+/mkksu4ad+6qfi857+9KfzyU9+kuuvv/6oQt6O1lPx76Xf/M3f5OKLL+ZjH/sYL3rRi6jrml6vx7nnnss3vvENHvvYxx5xHld7V37t136Nz372s1x00UVs3LgxVlNbTX/913899vNXv/pVduzYEVs8POlJT6Lb7R6mPO3cuZMrr7ySpz/96T+U9z4aT5kQgtNPP513v/vdrFmzhhtvvPGH8uwJHT1NPD8PE3rKU57CJZdcwutf/3rOPvtsXvva13Lcccdxzz338J73vIevfe1rXHLJJT+wy/y0007jl37pl3jXu96FUorzzjuPW265hXe9613Mzs4i5Q9Hz77wwgv5oz/6I170ohfxyle+kv379/OHf/iH/7+wdgV65CMfyUknncRv/MZvYK1lfn6ef/iHfzhid+t3vOMdXHjhhTzzmc/kda97HVpr/uAP/oCpqalYsQjc+r3yla/kpS99KTfccANPfepT6ff7PPDAA7GU6Ktf/eoHHdMrX/lKZmZm+Mmf/Ek2btzIvn37+Nu//Vs++tGP8t//+3+feH0mNKEJ/R9Dz3nOc3jnO9/J29/+dp72tKfx7W9/m3e84x2ccMIJY8a4l7zk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",
      "text/plain": [
       "<Figure size 1000x1200 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def visualize_keypoints(image, keypoints):\n",
    "    img_with_keypoints = cv2.drawKeypoints(image, keypoints, None, flags=cv2.DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS)\n",
    "    img_rgb = cv2.cvtColor(img_with_keypoints, cv2.COLOR_BGR2RGB)\n",
    "    return img_rgb\n",
    "\n",
    "num_images = 3  \n",
    "\n",
    "fig, axes = plt.subplots(num_images, 2, figsize=(10, 4 * num_images)) \n",
    "axes = axes.ravel()  \n",
    "\n",
    "for i in range(num_images):\n",
    "    img = X_train[i + 100] \n",
    "    \n",
    "    axes[2*i].imshow(img)  \n",
    "    axes[2*i].axis('off')  \n",
    "    axes[2*i].set_title(f\"Original Image {i + 1}\")\n",
    "\n",
    "    keypoints, descriptors = sift.detectAndCompute(img, None)\n",
    "    img_with_keypoints = visualize_keypoints(img, keypoints) \n",
    "    \n",
    "    axes[2*i + 1].imshow(img_with_keypoints)  \n",
    "    axes[2*i + 1].axis('off')  \n",
    "    axes[2*i + 1].set_title(f\"Image {i + 1} with Keypoints\")\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Building a Visual Vocabulary:\n",
    "– Cluster the extracted features from all training images into a set of visual words\n",
    "using a clustering algorithm such as K-means. Each cluster center becomes a\n",
    "visual word"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Visual Vocabulary: 50 visual words created.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\gaimer\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "num_clusters = 50  \n",
    "\n",
    "kmeans = KMeans(n_clusters=num_clusters, random_state=42)\n",
    "kmeans.fit(descriptors)\n",
    "visual_vocabulary = kmeans.cluster_centers_\n",
    "\n",
    "print(f\"Visual Vocabulary: {visual_vocabulary.shape[0]} visual words created.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Image Histograms: (1675, 50)\n"
     ]
    }
   ],
   "source": [
    "image_histograms = []\n",
    "\n",
    "for img in X_train:\n",
    "    gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n",
    "    keypoints, descriptors = sift.detectAndCompute(gray_img, None)\n",
    "    \n",
    "    if descriptors is not None:\n",
    "        labels = kmeans.predict(descriptors)\n",
    "        \n",
    "        histogram, _ = np.histogram(labels, bins=np.arange(num_clusters + 1))\n",
    "        image_histograms.append(histogram)\n",
    "  \n",
    "\n",
    "image_histograms = np.array(image_histograms)\n",
    "\n",
    "print(f\"Image Histograms: {image_histograms.shape}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Image 30: No descriptors found\n",
      "Image 55: No descriptors found\n",
      "Image 76: No descriptors found\n",
      "Image 240: No descriptors found\n",
      "Image 631: No descriptors found\n"
     ]
    }
   ],
   "source": [
    "for idx, img in enumerate(X_train):\n",
    "    gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n",
    "    keypoints, descriptors = sift.detectAndCompute(gray_img, None)\n",
    "    if descriptors is not None:\n",
    "        pass\n",
    "    else:\n",
    "        print(f\"Image {idx}: No descriptors found\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### I found that there are 5 images with no descriptors, So i created a default  histogram (all zeros) for missing descriptors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Image Histograms: (1680, 50)\n"
     ]
    }
   ],
   "source": [
    "image_histograms = []\n",
    "\n",
    "for img in X_train:\n",
    "    gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n",
    "    keypoints, descriptors = sift.detectAndCompute(gray_img, None)\n",
    "    \n",
    "    if descriptors is not None:\n",
    "        labels = kmeans.predict(descriptors)\n",
    "        \n",
    "        histogram, _ = np.histogram(labels, bins=np.arange(num_clusters + 1))\n",
    "        image_histograms.append(histogram)\n",
    "    else:\n",
    "        image_histograms.append(np.zeros(num_clusters))\n",
    "  \n",
    "\n",
    "image_histograms = np.array(image_histograms)\n",
    "\n",
    "print(f\"Image Histograms: {image_histograms.shape}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Normalization:\n",
    "#### L2 normalization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n",
       "       [ 1.,  1.,  1., ..., 16.,  2.,  1.],\n",
       "       [ 0.,  0.,  0., ..., 24.,  0.,  0.],\n",
       "       ...,\n",
       "       [ 4., 13., 12., ..., 25.,  9., 34.],\n",
       "       [ 1.,  0.,  3., ...,  3.,  4.,  3.],\n",
       "       [ 0.,  7.,  8., ..., 21., 12., 13.]])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "image_histograms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "image_histograms_norm = normalize(image_histograms, norm='l2')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.        , 0.        , 0.        , ..., 0.        , 0.        ,\n",
       "        0.        ],\n",
       "       [0.00306881, 0.00306881, 0.00306881, ..., 0.04910101, 0.00613763,\n",
       "        0.00306881],\n",
       "       [0.        , 0.        , 0.        , ..., 0.01766526, 0.        ,\n",
       "        0.        ],\n",
       "       ...,\n",
       "       [0.0232041 , 0.07541334, 0.06961231, ..., 0.14502565, 0.05220924,\n",
       "        0.19723489],\n",
       "       [0.02411915, 0.        , 0.07235746, ..., 0.07235746, 0.09647661,\n",
       "        0.07235746],\n",
       "       [0.        , 0.06287707, 0.07185951, ..., 0.18863121, 0.10778926,\n",
       "        0.1167717 ]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "image_histograms_norm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Classifier Training:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(kernel=&#x27;linear&#x27;, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SVC(kernel=&#x27;linear&#x27;, random_state=42)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SVC(kernel='linear', random_state=42)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svm = SVC(kernel='linear', random_state=42)\n",
    "svm.fit(image_histograms_norm, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate Predictions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Image Histograms: (420, 50)\n"
     ]
    }
   ],
   "source": [
    "test_image_histograms = []\n",
    "\n",
    "for img in X_test:\n",
    "    gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n",
    "    keypoints, descriptors = sift.detectAndCompute(gray_img, None)\n",
    "    \n",
    "    if descriptors is not None:\n",
    "        labels = kmeans.predict(descriptors)\n",
    "        \n",
    "        histogram, _ = np.histogram(labels, bins=np.arange(num_clusters + 1))\n",
    "        test_image_histograms.append(histogram)\n",
    "    else:\n",
    "        test_image_histograms.append(np.zeros(num_clusters))\n",
    "  \n",
    "\n",
    "test_image_histograms = np.array(test_image_histograms)\n",
    "\n",
    "print(f\"Image Histograms: {test_image_histograms.shape}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0,  0,  0, ...,  0,  0,  0],\n",
       "       [ 0,  0,  0, ...,  0,  0,  0],\n",
       "       [ 0,  0,  0, ...,  2,  0,  0],\n",
       "       ...,\n",
       "       [10,  9, 20, ..., 20, 26, 11],\n",
       "       [ 5,  7, 16, ..., 24, 17, 21],\n",
       "       [ 2,  7,  1, ..., 11,  6,  7]], dtype=int64)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_image_histograms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_image_histograms_norm = normalize(test_image_histograms, norm='l2')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = svm.predict(test_image_histograms_norm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0,  0,  0, 16,  0,  0,  7,  0,  7,  0,  0,  0,  0,  0,  0,  0,  0,\n",
       "        0,  0,  0,  1,  1, 19,  1,  1,  1, 11,  1,  4,  1,  1,  1,  1,  1,\n",
       "        1,  1,  1,  2,  1,  1, 18,  2,  2, 18,  2,  2,  1,  2,  2,  6, 16,\n",
       "        9,  2, 18, 11,  1, 20, 20, 18,  4,  3,  3,  3,  2, 16,  3,  2, 16,\n",
       "        3,  3,  3, 11,  3,  3,  2,  3,  3,  3, 17, 14,  4, 11, 12,  4,  6,\n",
       "        1,  4,  6,  4,  4,  4,  4,  1, 19,  4,  6, 11,  4,  6,  1,  5,  5,\n",
       "        5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,\n",
       "        5, 19,  4,  6,  4,  4,  4, 13,  4,  6,  6,  4,  6,  6, 15, 12,  6,\n",
       "        6,  6, 12,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,\n",
       "        7,  7,  7,  7,  7,  7,  7, 18,  3, 14, 14,  8, 14,  8, 14,  8,  8,\n",
       "       19,  2,  8,  8, 17, 11,  6, 14,  8,  8,  2, 18,  9, 16,  7,  2, 18,\n",
       "       16, 11,  9,  9,  9, 18,  9,  9, 16,  9, 16, 16,  9, 10, 13,  1, 10,\n",
       "       10, 10, 10, 13, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11,\n",
       "        9, 11, 11, 11, 20, 11, 11,  6, 20, 11, 11, 11, 11, 11, 20, 11, 11,\n",
       "       11,  6, 12, 12, 12,  6, 16,  6, 12, 12, 20, 12, 13, 18, 20, 12, 12,\n",
       "       12, 18, 16, 12,  4, 13, 18, 13, 13, 13, 13, 13, 13, 13, 12, 12, 13,\n",
       "       13, 12, 13, 13,  6,  4, 13, 13, 19, 14, 14, 19,  8, 17,  1,  8, 20,\n",
       "       14, 17,  1, 14, 14, 14, 16, 14, 12, 11, 17, 15, 15, 15, 15, 15, 15,\n",
       "       15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16,  7, 18,\n",
       "       16, 16, 18, 16,  7, 16, 16, 16,  3, 16, 16, 16, 16,  9,  7, 16, 18,\n",
       "       17, 20, 17, 17, 17, 14, 17, 17,  2,  8, 17, 17, 19, 17, 17, 17, 17,\n",
       "       17, 17, 17, 12, 11, 16, 16, 18, 18, 18, 16, 18,  7, 15, 16, 15, 11,\n",
       "       18, 18, 12, 18, 18, 18,  6, 19, 19, 17,  4,  1,  9,  4,  6,  3, 19,\n",
       "       17,  2, 11, 19,  4, 16, 19,  9,  9, 20,  1,  8, 20,  4, 11, 12, 12,\n",
       "       17, 11, 12, 20, 20, 11, 12, 16, 20, 11, 12, 20])"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n",
       "        0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n",
       "        1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,\n",
       "        2,  2,  2,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  3,\n",
       "        3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,\n",
       "        4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  5,  5,\n",
       "        5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,\n",
       "        5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,\n",
       "        6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,\n",
       "        7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,\n",
       "        8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  9,  9,  9,  9,  9,  9,  9,\n",
       "        9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10,\n",
       "       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11,\n",
       "       11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n",
       "       11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\n",
       "       12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n",
       "       13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n",
       "       14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15,\n",
       "       15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16,\n",
       "       16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n",
       "       17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,\n",
       "       17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n",
       "       18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,\n",
       "       19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20,\n",
       "       20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20])"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Performance Evaluation:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Accuracy:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 60.71%\n"
     ]
    }
   ],
   "source": [
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f\"Accuracy: {accuracy * 100:.2f}%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Confusion Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = confusion_matrix(y_test, y_pred)\n",
    "ConfusionMatrixDisplay(cm, display_labels=range(21)).plot(cmap='Greens')\n",
    "plt.title(\"Confusion Matrix\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Trying with 100 cluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Visual Vocabulary: 100 visual words created.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\gaimer\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "num_clusters = 100\n",
    "\n",
    "kmeans = KMeans(n_clusters=num_clusters, random_state=42)\n",
    "kmeans.fit(descriptors)\n",
    "visual_vocabulary = kmeans.cluster_centers_\n",
    "\n",
    "print(f\"Visual Vocabulary: {visual_vocabulary.shape[0]} visual words created.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Image Histograms: (1680, 100)\n"
     ]
    }
   ],
   "source": [
    "image_histograms = []\n",
    "\n",
    "for img in X_train:\n",
    "    gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n",
    "    keypoints, descriptors = sift.detectAndCompute(gray_img, None)\n",
    "    \n",
    "    if descriptors is not None:\n",
    "        labels = kmeans.predict(descriptors)\n",
    "        \n",
    "        histogram, _ = np.histogram(labels, bins=np.arange(num_clusters + 1))\n",
    "        image_histograms.append(histogram)\n",
    "    else:\n",
    "        image_histograms.append(np.zeros(num_clusters))\n",
    "  \n",
    "\n",
    "image_histograms = np.array(image_histograms)\n",
    "\n",
    "print(f\"Image Histograms: {image_histograms.shape}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "image_histograms_norm = normalize(image_histograms, norm='l2')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(kernel=&#x27;linear&#x27;, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SVC(kernel=&#x27;linear&#x27;, random_state=42)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SVC(kernel='linear', random_state=42)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svm = SVC(kernel='linear', random_state=42)\n",
    "svm.fit(image_histograms_norm, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Image Histograms: (420, 100)\n"
     ]
    }
   ],
   "source": [
    "test_image_histograms = []\n",
    "\n",
    "for img in X_test:\n",
    "    gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n",
    "    keypoints, descriptors = sift.detectAndCompute(gray_img, None)\n",
    "    \n",
    "    if descriptors is not None:\n",
    "        labels = kmeans.predict(descriptors)\n",
    "        \n",
    "        histogram, _ = np.histogram(labels, bins=np.arange(num_clusters + 1))\n",
    "        test_image_histograms.append(histogram)\n",
    "    else:\n",
    "        test_image_histograms.append(np.zeros(num_clusters))\n",
    "  \n",
    "\n",
    "test_image_histograms = np.array(test_image_histograms)\n",
    "\n",
    "print(f\"Image Histograms: {test_image_histograms.shape}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_image_histograms_norm = normalize(test_image_histograms, norm='l2')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = svm.predict(test_image_histograms_norm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 60.00%\n"
     ]
    }
   ],
   "source": [
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f\"Accuracy: {accuracy * 100:.2f}%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = confusion_matrix(y_test, y_pred)\n",
    "ConfusionMatrixDisplay(cm, display_labels=range(21)).plot(cmap='Greens')\n",
    "plt.title(\"Confusion Matrix\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Tryin with 500 clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Visual Vocabulary: 200 visual words created.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\gaimer\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "num_clusters = 200\n",
    "\n",
    "kmeans = KMeans(n_clusters=num_clusters, random_state=42)\n",
    "kmeans.fit(descriptors)\n",
    "visual_vocabulary = kmeans.cluster_centers_\n",
    "\n",
    "print(f\"Visual Vocabulary: {visual_vocabulary.shape[0]} visual words created.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Image Histograms: (1680, 200)\n"
     ]
    }
   ],
   "source": [
    "image_histograms = []\n",
    "\n",
    "for img in X_train:\n",
    "    gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n",
    "    keypoints, descriptors = sift.detectAndCompute(gray_img, None)\n",
    "    \n",
    "    if descriptors is not None:\n",
    "        labels = kmeans.predict(descriptors)\n",
    "        \n",
    "        histogram, _ = np.histogram(labels, bins=np.arange(num_clusters + 1))\n",
    "        image_histograms.append(histogram)\n",
    "    else:\n",
    "        image_histograms.append(np.zeros(num_clusters))\n",
    "  \n",
    "\n",
    "image_histograms = np.array(image_histograms)\n",
    "\n",
    "print(f\"Image Histograms: {image_histograms.shape}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "image_histograms_norm = normalize(image_histograms, norm='l2')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-4 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-4 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-4 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-4 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-4 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(kernel=&#x27;linear&#x27;, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SVC(kernel=&#x27;linear&#x27;, random_state=42)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SVC(kernel='linear', random_state=42)"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svm = SVC(kernel='linear', random_state=42)\n",
    "svm.fit(image_histograms_norm, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Image Histograms: (420, 200)\n"
     ]
    }
   ],
   "source": [
    "test_image_histograms = []\n",
    "\n",
    "for img in X_test:\n",
    "    gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n",
    "    keypoints, descriptors = sift.detectAndCompute(gray_img, None)\n",
    "    \n",
    "    if descriptors is not None:\n",
    "        labels = kmeans.predict(descriptors)\n",
    "        \n",
    "        histogram, _ = np.histogram(labels, bins=np.arange(num_clusters + 1))\n",
    "        test_image_histograms.append(histogram)\n",
    "    else:\n",
    "        test_image_histograms.append(np.zeros(num_clusters))\n",
    "  \n",
    "\n",
    "test_image_histograms = np.array(test_image_histograms)\n",
    "\n",
    "print(f\"Image Histograms: {test_image_histograms.shape}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_image_histograms_norm = normalize(test_image_histograms, norm='l2')  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = svm.predict(test_image_histograms_norm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 61.19%\n"
     ]
    }
   ],
   "source": [
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "print(f\"Accuracy: {accuracy * 100:.2f}%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = confusion_matrix(y_test, y_pred)\n",
    "ConfusionMatrixDisplay(cm, display_labels=range(21)).plot(cmap='Greens')\n",
    "plt.title(\"Confusion Matrix\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
